element {
  kind: UNIT_KIND
  child {
    kind: COMMENT
    text: "/* ssl/d1_both.c */"
  }
  child {
    kind: COMMENT
    text: "/* $\n$ * DTLS implementation written by Nagendra Modadugu$\n$ * (nagendra@cs.stanford.edu) for the OpenSSL project 2005.  $\n$ */"
  }
  child {
    kind: COMMENT
    text: "/* ====================================================================$\n$ * Copyright (c) 1998-2005 The OpenSSL Project.  All rights reserved.$\n$ *$\n$ * Redistribution and use in source and binary forms, with or without$\n$ * modification, are permitted provided that the following conditions$\n$ * are met:$\n$ *$\n$ * 1. Redistributions of source code must retain the above copyright$\n$ *    notice, this list of conditions and the following disclaimer. $\n$ *$\n$ * 2. Redistributions in binary form must reproduce the above copyright$\n$ *    notice, this list of conditions and the following disclaimer in$\n$ *    the documentation and/or other materials provided with the$\n$ *    distribution.$\n$ *$\n$ * 3. All advertising materials mentioning features or use of this$\n$ *    software must display the following acknowledgment:$\n$ *    \"This product includes software developed by the OpenSSL Project$\n$ *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)\"$\n$ *$\n$ * 4. The names \"OpenSSL Toolkit\" and \"OpenSSL Project\" must not be used to$\n$ *    endorse or promote products derived from this software without$\n$ *    prior written permission. For written permission, please contact$\n$ *    openssl-core@openssl.org.$\n$ *$\n$ * 5. Products derived from this software may not be called \"OpenSSL\"$\n$ *    nor may \"OpenSSL\" appear in their names without prior written$\n$ *    permission of the OpenSSL Project.$\n$ *$\n$ * 6. Redistributions of any form whatsoever must retain the following$\n$ *    acknowledgment:$\n$ *    \"This product includes software developed by the OpenSSL Project$\n$ *    for use in the OpenSSL Toolkit (http://www.openssl.org/)\"$\n$ *$\n$ * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS\'\' AND ANY$\n$ * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE$\n$ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR$\n$ * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR$\n$ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,$\n$ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT$\n$ * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;$\n$ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)$\n$ * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,$\n$ * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)$\n$ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED$\n$ * OF THE POSSIBILITY OF SUCH DAMAGE.$\n$ * ====================================================================$\n$ *$\n$ * This product includes cryptographic software written by Eric Young$\n$ * (eay@cryptsoft.com).  This product includes software written by Tim$\n$ * Hudson (tjh@cryptsoft.com).$\n$ *$\n$ */"
  }
  child {
    kind: COMMENT
    text: "/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)$\n$ * All rights reserved.$\n$ *$\n$ * This package is an SSL implementation written$\n$ * by Eric Young (eay@cryptsoft.com).$\n$ * The implementation was written so as to conform with Netscapes SSL.$\n$ * $\n$ * This library is free for commercial and non-commercial use as long as$\n$ * the following conditions are aheared to.  The following conditions$\n$ * apply to all code found in this distribution, be it the RC4, RSA,$\n$ * lhash, DES, etc., code; not just the SSL code.  The SSL documentation$\n$ * included with this distribution is covered by the same copyright terms$\n$ * except that the holder is Tim Hudson (tjh@cryptsoft.com).$\n$ * $\n$ * Copyright remains Eric Young\'s, and as such any Copyright notices in$\n$ * the code are not to be removed.$\n$ * If this package is used in a product, Eric Young should be given attribution$\n$ * as the author of the parts of the library used.$\n$ * This can be in the form of a textual message at program startup or$\n$ * in documentation (online or textual) provided with the package.$\n$ * $\n$ * Redistribution and use in source and binary forms, with or without$\n$ * modification, are permitted provided that the following conditions$\n$ * are met:$\n$ * 1. Redistributions of source code must retain the copyright$\n$ *    notice, this list of conditions and the following disclaimer.$\n$ * 2. Redistributions in binary form must reproduce the above copyright$\n$ *    notice, this list of conditions and the following disclaimer in the$\n$ *    documentation and/or other materials provided with the distribution.$\n$ * 3. All advertising materials mentioning features or use of this software$\n$ *    must display the following acknowledgement:$\n$ *    \"This product includes cryptographic software written by$\n$ *     Eric Young (eay@cryptsoft.com)\"$\n$ *    The word \'cryptographic\' can be left out if the rouines from the library$\n$ *    being used are not cryptographic related :-).$\n$ * 4. If you include any Windows specific code (or a derivative thereof) from $\n$ *    the apps directory (application code) you must include an acknowledgement:$\n$ *    \"This product includes software written by Tim Hudson (tjh@cryptsoft.com)\"$\n$ * $\n$ * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS\'\' AND$\n$ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE$\n$ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE$\n$ * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE$\n$ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL$\n$ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS$\n$ * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)$\n$ * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT$\n$ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY$\n$ * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF$\n$ * SUCH DAMAGE.$\n$ * $\n$ * The licence and distribution terms for any publically available version or$\n$ * derivative of this code cannot be changed.  i.e. this code cannot simply be$\n$ * copied and put under another distribution licence$\n$ * [including the GNU Public Licence.]$\n$ */"
  }
  child {
    kind: INCLUDE
    text: "#"
    child {
      kind: DIRECTIVE
      text: "include"
    }
    child {
      kind: FILE
      text: "&lt;limits.h&gt;"
    }
  }
  child {
    kind: INCLUDE
    text: "#"
    child {
      kind: DIRECTIVE
      text: "include"
    }
    child {
      kind: FILE
      text: "&lt;string.h&gt;"
    }
  }
  child {
    kind: INCLUDE
    text: "#"
    child {
      kind: DIRECTIVE
      text: "include"
    }
    child {
      kind: FILE
      text: "&lt;stdio.h&gt;"
    }
  }
  child {
    kind: INCLUDE
    text: "#"
    child {
      kind: DIRECTIVE
      text: "include"
    }
    child {
      kind: FILE
      text: "\"ssl_locl.h\""
    }
  }
  child {
    kind: INCLUDE
    text: "#"
    child {
      kind: DIRECTIVE
      text: "include"
    }
    child {
      kind: FILE
      text: "&lt;openssl/buffer.h&gt;"
    }
  }
  child {
    kind: INCLUDE
    text: "#"
    child {
      kind: DIRECTIVE
      text: "include"
    }
    child {
      kind: FILE
      text: "&lt;openssl/rand.h&gt;"
    }
  }
  child {
    kind: INCLUDE
    text: "#"
    child {
      kind: DIRECTIVE
      text: "include"
    }
    child {
      kind: FILE
      text: "&lt;openssl/objects.h&gt;"
    }
  }
  child {
    kind: INCLUDE
    text: "#"
    child {
      kind: DIRECTIVE
      text: "include"
    }
    child {
      kind: FILE
      text: "&lt;openssl/evp.h&gt;"
    }
  }
  child {
    kind: INCLUDE
    text: "#"
    child {
      kind: DIRECTIVE
      text: "include"
    }
    child {
      kind: FILE
      text: "&lt;openssl/x509.h&gt;"
    }
  }
  child {
    kind: DEFINE
    text: "#"
    child {
      kind: DIRECTIVE
      text: "define"
    }
    child {
      kind: MACRO
      child {
        kind: NAME
        text: "RSMBLY_BITMASK_SIZE"
      }
      child {
        kind: PARAMETER_LIST
        text: "("
        child {
          kind: PARAMETER
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "msg_len"
            }
          }
          tail: ")"
        }
      }
    }
    child {
      kind: VALUE
      text: "(((msg_len) + 7) / 8)"
    }
  }
  child {
    kind: DEFINE
    text: "#"
    child {
      kind: DIRECTIVE
      text: "define"
    }
    child {
      kind: MACRO
      child {
        kind: NAME
        text: "RSMBLY_BITMASK_MARK"
      }
      child {
        kind: PARAMETER_LIST
        text: "("
        child {
          kind: PARAMETER
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bitmask"
            }
          }
          tail: ","
        }
        child {
          kind: PARAMETER
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "start"
            }
          }
          tail: ","
        }
        child {
          kind: PARAMETER
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "end"
            }
          }
          tail: ")"
        }
      }
    }
    child {
      kind: VALUE
      text: "{ \\$\n$                        if ((end) - (start) &lt;= 8) { \\$\n$                                long ii; \\$\n$                                for (ii = (start); ii &lt; (end); ii++) bitmask[((ii) &gt;&gt; 3)] |= (1 &lt;&lt; ((ii) &amp; 7)); \\$\n$                        } else { \\$\n$                                long ii; \\$\n$                                bitmask[((start) &gt;&gt; 3)] |= bitmask_start_values[((start) &amp; 7)]; \\$\n$                                for (ii = (((start) &gt;&gt; 3) + 1); ii &lt; ((((end) - 1)) &gt;&gt; 3); ii++) bitmask[ii] = 0xff; \\$\n$                                bitmask[(((end) - 1) &gt;&gt; 3)] |= bitmask_end_values[((end) &amp; 7)]; \\$\n$                        } }"
    }
  }
  child {
    kind: DEFINE
    text: "#"
    child {
      kind: DIRECTIVE
      text: "define"
    }
    child {
      kind: MACRO
      child {
        kind: NAME
        text: "RSMBLY_BITMASK_IS_COMPLETE"
      }
      child {
        kind: PARAMETER_LIST
        text: "("
        child {
          kind: PARAMETER
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bitmask"
            }
          }
          tail: ","
        }
        child {
          kind: PARAMETER
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "msg_len"
            }
          }
          tail: ","
        }
        child {
          kind: PARAMETER
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "is_complete"
            }
          }
          tail: ")"
        }
      }
    }
    child {
      kind: VALUE
      text: "{ \\$\n$                        long ii; \\$\n$                        OPENSSL_assert((msg_len) &gt; 0); \\$\n$                        is_complete = 1; \\$\n$                        if (bitmask[(((msg_len) - 1) &gt;&gt; 3)] != bitmask_end_values[((msg_len) &amp; 7)]) is_complete = 0; \\$\n$                        if (is_complete) for (ii = (((msg_len) - 1) &gt;&gt; 3) - 1; ii &gt;= 0 ; ii--) \\$\n$                                if (bitmask[ii] != 0xff) { is_complete = 0; break; } }"
    }
  }
  child {
    kind: IF
    text: "#"
    child {
      kind: DIRECTIVE
      text: "if"
    }
    child {
      kind: EXPR
      child {
        kind: LITERAL
        text: "0"
        literal {
          type: number_type
        }
      }
    }
  }
  child {
    kind: DEFINE
    text: "#"
    child {
      kind: DIRECTIVE
      text: "define"
    }
    child {
      kind: MACRO
      child {
        kind: NAME
        text: "RSMBLY_BITMASK_PRINT"
      }
      child {
        kind: PARAMETER_LIST
        text: "("
        child {
          kind: PARAMETER
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bitmask"
            }
          }
          tail: ","
        }
        child {
          kind: PARAMETER
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "msg_len"
            }
          }
          tail: ")"
        }
      }
    }
    child {
      kind: VALUE
      text: "{ \\$\n$                        long ii; \\$\n$                        printf(\"bitmask: \"); for (ii = 0; ii &lt; (msg_len); ii++) \\$\n$                        printf(\"%d \", (bitmask[ii &gt;&gt; 3] &amp; (1 &lt;&lt; (ii &amp; 7))) &gt;&gt; (ii &amp; 7)); \\$\n$                        printf(\"\\n\"); }"
    }
  }
  child {
    kind: ENDIF
    text: "#"
    child {
      kind: DIRECTIVE
      text: "endif"
    }
  }
  child {
    kind: DECL_STMT
    child {
      kind: DECL
      child {
        kind: SPECIFIER
        text: "static"
      }
      child {
        kind: TYPE
        child {
          kind: NAME
          text: "unsigned"
        }
        child {
          kind: NAME
          text: "char"
        }
      }
      child {
        kind: NAME
        child {
          kind: NAME
          text: "bitmask_start_values"
        }
        child {
          kind: INDEX
          text: "[]"
        }
      }
      child {
        kind: INIT
        text: "="
        child {
          kind: EXPR
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "0xff"
                literal {
                  type: number_type
                }
              }
              tail: ","
            }
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "0xfe"
                literal {
                  type: number_type
                }
              }
              tail: ","
            }
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "0xfc"
                literal {
                  type: number_type
                }
              }
              tail: ","
            }
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "0xf8"
                literal {
                  type: number_type
                }
              }
              tail: ","
            }
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "0xf0"
                literal {
                  type: number_type
                }
              }
              tail: ","
            }
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "0xe0"
                literal {
                  type: number_type
                }
              }
              tail: ","
            }
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "0xc0"
                literal {
                  type: number_type
                }
              }
              tail: ","
            }
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "0x80"
                literal {
                  type: number_type
                }
              }
              tail: "}"
            }
          }
        }
      }
      tail: ";"
    }
  }
  child {
    kind: DECL_STMT
    child {
      kind: DECL
      child {
        kind: SPECIFIER
        text: "static"
      }
      child {
        kind: TYPE
        child {
          kind: NAME
          text: "unsigned"
        }
        child {
          kind: NAME
          text: "char"
        }
      }
      child {
        kind: NAME
        child {
          kind: NAME
          text: "bitmask_end_values"
        }
        child {
          kind: INDEX
          text: "[]"
        }
      }
      child {
        kind: INIT
        text: "="
        child {
          kind: EXPR
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "0xff"
                literal {
                  type: number_type
                }
              }
              tail: ","
            }
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "0x01"
                literal {
                  type: number_type
                }
              }
              tail: ","
            }
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "0x03"
                literal {
                  type: number_type
                }
              }
              tail: ","
            }
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "0x07"
                literal {
                  type: number_type
                }
              }
              tail: ","
            }
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "0x0f"
                literal {
                  type: number_type
                }
              }
              tail: ","
            }
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "0x1f"
                literal {
                  type: number_type
                }
              }
              tail: ","
            }
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "0x3f"
                literal {
                  type: number_type
                }
              }
              tail: ","
            }
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "0x7f"
                literal {
                  type: number_type
                }
              }
              tail: "}"
            }
          }
        }
      }
      tail: ";"
    }
  }
  child {
    kind: COMMENT
    text: "/* XDTLS:  figure out the right values */"
  }
  child {
    kind: DECL_STMT
    child {
      kind: DECL
      child {
        kind: SPECIFIER
        text: "static"
      }
      child {
        kind: TYPE
        child {
          kind: NAME
          text: "unsigned"
        }
        child {
          kind: NAME
          text: "int"
        }
      }
      child {
        kind: NAME
        child {
          kind: NAME
          text: "g_probable_mtu"
        }
        child {
          kind: INDEX
          text: "[]"
        }
      }
      child {
        kind: INIT
        text: "="
        child {
          kind: EXPR
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "1500"
                literal {
                  type: number_type
                }
              }
              child {
                kind: OPERATOR
                text: "-"
              }
              child {
                kind: LITERAL
                text: "28"
                literal {
                  type: number_type
                }
              }
              tail: ","
            }
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "512"
                literal {
                  type: number_type
                }
              }
              child {
                kind: OPERATOR
                text: "-"
              }
              child {
                kind: LITERAL
                text: "28"
                literal {
                  type: number_type
                }
              }
              tail: ","
            }
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "256"
                literal {
                  type: number_type
                }
              }
              child {
                kind: OPERATOR
                text: "-"
              }
              child {
                kind: LITERAL
                text: "28"
                literal {
                  type: number_type
                }
              }
              tail: "}"
            }
          }
        }
      }
      tail: ";"
    }
  }
  child {
    kind: FUNCTION_DECL
    child {
      kind: SPECIFIER
      text: "static"
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "unsigned"
      }
      child {
        kind: NAME
        text: "int"
      }
    }
    child {
      kind: NAME
      text: "dtls1_guess_mtu"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "curr_mtu"
          }
        }
        tail: ")"
      }
      tail: ";"
    }
  }
  child {
    kind: FUNCTION_DECL
    child {
      kind: SPECIFIER
      text: "static"
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "void"
      }
    }
    child {
      kind: NAME
      text: "dtls1_fix_message_header"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "SSL"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "s"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "long"
            }
          }
          child {
            kind: NAME
            text: "frag_off"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "long"
            }
          }
          child {
            kind: NAME
            text: "frag_len"
          }
        }
        tail: ")"
      }
      tail: ";"
    }
  }
  child {
    kind: FUNCTION_DECL
    child {
      kind: SPECIFIER
      text: "static"
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "unsigned"
      }
      child {
        kind: NAME
        text: "char"
      }
      child {
        kind: MODIFIER
        text: "*"
      }
    }
    child {
      kind: NAME
      text: "dtls1_write_message_header"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "SSL"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "s"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "p"
          }
        }
        tail: ")"
      }
      tail: ";"
    }
  }
  child {
    kind: FUNCTION_DECL
    child {
      kind: SPECIFIER
      text: "static"
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "void"
      }
    }
    child {
      kind: NAME
      text: "dtls1_set_message_header_int"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "SSL"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "s"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
            }
          }
          child {
            kind: NAME
            text: "mt"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "long"
            }
          }
          child {
            kind: NAME
            text: "len"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "short"
            }
          }
          child {
            kind: NAME
            text: "seq_num"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "long"
            }
          }
          child {
            kind: NAME
            text: "frag_off"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "long"
            }
          }
          child {
            kind: NAME
            text: "frag_len"
          }
        }
        tail: ")"
      }
      tail: ";"
    }
  }
  child {
    kind: FUNCTION_DECL
    child {
      kind: SPECIFIER
      text: "static"
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "long"
      }
    }
    child {
      kind: NAME
      text: "dtls1_get_message_fragment"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "SSL"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "s"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "st1"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "stn"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "long"
            }
          }
          child {
            kind: NAME
            text: "max"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "ok"
          }
        }
        tail: ")"
      }
      tail: ";"
    }
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "static"
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "hm_fragment"
      }
      child {
        kind: MODIFIER
        text: "*"
      }
    }
    child {
      kind: NAME
      text: "dtls1_hm_fragment_new"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "long"
            }
          }
          child {
            kind: NAME
            text: "frag_len"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "reassembly"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "hm_fragment"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "frag"
          }
          child {
            kind: INIT
            text: "="
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "NULL"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "buf"
          }
          child {
            kind: INIT
            text: "="
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "NULL"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "bitmask"
          }
          child {
            kind: INIT
            text: "="
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "NULL"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "frag"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "hm_fragment"
          }
          child {
            kind: OPERATOR
            text: "*"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "OPENSSL_malloc"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: SIZEOF
                    text: "sizeof"
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "hm_fragment"
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "frag"
            }
            child {
              kind: OPERATOR
              text: "=="
            }
            child {
              kind: NAME
              text: "NULL"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return"
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "NULL"
                }
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "frag_len"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "buf"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "unsigned"
                }
                child {
                  kind: NAME
                  text: "char"
                }
                child {
                  kind: OPERATOR
                  text: "*"
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "OPENSSL_malloc"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "frag_len"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: IF
              text: "if"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "buf"
                  }
                  child {
                    kind: OPERATOR
                    text: "=="
                  }
                  child {
                    kind: NAME
                    text: "NULL"
                  }
                  tail: ")"
                }
              }
              child {
                kind: THEN
                child {
                  kind: BLOCK
                  text: "{"
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "OPENSSL_free"
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "frag"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                      tail: ";"
                    }
                  }
                  child {
                    kind: RETURN
                    text: "return"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "NULL"
                      }
                      tail: ";"
                    }
                    tail: "}"
                  }
                }
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/* zero length fragment gets zero frag-&gt;fragment */"
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "frag"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "fragment"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            text: "buf"
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* Initialize reassembly bitmask if necessary */"
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "reassembly"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "bitmask"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "unsigned"
                }
                child {
                  kind: NAME
                  text: "char"
                }
                child {
                  kind: OPERATOR
                  text: "*"
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "OPENSSL_malloc"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "RSMBLY_BITMASK_SIZE"
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "frag_len"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: IF
              text: "if"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "bitmask"
                  }
                  child {
                    kind: OPERATOR
                    text: "=="
                  }
                  child {
                    kind: NAME
                    text: "NULL"
                  }
                  tail: ")"
                }
              }
              child {
                kind: THEN
                child {
                  kind: BLOCK
                  text: "{"
                  child {
                    kind: IF
                    text: "if"
                    child {
                      kind: CONDITION
                      text: "("
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "buf"
                        }
                        child {
                          kind: OPERATOR
                          text: "!="
                        }
                        child {
                          kind: NAME
                          text: "NULL"
                        }
                        tail: ")"
                      }
                    }
                    child {
                      kind: THEN
                      child {
                        kind: BLOCK
                        child {
                          kind: EXPR_STMT
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "OPENSSL_free"
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "buf"
                                    }
                                  }
                                  tail: ")"
                                }
                              }
                            }
                            tail: ";"
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "OPENSSL_free"
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "frag"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                      tail: ";"
                    }
                  }
                  child {
                    kind: RETURN
                    text: "return"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "NULL"
                      }
                      tail: ";"
                    }
                    tail: "}"
                  }
                }
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "memset"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "bitmask"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: LITERAL
                          text: "0"
                          literal {
                            type: number_type
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "RSMBLY_BITMASK_SIZE"
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "frag_len"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "frag"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "reassembly"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            text: "bitmask"
          }
          tail: ";"
        }
      }
      child {
        kind: RETURN
        text: "return"
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "frag"
          }
          tail: ";"
        }
        tail: "}"
      }
    }
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "static"
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "void"
      }
    }
    child {
      kind: NAME
      text: "dtls1_hm_fragment_free"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "hm_fragment"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "frag"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "frag"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "msg_header"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "is_ccs"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "EVP_CIPHER_CTX_free"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "frag"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "msg_header"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "saved_retransmit_state"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "enc_write_ctx"
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "EVP_MD_CTX_destroy"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "frag"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "msg_header"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "saved_retransmit_state"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "write_hash"
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "frag"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "fragment"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "OPENSSL_free"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "frag"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "fragment"
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "frag"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "reassembly"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "OPENSSL_free"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "frag"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "reassembly"
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "OPENSSL_free"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "frag"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
        tail: "}"
      }
    }
  }
  child {
    kind: COMMENT
    text: "/* send s-&gt;init_buf in records of type \'type\' (SSL3_RT_HANDSHAKE or SSL3_RT_CHANGE_CIPHER_SPEC) */"
  }
  child {
    kind: FUNCTION
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "int"
      }
    }
    child {
      kind: NAME
      text: "dtls1_do_write"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "SSL"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "s"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "type"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "ret"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "curr_mtu"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "len"
          }
          tail: ","
        }
        child {
          kind: DECL
          child {
            kind: TYPE
            text: "This is just a placeholder. Please ignore this child."
          }
          child {
            kind: NAME
            text: "frag_off"
          }
          tail: ","
        }
        child {
          kind: DECL
          child {
            kind: TYPE
            text: "This is just a placeholder. Please ignore this child."
          }
          child {
            kind: NAME
            text: "mac_size"
          }
          tail: ","
        }
        child {
          kind: DECL
          child {
            kind: TYPE
            text: "This is just a placeholder. Please ignore this child."
          }
          child {
            kind: NAME
            text: "blocksize"
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* AHA!  Figure out the MTU, and stick to the right size */"
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "d1"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "mtu"
              }
            }
            child {
              kind: OPERATOR
              text: "&lt;"
            }
            child {
              kind: CALL
              child {
                kind: NAME
                text: "dtls1_min_mtu"
              }
              child {
                kind: ARGUMENT_LIST
                text: "()"
              }
            }
            child {
              kind: OPERATOR
              text: "&amp;&amp;"
            }
            child {
              kind: OPERATOR
              text: "!"
            }
            child {
              kind: OPERATOR
              text: "("
            }
            child {
              kind: CALL
              child {
                kind: NAME
                text: "SSL_get_options"
              }
              child {
                kind: ARGUMENT_LIST
                text: "("
                child {
                  kind: ARGUMENT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "s"
                    }
                  }
                  tail: ")"
                }
              }
            }
            child {
              kind: OPERATOR
              text: "&amp;"
            }
            child {
              kind: NAME
              text: "SSL_OP_NO_QUERY_MTU"
            }
            child {
              kind: OPERATOR
              text: ")"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "d1"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "mtu"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "BIO_ctrl"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "SSL_get_wbio"
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "s"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "BIO_CTRL_DGRAM_QUERY_MTU"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: LITERAL
                          text: "0"
                          literal {
                            type: number_type
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "NULL"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: COMMENT
              text: "/* I\'ve seen the kernel return bogus numbers when it doesn\'t know$\n$                 * (initial write), so just make sure we have a reasonable number */"
            }
            child {
              kind: IF
              text: "if"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "s"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "d1"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "mtu"
                    }
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "dtls1_min_mtu"
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                  tail: ")"
                }
              }
              child {
                kind: THEN
                child {
                  kind: BLOCK
                  text: "{"
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "s"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "d1"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "mtu"
                        }
                      }
                      child {
                        kind: OPERATOR
                        text: "="
                      }
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                          type: number_type
                        }
                      }
                      tail: ";"
                    }
                  }
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "s"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "d1"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "mtu"
                        }
                      }
                      child {
                        kind: OPERATOR
                        text: "="
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "dtls1_guess_mtu"
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "s"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-&gt;"
                                }
                                child {
                                  kind: NAME
                                  text: "d1"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-&gt;"
                                }
                                child {
                                  kind: NAME
                                  text: "mtu"
                                }
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                      tail: ";"
                    }
                  }
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "BIO_ctrl"
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "SSL_get_wbio"
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "s"
                                      }
                                    }
                                    tail: ")"
                                  }
                                }
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "BIO_CTRL_DGRAM_SET_MTU"
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "s"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-&gt;"
                                }
                                child {
                                  kind: NAME
                                  text: "d1"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-&gt;"
                                }
                                child {
                                  kind: NAME
                                  text: "mtu"
                                }
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "NULL"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                      tail: ";"
                    }
                    tail: "}"
                  }
                }
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: IF
        text: "#"
        child {
          kind: DIRECTIVE
          text: "if"
        }
        child {
          kind: EXPR
          child {
            kind: LITERAL
            text: "0"
            literal {
              type: number_type
            }
          }
        }
        tail: "mtu = s-&gt;d1-&gt;mtu;$\n$$\n$        fprintf(stderr, \"using MTU = %d\\n\", mtu);$\n$$\n$        mtu -= (DTLS1_HM_HEADER_LENGTH + DTLS1_RT_HEADER_LENGTH);$\n$$\n$        curr_mtu = mtu - BIO_wpending(SSL_get_wbio(s));$\n$$\n$        if ( curr_mtu &gt; 0)$\n$                mtu = curr_mtu;$\n$        else if ( ( ret = BIO_flush(SSL_get_wbio(s))) &lt;= 0)$\n$                return ret;$\n$$\n$        if ( BIO_wpending(SSL_get_wbio(s)) + s-&gt;init_num &gt;= mtu)$\n$                {$\n$                ret = BIO_flush(SSL_get_wbio(s));$\n$                if ( ret &lt;= 0)$\n$                        return ret;$\n$                mtu = s-&gt;d1-&gt;mtu - (DTLS1_HM_HEADER_LENGTH + DTLS1_RT_HEADER_LENGTH);$\n$                }"
      }
      child {
        kind: ENDIF
        text: "#"
        child {
          kind: DIRECTIVE
          text: "endif"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "OPENSSL_assert"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "s"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "d1"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "mtu"
                    }
                  }
                  child {
                    kind: OPERATOR
                    text: "&gt;="
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "dtls1_min_mtu"
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* should have something reasonable now */"
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "init_off"
              }
            }
            child {
              kind: OPERATOR
              text: "=="
            }
            child {
              kind: LITERAL
              text: "0"
              literal {
                type: number_type
              }
            }
            child {
              kind: OPERATOR
              text: "&amp;&amp;"
            }
            child {
              kind: NAME
              text: "type"
            }
            child {
              kind: OPERATOR
              text: "=="
            }
            child {
              kind: NAME
              text: "SSL3_RT_HANDSHAKE"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "OPENSSL_assert"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "init_num"
                          }
                        }
                        child {
                          kind: OPERATOR
                          text: "=="
                        }
                        child {
                          kind: OPERATOR
                          text: "("
                        }
                        child {
                          kind: NAME
                          text: "int"
                        }
                        child {
                          kind: OPERATOR
                          text: ")"
                        }
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "d1"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "w_msg_hdr"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "msg_len"
                          }
                        }
                        child {
                          kind: OPERATOR
                          text: "+"
                        }
                        child {
                          kind: NAME
                          text: "DTLS1_HM_HEADER_LENGTH"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "write_hash"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "mac_size"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "EVP_MD_CTX_size"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "write_hash"
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
          }
        }
        child {
          kind: ELSE
          text: "else"
          child {
            kind: BLOCK
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "mac_size"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: LITERAL
                  text: "0"
                  literal {
                    type: number_type
                  }
                }
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "enc_write_ctx"
              }
            }
            child {
              kind: OPERATOR
              text: "&amp;&amp;"
            }
            child {
              kind: OPERATOR
              text: "("
            }
            child {
              kind: CALL
              child {
                kind: NAME
                text: "EVP_CIPHER_mode"
              }
              child {
                kind: ARGUMENT_LIST
                text: "("
                child {
                  kind: ARGUMENT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "s"
                      }
                      child {
                        kind: OPERATOR
                        text: "-&gt;"
                      }
                      child {
                        kind: NAME
                        text: "enc_write_ctx"
                      }
                      child {
                        kind: OPERATOR
                        text: "-&gt;"
                      }
                      child {
                        kind: NAME
                        text: "cipher"
                      }
                    }
                  }
                  tail: ")"
                }
              }
            }
            child {
              kind: OPERATOR
              text: "&amp;"
            }
            child {
              kind: NAME
              text: "EVP_CIPH_CBC_MODE"
            }
            child {
              kind: OPERATOR
              text: ")"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "blocksize"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: LITERAL
                  text: "2"
                  literal {
                    type: number_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: "*"
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "EVP_CIPHER_block_size"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "enc_write_ctx"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "cipher"
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
          }
        }
        child {
          kind: ELSE
          text: "else"
          child {
            kind: BLOCK
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "blocksize"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: LITERAL
                  text: "0"
                  literal {
                    type: number_type
                  }
                }
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "frag_off"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: LITERAL
            text: "0"
            literal {
              type: number_type
            }
          }
          tail: ";"
        }
      }
      child {
        kind: WHILE
        text: "while"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "init_num"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: BLOCK
          text: "{"
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "curr_mtu"
              }
              child {
                kind: OPERATOR
                text: "="
              }
              child {
                kind: NAME
                child {
                  kind: NAME
                  text: "s"
                }
                child {
                  kind: OPERATOR
                  text: "-&gt;"
                }
                child {
                  kind: NAME
                  text: "d1"
                }
                child {
                  kind: OPERATOR
                  text: "-&gt;"
                }
                child {
                  kind: NAME
                  text: "mtu"
                }
              }
              child {
                kind: OPERATOR
                text: "-"
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "BIO_wpending"
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "SSL_get_wbio"
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "s"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              child {
                kind: OPERATOR
                text: "-"
              }
              child {
                kind: NAME
                text: "DTLS1_RT_HEADER_LENGTH"
              }
              child {
                kind: OPERATOR
                text: "-"
              }
              child {
                kind: NAME
                text: "mac_size"
              }
              child {
                kind: OPERATOR
                text: "-"
              }
              child {
                kind: NAME
                text: "blocksize"
              }
              tail: ";"
            }
          }
          child {
            kind: IF
            text: "if"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "curr_mtu"
                }
                child {
                  kind: OPERATOR
                  text: "&lt;="
                }
                child {
                  kind: NAME
                  text: "DTLS1_HM_HEADER_LENGTH"
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              child {
                kind: BLOCK
                text: "{"
                child {
                  kind: COMMENT
                  text: "/* grr.. we could get an error if MTU picked was wrong */"
                }
                child {
                  kind: EXPR_STMT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "ret"
                    }
                    child {
                      kind: OPERATOR
                      text: "="
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "BIO_flush"
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "SSL_get_wbio"
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "s"
                                    }
                                  }
                                  tail: ")"
                                }
                              }
                            }
                          }
                          tail: ")"
                        }
                      }
                    }
                    tail: ";"
                  }
                }
                child {
                  kind: IF
                  text: "if"
                  child {
                    kind: CONDITION
                    text: "("
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "ret"
                      }
                      child {
                        kind: OPERATOR
                        text: "&lt;="
                      }
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                          type: number_type
                        }
                      }
                      tail: ")"
                    }
                  }
                  child {
                    kind: THEN
                    child {
                      kind: BLOCK
                      child {
                        kind: RETURN
                        text: "return"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "ret"
                          }
                          tail: ";"
                        }
                      }
                    }
                  }
                }
                child {
                  kind: EXPR_STMT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "curr_mtu"
                    }
                    child {
                      kind: OPERATOR
                      text: "="
                    }
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "s"
                      }
                      child {
                        kind: OPERATOR
                        text: "-&gt;"
                      }
                      child {
                        kind: NAME
                        text: "d1"
                      }
                      child {
                        kind: OPERATOR
                        text: "-&gt;"
                      }
                      child {
                        kind: NAME
                        text: "mtu"
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "-"
                    }
                    child {
                      kind: NAME
                      text: "DTLS1_RT_HEADER_LENGTH"
                    }
                    child {
                      kind: OPERATOR
                      text: "-"
                    }
                    child {
                      kind: NAME
                      text: "mac_size"
                    }
                    child {
                      kind: OPERATOR
                      text: "-"
                    }
                    child {
                      kind: NAME
                      text: "blocksize"
                    }
                    tail: ";"
                  }
                  tail: "}"
                }
              }
            }
          }
          child {
            kind: IF
            text: "if"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "init_num"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "&gt;"
                }
                child {
                  kind: NAME
                  text: "curr_mtu"
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              child {
                kind: BLOCK
                child {
                  kind: EXPR_STMT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "len"
                    }
                    child {
                      kind: OPERATOR
                      text: "="
                    }
                    child {
                      kind: NAME
                      text: "curr_mtu"
                    }
                    tail: ";"
                  }
                }
              }
            }
            child {
              kind: ELSE
              text: "else"
              child {
                kind: BLOCK
                child {
                  kind: EXPR_STMT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "len"
                    }
                    child {
                      kind: OPERATOR
                      text: "="
                    }
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "s"
                      }
                      child {
                        kind: OPERATOR
                        text: "-&gt;"
                      }
                      child {
                        kind: NAME
                        text: "init_num"
                      }
                    }
                    tail: ";"
                  }
                }
              }
            }
          }
          child {
            kind: COMMENT
            text: "/* XDTLS: this function is too long.  split out the CCS part */"
          }
          child {
            kind: IF
            text: "if"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "type"
                }
                child {
                  kind: OPERATOR
                  text: "=="
                }
                child {
                  kind: NAME
                  text: "SSL3_RT_HANDSHAKE"
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              child {
                kind: BLOCK
                text: "{"
                child {
                  kind: IF
                  text: "if"
                  child {
                    kind: CONDITION
                    text: "("
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "s"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "init_off"
                        }
                      }
                      child {
                        kind: OPERATOR
                        text: "!="
                      }
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                          type: number_type
                        }
                      }
                      tail: ")"
                    }
                  }
                  child {
                    kind: THEN
                    child {
                      kind: BLOCK
                      text: "{"
                      child {
                        kind: EXPR_STMT
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "OPENSSL_assert"
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    child {
                                      kind: NAME
                                      text: "s"
                                    }
                                    child {
                                      kind: OPERATOR
                                      text: "-&gt;"
                                    }
                                    child {
                                      kind: NAME
                                      text: "init_off"
                                    }
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "&gt;"
                                  }
                                  child {
                                    kind: NAME
                                    text: "DTLS1_HM_HEADER_LENGTH"
                                  }
                                }
                                tail: ")"
                              }
                            }
                          }
                          tail: ";"
                        }
                      }
                      child {
                        kind: EXPR_STMT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "s"
                            }
                            child {
                              kind: OPERATOR
                              text: "-&gt;"
                            }
                            child {
                              kind: NAME
                              text: "init_off"
                            }
                          }
                          child {
                            kind: OPERATOR
                            text: "-="
                          }
                          child {
                            kind: NAME
                            text: "DTLS1_HM_HEADER_LENGTH"
                          }
                          tail: ";"
                        }
                      }
                      child {
                        kind: EXPR_STMT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "s"
                            }
                            child {
                              kind: OPERATOR
                              text: "-&gt;"
                            }
                            child {
                              kind: NAME
                              text: "init_num"
                            }
                          }
                          child {
                            kind: OPERATOR
                            text: "+="
                          }
                          child {
                            kind: NAME
                            text: "DTLS1_HM_HEADER_LENGTH"
                          }
                          tail: ";"
                        }
                      }
                      child {
                        kind: IF
                        text: "if"
                        child {
                          kind: CONDITION
                          text: "("
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "s"
                              }
                              child {
                                kind: OPERATOR
                                text: "-&gt;"
                              }
                              child {
                                kind: NAME
                                text: "init_num"
                              }
                            }
                            child {
                              kind: OPERATOR
                              text: "&gt;"
                            }
                            child {
                              kind: NAME
                              text: "curr_mtu"
                            }
                            tail: ")"
                          }
                        }
                        child {
                          kind: THEN
                          child {
                            kind: BLOCK
                            child {
                              kind: EXPR_STMT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "len"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "="
                                }
                                child {
                                  kind: NAME
                                  text: "curr_mtu"
                                }
                                tail: ";"
                              }
                            }
                          }
                        }
                        child {
                          kind: ELSE
                          text: "else"
                          child {
                            kind: BLOCK
                            child {
                              kind: EXPR_STMT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "len"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "="
                                }
                                child {
                                  kind: NAME
                                  child {
                                    kind: NAME
                                    text: "s"
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "-&gt;"
                                  }
                                  child {
                                    kind: NAME
                                    text: "init_num"
                                  }
                                }
                                tail: ";"
                              }
                            }
                          }
                        }
                        tail: "}"
                      }
                    }
                  }
                }
                child {
                  kind: EXPR_STMT
                  child {
                    kind: EXPR
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "dtls1_fix_message_header"
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "s"
                            }
                          }
                          tail: ","
                        }
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "frag_off"
                            }
                          }
                          tail: ","
                        }
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "len"
                            }
                            child {
                              kind: OPERATOR
                              text: "-"
                            }
                            child {
                              kind: NAME
                              text: "DTLS1_HM_HEADER_LENGTH"
                            }
                          }
                          tail: ")"
                        }
                      }
                    }
                    tail: ";"
                  }
                }
                child {
                  kind: EXPR_STMT
                  child {
                    kind: EXPR
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "dtls1_write_message_header"
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "s"
                            }
                          }
                          tail: ","
                        }
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: OPERATOR
                              text: "("
                            }
                            child {
                              kind: NAME
                              text: "unsigned"
                            }
                            child {
                              kind: NAME
                              text: "char"
                            }
                            child {
                              kind: OPERATOR
                              text: "*"
                            }
                            child {
                              kind: OPERATOR
                              text: ")"
                            }
                            child {
                              kind: OPERATOR
                              text: "&amp;"
                            }
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "s"
                              }
                              child {
                                kind: OPERATOR
                                text: "-&gt;"
                              }
                              child {
                                kind: NAME
                                text: "init_buf"
                              }
                              child {
                                kind: OPERATOR
                                text: "-&gt;"
                              }
                              child {
                                kind: NAME
                                text: "data"
                              }
                              child {
                                kind: INDEX
                                text: "["
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    child {
                                      kind: NAME
                                      text: "s"
                                    }
                                    child {
                                      kind: OPERATOR
                                      text: "-&gt;"
                                    }
                                    child {
                                      kind: NAME
                                      text: "init_off"
                                    }
                                  }
                                  tail: "]"
                                }
                              }
                            }
                          }
                          tail: ")"
                        }
                      }
                    }
                    tail: ";"
                  }
                }
                child {
                  kind: EXPR_STMT
                  child {
                    kind: EXPR
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "OPENSSL_assert"
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "len"
                            }
                            child {
                              kind: OPERATOR
                              text: "&gt;="
                            }
                            child {
                              kind: NAME
                              text: "DTLS1_HM_HEADER_LENGTH"
                            }
                          }
                          tail: ")"
                        }
                      }
                    }
                    tail: ";"
                  }
                  tail: "}"
                }
              }
            }
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "ret"
              }
              child {
                kind: OPERATOR
                text: "="
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "dtls1_write_bytes"
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "s"
                      }
                    }
                    tail: ","
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "type"
                      }
                    }
                    tail: ","
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "&amp;"
                      }
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "s"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "init_buf"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "data"
                        }
                        child {
                          kind: INDEX
                          text: "["
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "s"
                              }
                              child {
                                kind: OPERATOR
                                text: "-&gt;"
                              }
                              child {
                                kind: NAME
                                text: "init_off"
                              }
                            }
                            tail: "]"
                          }
                        }
                      }
                    }
                    tail: ","
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "len"
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
          }
          child {
            kind: IF
            text: "if"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "ret"
                }
                child {
                  kind: OPERATOR
                  text: "&lt;"
                }
                child {
                  kind: LITERAL
                  text: "0"
                  literal {
                    type: number_type
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              child {
                kind: BLOCK
                text: "{"
                child {
                  kind: COMMENT
                  text: "/* might need to update MTU here, but we don\'t know$\n$                         * which previous packet caused the failure -- so can\'t$\n$                         * really retransmit anything.  continue as if everything$\n$                         * is fine and wait for an alert to handle the$\n$                         * retransmit $\n$                         */"
                }
                child {
                  kind: IF
                  text: "if"
                  child {
                    kind: CONDITION
                    text: "("
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "BIO_ctrl"
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "SSL_get_wbio"
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "s"
                                      }
                                    }
                                    tail: ")"
                                  }
                                }
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "BIO_CTRL_DGRAM_MTU_EXCEEDED"
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "0"
                                literal {
                                  type: number_type
                                }
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "NULL"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                      child {
                        kind: OPERATOR
                        text: "&gt;"
                      }
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                          type: number_type
                        }
                      }
                      tail: ")"
                    }
                  }
                  child {
                    kind: THEN
                    child {
                      kind: BLOCK
                      child {
                        kind: EXPR_STMT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "s"
                            }
                            child {
                              kind: OPERATOR
                              text: "-&gt;"
                            }
                            child {
                              kind: NAME
                              text: "d1"
                            }
                            child {
                              kind: OPERATOR
                              text: "-&gt;"
                            }
                            child {
                              kind: NAME
                              text: "mtu"
                            }
                          }
                          child {
                            kind: OPERATOR
                            text: "="
                          }
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "BIO_ctrl"
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: CALL
                                    child {
                                      kind: NAME
                                      text: "SSL_get_wbio"
                                    }
                                    child {
                                      kind: ARGUMENT_LIST
                                      text: "("
                                      child {
                                        kind: ARGUMENT
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: NAME
                                            text: "s"
                                          }
                                        }
                                        tail: ")"
                                      }
                                    }
                                  }
                                }
                                tail: ","
                              }
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "BIO_CTRL_DGRAM_QUERY_MTU"
                                  }
                                }
                                tail: ","
                              }
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: LITERAL
                                    text: "0"
                                    literal {
                                      type: number_type
                                    }
                                  }
                                }
                                tail: ","
                              }
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "NULL"
                                  }
                                }
                                tail: ")"
                              }
                            }
                          }
                          tail: ";"
                        }
                      }
                    }
                  }
                  child {
                    kind: ELSE
                    text: "else"
                    child {
                      kind: BLOCK
                      child {
                        kind: RETURN
                        text: "return"
                        child {
                          kind: EXPR
                          child {
                            kind: OPERATOR
                            text: "("
                          }
                          child {
                            kind: OPERATOR
                            text: "-"
                          }
                          child {
                            kind: LITERAL
                            text: "1"
                            literal {
                              type: number_type
                            }
                          }
                          child {
                            kind: OPERATOR
                            text: ")"
                          }
                          tail: ";"
                        }
                      }
                    }
                  }
                  tail: "}"
                }
              }
            }
            child {
              kind: ELSE
              text: "else"
              child {
                kind: BLOCK
                text: "{"
                child {
                  kind: COMMENT
                  text: "/* bad if this assert fails, only part of the handshake$\n$                         * message got sent.  but why would this happen? */"
                }
                child {
                  kind: EXPR_STMT
                  child {
                    kind: EXPR
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "OPENSSL_assert"
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "len"
                            }
                            child {
                              kind: OPERATOR
                              text: "=="
                            }
                            child {
                              kind: OPERATOR
                              text: "("
                            }
                            child {
                              kind: NAME
                              text: "unsigned"
                            }
                            child {
                              kind: NAME
                              text: "int"
                            }
                            child {
                              kind: OPERATOR
                              text: ")"
                            }
                            child {
                              kind: NAME
                              text: "ret"
                            }
                          }
                          tail: ")"
                        }
                      }
                    }
                    tail: ";"
                  }
                }
                child {
                  kind: IF
                  text: "if"
                  child {
                    kind: CONDITION
                    text: "("
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "type"
                      }
                      child {
                        kind: OPERATOR
                        text: "=="
                      }
                      child {
                        kind: NAME
                        text: "SSL3_RT_HANDSHAKE"
                      }
                      child {
                        kind: OPERATOR
                        text: "&amp;&amp;"
                      }
                      child {
                        kind: OPERATOR
                        text: "!"
                      }
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "s"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "d1"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "retransmitting"
                        }
                      }
                      tail: ")"
                    }
                  }
                  child {
                    kind: THEN
                    child {
                      kind: BLOCK
                      text: "{"
                      child {
                        kind: COMMENT
                        text: "/* should not be done for \'Hello Request\'s, but in that case$\n$                                 * we\'ll ignore the result anyway */"
                      }
                      child {
                        kind: DECL_STMT
                        child {
                          kind: DECL
                          child {
                            kind: TYPE
                            child {
                              kind: NAME
                              text: "unsigned"
                            }
                            child {
                              kind: NAME
                              text: "char"
                            }
                            child {
                              kind: MODIFIER
                              text: "*"
                            }
                          }
                          child {
                            kind: NAME
                            text: "p"
                          }
                          child {
                            kind: INIT
                            text: "="
                            child {
                              kind: EXPR
                              child {
                                kind: OPERATOR
                                text: "("
                              }
                              child {
                                kind: NAME
                                text: "unsigned"
                              }
                              child {
                                kind: NAME
                                text: "char"
                              }
                              child {
                                kind: OPERATOR
                                text: "*"
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                              }
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "s"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-&gt;"
                                }
                                child {
                                  kind: NAME
                                  text: "init_buf"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-&gt;"
                                }
                                child {
                                  kind: NAME
                                  text: "data"
                                }
                                child {
                                  kind: INDEX
                                  text: "["
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      child {
                                        kind: NAME
                                        text: "s"
                                      }
                                      child {
                                        kind: OPERATOR
                                        text: "-&gt;"
                                      }
                                      child {
                                        kind: NAME
                                        text: "init_off"
                                      }
                                    }
                                    tail: "]"
                                  }
                                }
                              }
                            }
                          }
                          tail: ";"
                        }
                      }
                      child {
                        kind: DECL_STMT
                        child {
                          kind: DECL
                          child {
                            kind: TYPE
                            child {
                              kind: SPECIFIER
                              text: "const"
                            }
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "struct"
                              }
                              child {
                                kind: NAME
                                text: "hm_header_st"
                              }
                            }
                            child {
                              kind: MODIFIER
                              text: "*"
                            }
                          }
                          child {
                            kind: NAME
                            text: "msg_hdr"
                          }
                          child {
                            kind: INIT
                            text: "="
                            child {
                              kind: EXPR
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                              }
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "s"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-&gt;"
                                }
                                child {
                                  kind: NAME
                                  text: "d1"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-&gt;"
                                }
                                child {
                                  kind: NAME
                                  text: "w_msg_hdr"
                                }
                              }
                            }
                          }
                          tail: ";"
                        }
                      }
                      child {
                        kind: DECL_STMT
                        child {
                          kind: DECL
                          child {
                            kind: TYPE
                            child {
                              kind: NAME
                              text: "int"
                            }
                          }
                          child {
                            kind: NAME
                            text: "xlen"
                          }
                          tail: ";"
                        }
                      }
                      child {
                        kind: IF
                        text: "if"
                        child {
                          kind: CONDITION
                          text: "("
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "frag_off"
                            }
                            child {
                              kind: OPERATOR
                              text: "=="
                            }
                            child {
                              kind: LITERAL
                              text: "0"
                              literal {
                                type: number_type
                              }
                            }
                            child {
                              kind: OPERATOR
                              text: "&amp;&amp;"
                            }
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "s"
                              }
                              child {
                                kind: OPERATOR
                                text: "-&gt;"
                              }
                              child {
                                kind: NAME
                                text: "version"
                              }
                            }
                            child {
                              kind: OPERATOR
                              text: "!="
                            }
                            child {
                              kind: NAME
                              text: "DTLS1_BAD_VER"
                            }
                            tail: ")"
                          }
                        }
                        child {
                          kind: THEN
                          child {
                            kind: BLOCK
                            text: "{"
                            child {
                              kind: COMMENT
                              text: "/* reconstruct message header is if it$\n$                                         * is being sent in single fragment */"
                            }
                            child {
                              kind: EXPR_STMT
                              child {
                                kind: EXPR
                                child {
                                  kind: OPERATOR
                                  text: "*"
                                }
                                child {
                                  kind: NAME
                                  text: "p"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "++"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "="
                                }
                                child {
                                  kind: NAME
                                  child {
                                    kind: NAME
                                    text: "msg_hdr"
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "-&gt;"
                                  }
                                  child {
                                    kind: NAME
                                    text: "type"
                                  }
                                }
                                tail: ";"
                              }
                            }
                            child {
                              kind: EXPR_STMT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "l2n3"
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          child {
                                            kind: NAME
                                            text: "msg_hdr"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "-&gt;"
                                          }
                                          child {
                                            kind: NAME
                                            text: "msg_len"
                                          }
                                        }
                                      }
                                      tail: ","
                                    }
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "p"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                                tail: ";"
                              }
                            }
                            child {
                              kind: EXPR_STMT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "s2n"
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          child {
                                            kind: NAME
                                            text: "msg_hdr"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "-&gt;"
                                          }
                                          child {
                                            kind: NAME
                                            text: "seq"
                                          }
                                        }
                                      }
                                      tail: ","
                                    }
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "p"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                                tail: ";"
                              }
                            }
                            child {
                              kind: EXPR_STMT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "l2n3"
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: LITERAL
                                          text: "0"
                                          literal {
                                            type: number_type
                                          }
                                        }
                                      }
                                      tail: ","
                                    }
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "p"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                                tail: ";"
                              }
                            }
                            child {
                              kind: EXPR_STMT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "l2n3"
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          child {
                                            kind: NAME
                                            text: "msg_hdr"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "-&gt;"
                                          }
                                          child {
                                            kind: NAME
                                            text: "msg_len"
                                          }
                                        }
                                      }
                                      tail: ","
                                    }
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "p"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                                tail: ";"
                              }
                            }
                            child {
                              kind: EXPR_STMT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "p"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-="
                                }
                                child {
                                  kind: NAME
                                  text: "DTLS1_HM_HEADER_LENGTH"
                                }
                                tail: ";"
                              }
                            }
                            child {
                              kind: EXPR_STMT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "xlen"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "="
                                }
                                child {
                                  kind: NAME
                                  text: "ret"
                                }
                                tail: ";"
                              }
                              tail: "}"
                            }
                          }
                        }
                        child {
                          kind: ELSE
                          text: "else"
                          child {
                            kind: BLOCK
                            text: "{"
                            child {
                              kind: EXPR_STMT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "p"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "+="
                                }
                                child {
                                  kind: NAME
                                  text: "DTLS1_HM_HEADER_LENGTH"
                                }
                                tail: ";"
                              }
                            }
                            child {
                              kind: EXPR_STMT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "xlen"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "="
                                }
                                child {
                                  kind: NAME
                                  text: "ret"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-"
                                }
                                child {
                                  kind: NAME
                                  text: "DTLS1_HM_HEADER_LENGTH"
                                }
                                tail: ";"
                              }
                              tail: "}"
                            }
                          }
                        }
                      }
                      child {
                        kind: EXPR_STMT
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "ssl3_finish_mac"
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "s"
                                  }
                                }
                                tail: ","
                              }
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "p"
                                  }
                                }
                                tail: ","
                              }
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "xlen"
                                  }
                                }
                                tail: ")"
                              }
                            }
                          }
                          tail: ";"
                        }
                        tail: "}"
                      }
                    }
                  }
                }
                child {
                  kind: IF
                  text: "if"
                  child {
                    kind: CONDITION
                    text: "("
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "ret"
                      }
                      child {
                        kind: OPERATOR
                        text: "=="
                      }
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "s"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "init_num"
                        }
                      }
                      tail: ")"
                    }
                  }
                  child {
                    kind: THEN
                    child {
                      kind: BLOCK
                      text: "{"
                      child {
                        kind: IF
                        text: "if"
                        child {
                          kind: CONDITION
                          text: "("
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "s"
                              }
                              child {
                                kind: OPERATOR
                                text: "-&gt;"
                              }
                              child {
                                kind: NAME
                                text: "msg_callback"
                              }
                            }
                            tail: ")"
                          }
                        }
                        child {
                          kind: THEN
                          child {
                            kind: BLOCK
                            child {
                              kind: EXPR_STMT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    child {
                                      kind: NAME
                                      text: "s"
                                    }
                                    child {
                                      kind: OPERATOR
                                      text: "-&gt;"
                                    }
                                    child {
                                      kind: NAME
                                      text: "msg_callback"
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: LITERAL
                                          text: "1"
                                          literal {
                                            type: number_type
                                          }
                                        }
                                      }
                                      tail: ","
                                    }
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          child {
                                            kind: NAME
                                            text: "s"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "-&gt;"
                                          }
                                          child {
                                            kind: NAME
                                            text: "version"
                                          }
                                        }
                                      }
                                      tail: ","
                                    }
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "type"
                                        }
                                      }
                                      tail: ","
                                    }
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          child {
                                            kind: NAME
                                            text: "s"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "-&gt;"
                                          }
                                          child {
                                            kind: NAME
                                            text: "init_buf"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "-&gt;"
                                          }
                                          child {
                                            kind: NAME
                                            text: "data"
                                          }
                                        }
                                      }
                                      tail: ","
                                    }
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          text: "("
                                          child {
                                            kind: NAME
                                            text: "size_t"
                                            tail: ")"
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "("
                                            child {
                                              kind: ARGUMENT
                                              child {
                                                kind: EXPR
                                                child {
                                                  kind: NAME
                                                  child {
                                                    kind: NAME
                                                    text: "s"
                                                  }
                                                  child {
                                                    kind: OPERATOR
                                                    text: "-&gt;"
                                                  }
                                                  child {
                                                    kind: NAME
                                                    text: "init_off"
                                                  }
                                                }
                                                child {
                                                  kind: OPERATOR
                                                  text: "+"
                                                }
                                                child {
                                                  kind: NAME
                                                  child {
                                                    kind: NAME
                                                    text: "s"
                                                  }
                                                  child {
                                                    kind: OPERATOR
                                                    text: "-&gt;"
                                                  }
                                                  child {
                                                    kind: NAME
                                                    text: "init_num"
                                                  }
                                                }
                                              }
                                              tail: ")"
                                            }
                                          }
                                        }
                                      }
                                      tail: ","
                                    }
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "s"
                                        }
                                      }
                                      tail: ","
                                    }
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          child {
                                            kind: NAME
                                            text: "s"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "-&gt;"
                                          }
                                          child {
                                            kind: NAME
                                            text: "msg_callback_arg"
                                          }
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                                tail: ";"
                              }
                            }
                          }
                        }
                      }
                      child {
                        kind: EXPR_STMT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "s"
                            }
                            child {
                              kind: OPERATOR
                              text: "-&gt;"
                            }
                            child {
                              kind: NAME
                              text: "init_off"
                            }
                          }
                          child {
                            kind: OPERATOR
                            text: "="
                          }
                          child {
                            kind: LITERAL
                            text: "0"
                            literal {
                              type: number_type
                            }
                          }
                          tail: ";"
                        }
                      }
                      child {
                        kind: COMMENT
                        text: "/* done writing this message */"
                      }
                      child {
                        kind: EXPR_STMT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "s"
                            }
                            child {
                              kind: OPERATOR
                              text: "-&gt;"
                            }
                            child {
                              kind: NAME
                              text: "init_num"
                            }
                          }
                          child {
                            kind: OPERATOR
                            text: "="
                          }
                          child {
                            kind: LITERAL
                            text: "0"
                            literal {
                              type: number_type
                            }
                          }
                          tail: ";"
                        }
                      }
                      child {
                        kind: RETURN
                        text: "return"
                        child {
                          kind: EXPR
                          child {
                            kind: OPERATOR
                            text: "("
                          }
                          child {
                            kind: LITERAL
                            text: "1"
                            literal {
                              type: number_type
                            }
                          }
                          child {
                            kind: OPERATOR
                            text: ")"
                          }
                          tail: ";"
                        }
                        tail: "}"
                      }
                    }
                  }
                }
                child {
                  kind: EXPR_STMT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "s"
                      }
                      child {
                        kind: OPERATOR
                        text: "-&gt;"
                      }
                      child {
                        kind: NAME
                        text: "init_off"
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "+="
                    }
                    child {
                      kind: NAME
                      text: "ret"
                    }
                    tail: ";"
                  }
                }
                child {
                  kind: EXPR_STMT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "s"
                      }
                      child {
                        kind: OPERATOR
                        text: "-&gt;"
                      }
                      child {
                        kind: NAME
                        text: "init_num"
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "-="
                    }
                    child {
                      kind: NAME
                      text: "ret"
                    }
                    tail: ";"
                  }
                }
                child {
                  kind: EXPR_STMT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "frag_off"
                    }
                    child {
                      kind: OPERATOR
                      text: "+="
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ret"
                    }
                    child {
                      kind: OPERATOR
                      text: "-="
                    }
                    child {
                      kind: NAME
                      text: "DTLS1_HM_HEADER_LENGTH"
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                    tail: ";"
                  }
                  tail: "}"
                }
              }
            }
            tail: "}"
          }
        }
      }
      child {
        kind: RETURN
        text: "return"
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: LITERAL
            text: "0"
            literal {
              type: number_type
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "}"
      }
    }
  }
  child {
    kind: COMMENT
    text: "/* Obtain handshake message of message type \'mt\' (any if mt == -1),$\n$ * maximum acceptable body length \'max\'.$\n$ * Read an entire handshake message.  Handshake messages arrive in$\n$ * fragments.$\n$ */"
  }
  child {
    kind: FUNCTION
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "long"
      }
    }
    child {
      kind: NAME
      text: "dtls1_get_message"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "SSL"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "s"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "st1"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "stn"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "mt"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "long"
            }
          }
          child {
            kind: NAME
            text: "max"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "ok"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "i"
          }
          tail: ","
        }
        child {
          kind: DECL
          child {
            kind: TYPE
            text: "This is just a placeholder. Please ignore this child."
          }
          child {
            kind: NAME
            text: "al"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              child {
                kind: NAME
                text: "struct"
              }
              child {
                kind: NAME
                text: "hm_header_st"
              }
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "msg_hdr"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "p"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "long"
            }
          }
          child {
            kind: NAME
            text: "msg_len"
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* s3-&gt;tmp is used to store messages that are unexpected, caused$\n$         * by the absence of an optional handshake message */"
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "s3"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "tmp"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "reuse_message"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "s3"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "tmp"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "reuse_message"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: LITERAL
                  text: "0"
                  literal {
                    type: number_type
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: IF
              text: "if"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "("
                  }
                  child {
                    kind: NAME
                    text: "mt"
                  }
                  child {
                    kind: OPERATOR
                    text: "&gt;="
                  }
                  child {
                    kind: LITERAL
                    text: "0"
                    literal {
                      type: number_type
                    }
                  }
                  child {
                    kind: OPERATOR
                    text: ")"
                  }
                  child {
                    kind: OPERATOR
                    text: "&amp;&amp;"
                  }
                  child {
                    kind: OPERATOR
                    text: "("
                  }
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "s"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "s3"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "tmp"
                    }
                    child {
                      kind: OPERATOR
                      text: "."
                    }
                    child {
                      kind: NAME
                      text: "message_type"
                    }
                  }
                  child {
                    kind: OPERATOR
                    text: "!="
                  }
                  child {
                    kind: NAME
                    text: "mt"
                  }
                  child {
                    kind: OPERATOR
                    text: ")"
                  }
                  tail: ")"
                }
              }
              child {
                kind: THEN
                child {
                  kind: BLOCK
                  text: "{"
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "al"
                      }
                      child {
                        kind: OPERATOR
                        text: "="
                      }
                      child {
                        kind: NAME
                        text: "SSL_AD_UNEXPECTED_MESSAGE"
                      }
                      tail: ";"
                    }
                  }
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "SSLerr"
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "SSL_F_DTLS1_GET_MESSAGE"
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "SSL_R_UNEXPECTED_MESSAGE"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                      tail: ";"
                    }
                  }
                  child {
                    kind: GOTO
                    text: "goto"
                    child {
                      kind: NAME
                      text: "f_err"
                      tail: ";"
                    }
                    tail: "}"
                  }
                }
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "*"
                }
                child {
                  kind: NAME
                  text: "ok"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: LITERAL
                  text: "1"
                  literal {
                    type: number_type
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "init_msg"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "init_buf"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "data"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "+"
                }
                child {
                  kind: NAME
                  text: "DTLS1_HM_HEADER_LENGTH"
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "init_num"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "int"
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "s3"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "tmp"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "message_size"
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: RETURN
              text: "return"
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "init_num"
                  }
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "msg_hdr"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: OPERATOR
            text: "&amp;"
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "d1"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "r_msg_hdr"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "memset"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "msg_hdr"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "0x00"
                    literal {
                      type: number_type
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: SIZEOF
                    text: "sizeof"
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          text: "struct"
                          child {
                            kind: NAME
                            text: "hm_header_st"
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: LABEL
        child {
          kind: NAME
          text: "again"
          tail: ":"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "i"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "dtls1_get_message_fragment"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "s"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "st1"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "stn"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "max"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "ok"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "i"
            }
            child {
              kind: OPERATOR
              text: "=="
            }
            child {
              kind: NAME
              text: "DTLS1_HM_BAD_FRAGMENT"
            }
            child {
              kind: OPERATOR
              text: "||"
            }
            child {
              kind: NAME
              text: "i"
            }
            child {
              kind: OPERATOR
              text: "=="
            }
            child {
              kind: NAME
              text: "DTLS1_HM_FRAGMENT_RETRY"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: COMMENT
            text: "/* bad fragment received */"
          }
          child {
            kind: BLOCK
            child {
              kind: GOTO
              text: "goto"
              child {
                kind: NAME
                text: "again"
                tail: ";"
              }
            }
          }
        }
        child {
          kind: ELSEIF
          text: "else"
          child {
            kind: IF
            text: "if"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "i"
                }
                child {
                  kind: OPERATOR
                  text: "&lt;="
                }
                child {
                  kind: LITERAL
                  text: "0"
                  literal {
                    type: number_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: "&amp;&amp;"
                }
                child {
                  kind: OPERATOR
                  text: "!"
                }
                child {
                  kind: OPERATOR
                  text: "*"
                }
                child {
                  kind: NAME
                  text: "ok"
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return"
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "i"
                    }
                    tail: ";"
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "p"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "unsigned"
          }
          child {
            kind: NAME
            text: "char"
          }
          child {
            kind: OPERATOR
            text: "*"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "init_buf"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "data"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "msg_len"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "msg_hdr"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "msg_len"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* reconstruct message header */"
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "*"
          }
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "p"
          }
          child {
            kind: OPERATOR
            text: "++"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "msg_hdr"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "type"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "l2n3"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "msg_len"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "p"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "s2n"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "msg_hdr"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "seq"
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "p"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "l2n3"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "0"
                    literal {
                      type: number_type
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "p"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "l2n3"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "msg_len"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "p"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "version"
              }
            }
            child {
              kind: OPERATOR
              text: "!="
            }
            child {
              kind: NAME
              text: "DTLS1_BAD_VER"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "p"
                }
                child {
                  kind: OPERATOR
                  text: "-="
                }
                child {
                  kind: NAME
                  text: "DTLS1_HM_HEADER_LENGTH"
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "msg_len"
                }
                child {
                  kind: OPERATOR
                  text: "+="
                }
                child {
                  kind: NAME
                  text: "DTLS1_HM_HEADER_LENGTH"
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "ssl3_finish_mac"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "s"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "p"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "msg_len"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "msg_callback"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "s"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "msg_callback"
                    }
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: LITERAL
                          text: "0"
                          literal {
                            type: number_type
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "version"
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "SSL3_RT_HANDSHAKE"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "p"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "msg_len"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "s"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "msg_callback_arg"
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "memset"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "msg_hdr"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "0x00"
                    literal {
                      type: number_type
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: SIZEOF
                    text: "sizeof"
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          text: "struct"
                          child {
                            kind: NAME
                            text: "hm_header_st"
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* Don\'t change sequence numbers while listening */"
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: OPERATOR
              text: "!"
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "d1"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "listen"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "d1"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "handshake_read_seq"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "++"
                }
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "init_msg"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "init_buf"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "data"
            }
          }
          child {
            kind: OPERATOR
            text: "+"
          }
          child {
            kind: NAME
            text: "DTLS1_HM_HEADER_LENGTH"
          }
          tail: ";"
        }
      }
      child {
        kind: RETURN
        text: "return"
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "init_num"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: LABEL
        child {
          kind: NAME
          text: "f_err"
          tail: ":"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "ssl3_send_alert"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "s"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "SSL3_AL_FATAL"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "al"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "*"
          }
          child {
            kind: NAME
            text: "ok"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: LITERAL
            text: "0"
            literal {
              type: number_type
            }
          }
          tail: ";"
        }
      }
      child {
        kind: RETURN
        text: "return"
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "-"
          }
          child {
            kind: LITERAL
            text: "1"
            literal {
              type: number_type
            }
          }
          tail: ";"
        }
        tail: "}"
      }
    }
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "static"
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "int"
      }
    }
    child {
      kind: NAME
      text: "dtls1_preprocess_fragment"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "SSL"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "s"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              child {
                kind: NAME
                text: "struct"
              }
              child {
                kind: NAME
                text: "hm_header_st"
              }
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "msg_hdr"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "max"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "size_t"
            }
          }
          child {
            kind: NAME
            text: "frag_off"
          }
          tail: ","
        }
        child {
          kind: DECL
          child {
            kind: TYPE
            text: "This is just a placeholder. Please ignore this child."
          }
          child {
            kind: NAME
            text: "frag_len"
          }
          tail: ","
        }
        child {
          kind: DECL
          child {
            kind: TYPE
            text: "This is just a placeholder. Please ignore this child."
          }
          child {
            kind: NAME
            text: "msg_len"
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "msg_len"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "msg_hdr"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "msg_len"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "frag_off"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "msg_hdr"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "frag_off"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "frag_len"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "msg_hdr"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "frag_len"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* sanity checking */"
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: OPERATOR
              text: "("
            }
            child {
              kind: NAME
              text: "frag_off"
            }
            child {
              kind: OPERATOR
              text: "+"
            }
            child {
              kind: NAME
              text: "frag_len"
            }
            child {
              kind: OPERATOR
              text: ")"
            }
            child {
              kind: OPERATOR
              text: "&gt;"
            }
            child {
              kind: NAME
              text: "msg_len"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "SSLerr"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "SSL_F_DTLS1_PREPROCESS_FRAGMENT"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "SSL_R_EXCESSIVE_MESSAGE_SIZE"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: RETURN
              text: "return"
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "SSL_AD_ILLEGAL_PARAMETER"
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: OPERATOR
              text: "("
            }
            child {
              kind: NAME
              text: "frag_off"
            }
            child {
              kind: OPERATOR
              text: "+"
            }
            child {
              kind: NAME
              text: "frag_len"
            }
            child {
              kind: OPERATOR
              text: ")"
            }
            child {
              kind: OPERATOR
              text: "&gt;"
            }
            child {
              kind: OPERATOR
              text: "("
            }
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "long"
            }
            child {
              kind: OPERATOR
              text: ")"
            }
            child {
              kind: NAME
              text: "max"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "SSLerr"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "SSL_F_DTLS1_PREPROCESS_FRAGMENT"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "SSL_R_EXCESSIVE_MESSAGE_SIZE"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: RETURN
              text: "return"
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "SSL_AD_ILLEGAL_PARAMETER"
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "d1"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "r_msg_hdr"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "frag_off"
              }
            }
            child {
              kind: OPERATOR
              text: "=="
            }
            child {
              kind: LITERAL
              text: "0"
              literal {
                type: number_type
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: COMMENT
            text: "/* first fragment */"
          }
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: COMMENT
              text: "/* msg_len is limited to 2^24, but is effectively checked$\n$                 * against max above */"
            }
            child {
              kind: IF
              text: "if"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "!"
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "BUF_MEM_grow_clean"
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "s"
                            }
                            child {
                              kind: OPERATOR
                              text: "-&gt;"
                            }
                            child {
                              kind: NAME
                              text: "init_buf"
                            }
                          }
                        }
                        tail: ","
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "msg_len"
                          }
                          child {
                            kind: OPERATOR
                            text: "+"
                          }
                          child {
                            kind: NAME
                            text: "DTLS1_HM_HEADER_LENGTH"
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                  tail: ")"
                }
              }
              child {
                kind: THEN
                child {
                  kind: BLOCK
                  text: "{"
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "SSLerr"
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "SSL_F_DTLS1_PREPROCESS_FRAGMENT"
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "ERR_R_BUF_LIB"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                      tail: ";"
                    }
                  }
                  child {
                    kind: RETURN
                    text: "return"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "SSL_AD_INTERNAL_ERROR"
                      }
                      tail: ";"
                    }
                    tail: "}"
                  }
                }
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "s3"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "tmp"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "message_size"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: NAME
                  text: "msg_len"
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "d1"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "r_msg_hdr"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "msg_len"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: NAME
                  text: "msg_len"
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "s3"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "tmp"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "message_type"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "msg_hdr"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "type"
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "d1"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "r_msg_hdr"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "type"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "msg_hdr"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "type"
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "d1"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "r_msg_hdr"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "seq"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "msg_hdr"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "seq"
                  }
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
        child {
          kind: ELSEIF
          text: "else"
          child {
            kind: IF
            text: "if"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "msg_len"
                }
                child {
                  kind: OPERATOR
                  text: "!="
                }
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "d1"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "r_msg_hdr"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "msg_len"
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              child {
                kind: BLOCK
                text: "{"
                child {
                  kind: COMMENT
                  text: "/* They must be playing with us! BTW, failure to enforce$\n$                 * upper limit would open possibility for buffer overrun. */"
                }
                child {
                  kind: EXPR_STMT
                  child {
                    kind: EXPR
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "SSLerr"
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "SSL_F_DTLS1_PREPROCESS_FRAGMENT"
                            }
                          }
                          tail: ","
                        }
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "SSL_R_EXCESSIVE_MESSAGE_SIZE"
                            }
                          }
                          tail: ")"
                        }
                      }
                    }
                    tail: ";"
                  }
                }
                child {
                  kind: RETURN
                  text: "return"
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "SSL_AD_ILLEGAL_PARAMETER"
                    }
                    tail: ";"
                  }
                  tail: "}"
                }
              }
            }
          }
        }
      }
      child {
        kind: RETURN
        text: "return"
        child {
          kind: EXPR
          child {
            kind: LITERAL
            text: "0"
            literal {
              type: number_type
            }
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* no error */"
        tail: "}"
      }
    }
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "static"
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "int"
      }
    }
    child {
      kind: NAME
      text: "dtls1_retrieve_buffered_fragment"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "SSL"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "s"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "long"
            }
          }
          child {
            kind: NAME
            text: "max"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "ok"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: COMMENT
        text: "/* (0) check whether the desired fragment is available$\n$         * if so:$\n$         * (1) copy over the fragment to s-&gt;init_buf-&gt;data[]$\n$         * (2) update s-&gt;init_num$\n$         */"
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "pitem"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "item"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "hm_fragment"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "frag"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "al"
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "*"
          }
          child {
            kind: NAME
            text: "ok"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: LITERAL
            text: "0"
            literal {
              type: number_type
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "item"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "pqueue_peek"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "s"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "d1"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "buffered_messages"
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "item"
            }
            child {
              kind: OPERATOR
              text: "=="
            }
            child {
              kind: NAME
              text: "NULL"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return"
              child {
                kind: EXPR
                child {
                  kind: LITERAL
                  text: "0"
                  literal {
                    type: number_type
                  }
                }
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "frag"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "hm_fragment"
          }
          child {
            kind: OPERATOR
            text: "*"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "item"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "data"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* Don\'t return if reassembly still in progress */"
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "frag"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "reassembly"
              }
            }
            child {
              kind: OPERATOR
              text: "!="
            }
            child {
              kind: NAME
              text: "NULL"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return"
              child {
                kind: EXPR
                child {
                  kind: LITERAL
                  text: "0"
                  literal {
                    type: number_type
                  }
                }
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "d1"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "handshake_read_seq"
              }
            }
            child {
              kind: OPERATOR
              text: "=="
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "frag"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "msg_header"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "seq"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: DECL_STMT
              child {
                kind: DECL
                child {
                  kind: TYPE
                  child {
                    kind: NAME
                    text: "unsigned"
                  }
                  child {
                    kind: NAME
                    text: "long"
                  }
                }
                child {
                  kind: NAME
                  text: "frag_len"
                }
                child {
                  kind: INIT
                  text: "="
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "frag"
                      }
                      child {
                        kind: OPERATOR
                        text: "-&gt;"
                      }
                      child {
                        kind: NAME
                        text: "msg_header"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "frag_len"
                      }
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "pqueue_pop"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "d1"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "buffered_messages"
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "al"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "dtls1_preprocess_fragment"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "s"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: OPERATOR
                          text: "&amp;"
                        }
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "frag"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "msg_header"
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "max"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: IF
              text: "if"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "al"
                  }
                  child {
                    kind: OPERATOR
                    text: "=="
                  }
                  child {
                    kind: LITERAL
                    text: "0"
                    literal {
                      type: number_type
                    }
                  }
                  tail: ")"
                }
              }
              child {
                kind: THEN
                child {
                  kind: COMMENT
                  text: "/* no alert */"
                }
                child {
                  kind: BLOCK
                  text: "{"
                  child {
                    kind: DECL_STMT
                    child {
                      kind: DECL
                      child {
                        kind: TYPE
                        child {
                          kind: NAME
                          text: "unsigned"
                        }
                        child {
                          kind: NAME
                          text: "char"
                        }
                        child {
                          kind: MODIFIER
                          text: "*"
                        }
                      }
                      child {
                        kind: NAME
                        text: "p"
                      }
                      child {
                        kind: INIT
                        text: "="
                        child {
                          kind: EXPR
                          child {
                            kind: OPERATOR
                            text: "("
                          }
                          child {
                            kind: NAME
                            text: "unsigned"
                          }
                          child {
                            kind: NAME
                            text: "char"
                          }
                          child {
                            kind: OPERATOR
                            text: "*"
                          }
                          child {
                            kind: OPERATOR
                            text: ")"
                          }
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "s"
                            }
                            child {
                              kind: OPERATOR
                              text: "-&gt;"
                            }
                            child {
                              kind: NAME
                              text: "init_buf"
                            }
                            child {
                              kind: OPERATOR
                              text: "-&gt;"
                            }
                            child {
                              kind: NAME
                              text: "data"
                            }
                          }
                          child {
                            kind: OPERATOR
                            text: "+"
                          }
                          child {
                            kind: NAME
                            text: "DTLS1_HM_HEADER_LENGTH"
                          }
                        }
                      }
                      tail: ";"
                    }
                  }
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "memcpy"
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                              }
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "p"
                                }
                                child {
                                  kind: INDEX
                                  text: "["
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      child {
                                        kind: NAME
                                        text: "frag"
                                      }
                                      child {
                                        kind: OPERATOR
                                        text: "-&gt;"
                                      }
                                      child {
                                        kind: NAME
                                        text: "msg_header"
                                      }
                                      child {
                                        kind: OPERATOR
                                        text: "."
                                      }
                                      child {
                                        kind: NAME
                                        text: "frag_off"
                                      }
                                    }
                                    tail: "]"
                                  }
                                }
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "frag"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-&gt;"
                                }
                                child {
                                  kind: NAME
                                  text: "fragment"
                                }
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "frag"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-&gt;"
                                }
                                child {
                                  kind: NAME
                                  text: "msg_header"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "frag_len"
                                }
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                      tail: ";"
                    }
                    tail: "}"
                  }
                }
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "dtls1_hm_fragment_free"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "frag"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "pitem_free"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "item"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: IF
              text: "if"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "al"
                  }
                  child {
                    kind: OPERATOR
                    text: "=="
                  }
                  child {
                    kind: LITERAL
                    text: "0"
                    literal {
                      type: number_type
                    }
                  }
                  tail: ")"
                }
              }
              child {
                kind: THEN
                child {
                  kind: BLOCK
                  text: "{"
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "*"
                      }
                      child {
                        kind: NAME
                        text: "ok"
                      }
                      child {
                        kind: OPERATOR
                        text: "="
                      }
                      child {
                        kind: LITERAL
                        text: "1"
                        literal {
                          type: number_type
                        }
                      }
                      tail: ";"
                    }
                  }
                  child {
                    kind: RETURN
                    text: "return"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "frag_len"
                      }
                      tail: ";"
                    }
                    tail: "}"
                  }
                }
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "ssl3_send_alert"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "s"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "SSL3_AL_FATAL"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "al"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "init_num"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: LITERAL
                  text: "0"
                  literal {
                    type: number_type
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "*"
                }
                child {
                  kind: NAME
                  text: "ok"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: LITERAL
                  text: "0"
                  literal {
                    type: number_type
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: RETURN
              text: "return"
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "-"
                }
                child {
                  kind: LITERAL
                  text: "1"
                  literal {
                    type: number_type
                  }
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
        child {
          kind: ELSE
          text: "else"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return"
              child {
                kind: EXPR
                child {
                  kind: LITERAL
                  text: "0"
                  literal {
                    type: number_type
                  }
                }
                tail: ";"
              }
            }
          }
        }
        tail: "}"
      }
    }
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "static"
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "int"
      }
    }
    child {
      kind: NAME
      text: "dtls1_reassemble_fragment"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "SSL"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "s"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              child {
                kind: NAME
                text: "struct"
              }
              child {
                kind: NAME
                text: "hm_header_st"
              }
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "msg_hdr"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "ok"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "hm_fragment"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "frag"
          }
          child {
            kind: INIT
            text: "="
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "NULL"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "pitem"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "item"
          }
          child {
            kind: INIT
            text: "="
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "NULL"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "i"
          }
          child {
            kind: INIT
            text: "="
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "-"
              }
              child {
                kind: LITERAL
                text: "1"
                literal {
                  type: number_type
                }
              }
            }
          }
          tail: ","
        }
        child {
          kind: DECL
          child {
            kind: TYPE
            text: "This is just a placeholder. Please ignore this child."
          }
          child {
            kind: NAME
            text: "is_complete"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
            }
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "seq64be"
            }
            child {
              kind: INDEX
              text: "["
              child {
                kind: EXPR
                child {
                  kind: LITERAL
                  text: "8"
                  literal {
                    type: number_type
                  }
                }
                tail: "]"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "long"
            }
          }
          child {
            kind: NAME
            text: "frag_len"
          }
          child {
            kind: INIT
            text: "="
            child {
              kind: EXPR
              child {
                kind: NAME
                child {
                  kind: NAME
                  text: "msg_hdr"
                }
                child {
                  kind: OPERATOR
                  text: "-&gt;"
                }
                child {
                  kind: NAME
                  text: "frag_len"
                }
              }
            }
          }
          tail: ","
        }
        child {
          kind: DECL
          child {
            kind: TYPE
            text: "This is just a placeholder. Please ignore this child."
          }
          child {
            kind: NAME
            text: "max_len"
          }
          tail: ";"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: OPERATOR
              text: "("
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "msg_hdr"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "frag_off"
              }
            }
            child {
              kind: OPERATOR
              text: "+"
            }
            child {
              kind: NAME
              text: "frag_len"
            }
            child {
              kind: OPERATOR
              text: ")"
            }
            child {
              kind: OPERATOR
              text: "&gt;"
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "msg_hdr"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "msg_len"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: GOTO
              text: "goto"
              child {
                kind: NAME
                text: "err"
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/* Determine maximum allowed message size. Depends on (user set)$\n$         * maximum certificate length, but 16k is minimum.$\n$         */"
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "DTLS1_HM_HEADER_LENGTH"
            }
            child {
              kind: OPERATOR
              text: "+"
            }
            child {
              kind: NAME
              text: "SSL3_RT_MAX_ENCRYPTED_LENGTH"
            }
            child {
              kind: OPERATOR
              text: "&lt;"
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "max_cert_list"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "max_len"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "max_cert_list"
                  }
                }
                tail: ";"
              }
            }
          }
        }
        child {
          kind: ELSE
          text: "else"
          child {
            kind: BLOCK
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "max_len"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: NAME
                  text: "DTLS1_HM_HEADER_LENGTH"
                }
                child {
                  kind: OPERATOR
                  text: "+"
                }
                child {
                  kind: NAME
                  text: "SSL3_RT_MAX_ENCRYPTED_LENGTH"
                }
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: OPERATOR
              text: "("
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "msg_hdr"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "frag_off"
              }
            }
            child {
              kind: OPERATOR
              text: "+"
            }
            child {
              kind: NAME
              text: "frag_len"
            }
            child {
              kind: OPERATOR
              text: ")"
            }
            child {
              kind: OPERATOR
              text: "&gt;"
            }
            child {
              kind: NAME
              text: "max_len"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: GOTO
              text: "goto"
              child {
                kind: NAME
                text: "err"
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/* Try to find item in queue */"
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "memset"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "seq64be"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "0"
                    literal {
                      type: number_type
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: SIZEOF
                    text: "sizeof"
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "seq64be"
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "seq64be"
            }
            child {
              kind: INDEX
              text: "["
              child {
                kind: EXPR
                child {
                  kind: LITERAL
                  text: "6"
                  literal {
                    type: number_type
                  }
                }
                tail: "]"
              }
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: CALL
            text: "("
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
              tail: ")"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "msg_hdr"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "seq"
                    }
                  }
                  child {
                    kind: OPERATOR
                    text: "&gt;&gt;"
                  }
                  child {
                    kind: LITERAL
                    text: "8"
                    literal {
                      type: number_type
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "seq64be"
            }
            child {
              kind: INDEX
              text: "["
              child {
                kind: EXPR
                child {
                  kind: LITERAL
                  text: "7"
                  literal {
                    type: number_type
                  }
                }
                tail: "]"
              }
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "unsigned"
          }
          child {
            kind: NAME
            text: "char"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "msg_hdr"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "seq"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "item"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "pqueue_find"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "s"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "d1"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "buffered_messages"
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "seq64be"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "item"
            }
            child {
              kind: OPERATOR
              text: "=="
            }
            child {
              kind: NAME
              text: "NULL"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "frag"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "dtls1_hm_fragment_new"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "msg_hdr"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "msg_len"
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: LITERAL
                          text: "1"
                          literal {
                            type: number_type
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: IF
              text: "if"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "frag"
                  }
                  child {
                    kind: OPERATOR
                    text: "=="
                  }
                  child {
                    kind: NAME
                    text: "NULL"
                  }
                  tail: ")"
                }
              }
              child {
                kind: THEN
                child {
                  kind: BLOCK
                  child {
                    kind: GOTO
                    text: "goto"
                    child {
                      kind: NAME
                      text: "err"
                      tail: ";"
                    }
                  }
                }
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "memcpy"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: OPERATOR
                          text: "&amp;"
                        }
                        child {
                          kind: OPERATOR
                          text: "("
                        }
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "frag"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "msg_header"
                          }
                        }
                        child {
                          kind: OPERATOR
                          text: ")"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "msg_hdr"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: SIZEOF
                          text: "sizeof"
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: OPERATOR
                                  text: "*"
                                }
                                child {
                                  kind: NAME
                                  text: "msg_hdr"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "frag"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "msg_header"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "frag_len"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "frag"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "msg_header"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "msg_len"
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "frag"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "msg_header"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "frag_off"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: LITERAL
                  text: "0"
                  literal {
                    type: number_type
                  }
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
        child {
          kind: ELSE
          text: "else"
          child {
            kind: BLOCK
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "frag"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "hm_fragment"
                }
                child {
                  kind: OPERATOR
                  text: "*"
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "item"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "data"
                  }
                }
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/* If message is already reassembled, this must be a$\n$         * retransmit and can be dropped.$\n$         */"
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "frag"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "reassembly"
              }
            }
            child {
              kind: OPERATOR
              text: "=="
            }
            child {
              kind: NAME
              text: "NULL"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: DECL_STMT
              child {
                kind: DECL
                child {
                  kind: TYPE
                  child {
                    kind: NAME
                    text: "unsigned"
                  }
                  child {
                    kind: NAME
                    text: "char"
                  }
                }
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "devnull"
                  }
                  child {
                    kind: INDEX
                    text: "["
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "256"
                        literal {
                          type: number_type
                        }
                      }
                      tail: "]"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: WHILE
              text: "while"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "frag_len"
                  }
                  tail: ")"
                }
              }
              child {
                kind: BLOCK
                text: "{"
                child {
                  kind: EXPR_STMT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "i"
                    }
                    child {
                      kind: OPERATOR
                      text: "="
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "s"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "method"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "ssl_read_bytes"
                        }
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "s"
                            }
                          }
                          tail: ","
                        }
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "SSL3_RT_HANDSHAKE"
                            }
                          }
                          tail: ","
                        }
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "devnull"
                            }
                          }
                          tail: ","
                        }
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: TERNARY
                              child {
                                kind: CONDITION
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "frag_len"
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "&gt;"
                                  }
                                  child {
                                    kind: SIZEOF
                                    text: "sizeof"
                                    child {
                                      kind: ARGUMENT_LIST
                                      text: "("
                                      child {
                                        kind: ARGUMENT
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: NAME
                                            text: "devnull"
                                          }
                                        }
                                        tail: ")"
                                      }
                                    }
                                  }
                                  tail: "?"
                                }
                              }
                              child {
                                kind: THEN
                                child {
                                  kind: EXPR
                                  child {
                                    kind: SIZEOF
                                    text: "sizeof"
                                    child {
                                      kind: ARGUMENT_LIST
                                      text: "("
                                      child {
                                        kind: ARGUMENT
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: NAME
                                            text: "devnull"
                                          }
                                        }
                                        tail: ")"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: ELSE
                                text: ":"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "frag_len"
                                  }
                                }
                              }
                            }
                          }
                          tail: ","
                        }
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: LITERAL
                              text: "0"
                              literal {
                                type: number_type
                              }
                            }
                          }
                          tail: ")"
                        }
                      }
                    }
                    tail: ";"
                  }
                }
                child {
                  kind: IF
                  text: "if"
                  child {
                    kind: CONDITION
                    text: "("
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "i"
                      }
                      child {
                        kind: OPERATOR
                        text: "&lt;="
                      }
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                          type: number_type
                        }
                      }
                      tail: ")"
                    }
                  }
                  child {
                    kind: THEN
                    child {
                      kind: BLOCK
                      child {
                        kind: GOTO
                        text: "goto"
                        child {
                          kind: NAME
                          text: "err"
                          tail: ";"
                        }
                      }
                    }
                  }
                }
                child {
                  kind: EXPR_STMT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "frag_len"
                    }
                    child {
                      kind: OPERATOR
                      text: "-="
                    }
                    child {
                      kind: NAME
                      text: "i"
                    }
                    tail: ";"
                  }
                  tail: "}"
                }
              }
            }
            child {
              kind: RETURN
              text: "return"
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "DTLS1_HM_FRAGMENT_RETRY"
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/* read the body of the fragment (header has already been read */"
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "i"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: CALL
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "method"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "ssl_read_bytes"
              }
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "s"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "SSL3_RT_HANDSHAKE"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "frag"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "fragment"
                    }
                  }
                  child {
                    kind: OPERATOR
                    text: "+"
                  }
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "msg_hdr"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "frag_off"
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "frag_len"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "0"
                    literal {
                      type: number_type
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "i"
            }
            child {
              kind: OPERATOR
              text: "&lt;="
            }
            child {
              kind: LITERAL
              text: "0"
              literal {
                type: number_type
              }
            }
            child {
              kind: OPERATOR
              text: "||"
            }
            child {
              kind: OPERATOR
              text: "("
            }
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "long"
            }
            child {
              kind: OPERATOR
              text: ")"
            }
            child {
              kind: NAME
              text: "i"
            }
            child {
              kind: OPERATOR
              text: "!="
            }
            child {
              kind: NAME
              text: "frag_len"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: GOTO
              text: "goto"
              child {
                kind: NAME
                text: "err"
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "RSMBLY_BITMASK_MARK"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "frag"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "reassembly"
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "("
                  }
                  child {
                    kind: NAME
                    text: "long"
                  }
                  child {
                    kind: OPERATOR
                    text: ")"
                  }
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "msg_hdr"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "frag_off"
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    text: "("
                    child {
                      kind: NAME
                      text: "long"
                      tail: ")"
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "msg_hdr"
                            }
                            child {
                              kind: OPERATOR
                              text: "-&gt;"
                            }
                            child {
                              kind: NAME
                              text: "frag_off"
                            }
                          }
                          child {
                            kind: OPERATOR
                            text: "+"
                          }
                          child {
                            kind: NAME
                            text: "frag_len"
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "RSMBLY_BITMASK_IS_COMPLETE"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "frag"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "reassembly"
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "("
                  }
                  child {
                    kind: NAME
                    text: "long"
                  }
                  child {
                    kind: OPERATOR
                    text: ")"
                  }
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "msg_hdr"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "msg_len"
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "is_complete"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "is_complete"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "OPENSSL_free"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "frag"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "reassembly"
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "frag"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "reassembly"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: NAME
                  text: "NULL"
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "item"
            }
            child {
              kind: OPERATOR
              text: "=="
            }
            child {
              kind: NAME
              text: "NULL"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "memset"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "seq64be"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: LITERAL
                          text: "0"
                          literal {
                            type: number_type
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: SIZEOF
                          text: "sizeof"
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "seq64be"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "seq64be"
                  }
                  child {
                    kind: INDEX
                    text: "["
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "6"
                        literal {
                          type: number_type
                        }
                      }
                      tail: "]"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: CALL
                  text: "("
                  child {
                    kind: NAME
                    text: "unsigned"
                  }
                  child {
                    kind: NAME
                    text: "char"
                    tail: ")"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "msg_hdr"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "seq"
                          }
                        }
                        child {
                          kind: OPERATOR
                          text: "&gt;&gt;"
                        }
                        child {
                          kind: LITERAL
                          text: "8"
                          literal {
                            type: number_type
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "seq64be"
                  }
                  child {
                    kind: INDEX
                    text: "["
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "7"
                        literal {
                          type: number_type
                        }
                      }
                      tail: "]"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: CALL
                  text: "("
                  child {
                    kind: NAME
                    text: "unsigned"
                  }
                  child {
                    kind: NAME
                    text: "char"
                    tail: ")"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "msg_hdr"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "seq"
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "item"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "pitem_new"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "seq64be"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "frag"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: IF
              text: "if"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "item"
                  }
                  child {
                    kind: OPERATOR
                    text: "=="
                  }
                  child {
                    kind: NAME
                    text: "NULL"
                  }
                  tail: ")"
                }
              }
              child {
                kind: THEN
                child {
                  kind: BLOCK
                  text: "{"
                  child {
                    kind: GOTO
                    text: "goto"
                    child {
                      kind: NAME
                      text: "err"
                      tail: ";"
                    }
                  }
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "i"
                      }
                      child {
                        kind: OPERATOR
                        text: "="
                      }
                      child {
                        kind: OPERATOR
                        text: "-"
                      }
                      child {
                        kind: LITERAL
                        text: "1"
                        literal {
                          type: number_type
                        }
                      }
                      tail: ";"
                    }
                    tail: "}"
                  }
                }
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "pqueue_insert"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "d1"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "buffered_messages"
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "item"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: RETURN
        text: "return"
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "DTLS1_HM_FRAGMENT_RETRY"
          }
          tail: ";"
        }
      }
      child {
        kind: LABEL
        child {
          kind: NAME
          text: "err"
          tail: ":"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "frag"
            }
            child {
              kind: OPERATOR
              text: "!="
            }
            child {
              kind: NAME
              text: "NULL"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "dtls1_hm_fragment_free"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "frag"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "item"
            }
            child {
              kind: OPERATOR
              text: "!="
            }
            child {
              kind: NAME
              text: "NULL"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "OPENSSL_free"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "item"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "*"
          }
          child {
            kind: NAME
            text: "ok"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: LITERAL
            text: "0"
            literal {
              type: number_type
            }
          }
          tail: ";"
        }
      }
      child {
        kind: RETURN
        text: "return"
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "i"
          }
          tail: ";"
        }
        tail: "}"
      }
    }
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "static"
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "int"
      }
    }
    child {
      kind: NAME
      text: "dtls1_process_out_of_seq_message"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "SSL"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "s"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              child {
                kind: NAME
                text: "struct"
              }
              child {
                kind: NAME
                text: "hm_header_st"
              }
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "msg_hdr"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "ok"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "i"
          }
          child {
            kind: INIT
            text: "="
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "-"
              }
              child {
                kind: LITERAL
                text: "1"
                literal {
                  type: number_type
                }
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "hm_fragment"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "frag"
          }
          child {
            kind: INIT
            text: "="
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "NULL"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "pitem"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "item"
          }
          child {
            kind: INIT
            text: "="
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "NULL"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
            }
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "seq64be"
            }
            child {
              kind: INDEX
              text: "["
              child {
                kind: EXPR
                child {
                  kind: LITERAL
                  text: "8"
                  literal {
                    type: number_type
                  }
                }
                tail: "]"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "long"
            }
          }
          child {
            kind: NAME
            text: "frag_len"
          }
          child {
            kind: INIT
            text: "="
            child {
              kind: EXPR
              child {
                kind: NAME
                child {
                  kind: NAME
                  text: "msg_hdr"
                }
                child {
                  kind: OPERATOR
                  text: "-&gt;"
                }
                child {
                  kind: NAME
                  text: "frag_len"
                }
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: OPERATOR
              text: "("
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "msg_hdr"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "frag_off"
              }
            }
            child {
              kind: OPERATOR
              text: "+"
            }
            child {
              kind: NAME
              text: "frag_len"
            }
            child {
              kind: OPERATOR
              text: ")"
            }
            child {
              kind: OPERATOR
              text: "&gt;"
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "msg_hdr"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "msg_len"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: GOTO
              text: "goto"
              child {
                kind: NAME
                text: "err"
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/* Try to find item in queue, to prevent duplicate entries */"
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "memset"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "seq64be"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "0"
                    literal {
                      type: number_type
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: SIZEOF
                    text: "sizeof"
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "seq64be"
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "seq64be"
            }
            child {
              kind: INDEX
              text: "["
              child {
                kind: EXPR
                child {
                  kind: LITERAL
                  text: "6"
                  literal {
                    type: number_type
                  }
                }
                tail: "]"
              }
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: CALL
            text: "("
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
              tail: ")"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "msg_hdr"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "seq"
                    }
                  }
                  child {
                    kind: OPERATOR
                    text: "&gt;&gt;"
                  }
                  child {
                    kind: LITERAL
                    text: "8"
                    literal {
                      type: number_type
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "seq64be"
            }
            child {
              kind: INDEX
              text: "["
              child {
                kind: EXPR
                child {
                  kind: LITERAL
                  text: "7"
                  literal {
                    type: number_type
                  }
                }
                tail: "]"
              }
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "unsigned"
          }
          child {
            kind: NAME
            text: "char"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "msg_hdr"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "seq"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "item"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "pqueue_find"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "s"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "d1"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "buffered_messages"
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "seq64be"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* If we already have an entry and this one is a fragment,$\n$         * don\'t discard it and rather try to reassemble it.$\n$         */"
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "item"
            }
            child {
              kind: OPERATOR
              text: "!="
            }
            child {
              kind: NAME
              text: "NULL"
            }
            child {
              kind: OPERATOR
              text: "&amp;&amp;"
            }
            child {
              kind: NAME
              text: "frag_len"
            }
            child {
              kind: OPERATOR
              text: "&lt;"
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "msg_hdr"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "msg_len"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "item"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: NAME
                  text: "NULL"
                }
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/* Discard the message if sequence number was already there, is$\n$         * too far in the future, already in the queue or if we received$\n$         * a FINISHED before the SERVER_HELLO, which then must be a stale$\n$         * retransmit.$\n$         */"
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "msg_hdr"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "seq"
              }
            }
            child {
              kind: OPERATOR
              text: "&lt;="
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "d1"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "handshake_read_seq"
              }
            }
            child {
              kind: OPERATOR
              text: "||"
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "msg_hdr"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "seq"
              }
            }
            child {
              kind: OPERATOR
              text: "&gt;"
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "d1"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "handshake_read_seq"
              }
            }
            child {
              kind: OPERATOR
              text: "+"
            }
            child {
              kind: LITERAL
              text: "10"
              literal {
                type: number_type
              }
            }
            child {
              kind: OPERATOR
              text: "||"
            }
            child {
              kind: NAME
              text: "item"
            }
            child {
              kind: OPERATOR
              text: "!="
            }
            child {
              kind: NAME
              text: "NULL"
            }
            child {
              kind: OPERATOR
              text: "||"
            }
            child {
              kind: OPERATOR
              text: "("
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "d1"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "handshake_read_seq"
              }
            }
            child {
              kind: OPERATOR
              text: "=="
            }
            child {
              kind: LITERAL
              text: "0"
              literal {
                type: number_type
              }
            }
            child {
              kind: OPERATOR
              text: "&amp;&amp;"
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "msg_hdr"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "type"
              }
            }
            child {
              kind: OPERATOR
              text: "=="
            }
            child {
              kind: NAME
              text: "SSL3_MT_FINISHED"
            }
            child {
              kind: OPERATOR
              text: ")"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: DECL_STMT
              child {
                kind: DECL
                child {
                  kind: TYPE
                  child {
                    kind: NAME
                    text: "unsigned"
                  }
                  child {
                    kind: NAME
                    text: "char"
                  }
                }
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "devnull"
                  }
                  child {
                    kind: INDEX
                    text: "["
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "256"
                        literal {
                          type: number_type
                        }
                      }
                      tail: "]"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: WHILE
              text: "while"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "frag_len"
                  }
                  tail: ")"
                }
              }
              child {
                kind: BLOCK
                text: "{"
                child {
                  kind: EXPR_STMT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "i"
                    }
                    child {
                      kind: OPERATOR
                      text: "="
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "s"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "method"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "ssl_read_bytes"
                        }
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "s"
                            }
                          }
                          tail: ","
                        }
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "SSL3_RT_HANDSHAKE"
                            }
                          }
                          tail: ","
                        }
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "devnull"
                            }
                          }
                          tail: ","
                        }
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: TERNARY
                              child {
                                kind: CONDITION
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "frag_len"
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "&gt;"
                                  }
                                  child {
                                    kind: SIZEOF
                                    text: "sizeof"
                                    child {
                                      kind: ARGUMENT_LIST
                                      text: "("
                                      child {
                                        kind: ARGUMENT
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: NAME
                                            text: "devnull"
                                          }
                                        }
                                        tail: ")"
                                      }
                                    }
                                  }
                                  tail: "?"
                                }
                              }
                              child {
                                kind: THEN
                                child {
                                  kind: EXPR
                                  child {
                                    kind: SIZEOF
                                    text: "sizeof"
                                    child {
                                      kind: ARGUMENT_LIST
                                      text: "("
                                      child {
                                        kind: ARGUMENT
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: NAME
                                            text: "devnull"
                                          }
                                        }
                                        tail: ")"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: ELSE
                                text: ":"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "frag_len"
                                  }
                                }
                              }
                            }
                          }
                          tail: ","
                        }
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: LITERAL
                              text: "0"
                              literal {
                                type: number_type
                              }
                            }
                          }
                          tail: ")"
                        }
                      }
                    }
                    tail: ";"
                  }
                }
                child {
                  kind: IF
                  text: "if"
                  child {
                    kind: CONDITION
                    text: "("
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "i"
                      }
                      child {
                        kind: OPERATOR
                        text: "&lt;="
                      }
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                          type: number_type
                        }
                      }
                      tail: ")"
                    }
                  }
                  child {
                    kind: THEN
                    child {
                      kind: BLOCK
                      child {
                        kind: GOTO
                        text: "goto"
                        child {
                          kind: NAME
                          text: "err"
                          tail: ";"
                        }
                      }
                    }
                  }
                }
                child {
                  kind: EXPR_STMT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "frag_len"
                    }
                    child {
                      kind: OPERATOR
                      text: "-="
                    }
                    child {
                      kind: NAME
                      text: "i"
                    }
                    tail: ";"
                  }
                  tail: "}"
                }
              }
              tail: "}"
            }
          }
        }
        child {
          kind: ELSE
          text: "else"
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: IF
              text: "if"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "frag_len"
                  }
                  child {
                    kind: OPERATOR
                    text: "&amp;&amp;"
                  }
                  child {
                    kind: NAME
                    text: "frag_len"
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                  }
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "msg_hdr"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "msg_len"
                    }
                  }
                  tail: ")"
                }
              }
              child {
                kind: THEN
                child {
                  kind: BLOCK
                  child {
                    kind: RETURN
                    text: "return"
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "dtls1_reassemble_fragment"
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "s"
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "msg_hdr"
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "ok"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                      tail: ";"
                    }
                  }
                }
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "frag"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "dtls1_hm_fragment_new"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "frag_len"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: LITERAL
                          text: "0"
                          literal {
                            type: number_type
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: IF
              text: "if"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "frag"
                  }
                  child {
                    kind: OPERATOR
                    text: "=="
                  }
                  child {
                    kind: NAME
                    text: "NULL"
                  }
                  tail: ")"
                }
              }
              child {
                kind: THEN
                child {
                  kind: BLOCK
                  child {
                    kind: GOTO
                    text: "goto"
                    child {
                      kind: NAME
                      text: "err"
                      tail: ";"
                    }
                  }
                }
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "memcpy"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: OPERATOR
                          text: "&amp;"
                        }
                        child {
                          kind: OPERATOR
                          text: "("
                        }
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "frag"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "msg_header"
                          }
                        }
                        child {
                          kind: OPERATOR
                          text: ")"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "msg_hdr"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: SIZEOF
                          text: "sizeof"
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: OPERATOR
                                  text: "*"
                                }
                                child {
                                  kind: NAME
                                  text: "msg_hdr"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: IF
              text: "if"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "frag_len"
                  }
                  tail: ")"
                }
              }
              child {
                kind: THEN
                child {
                  kind: BLOCK
                  text: "{"
                  child {
                    kind: COMMENT
                    text: "/* read the body of the fragment (header has already been read */"
                  }
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "i"
                      }
                      child {
                        kind: OPERATOR
                        text: "="
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "method"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "ssl_read_bytes"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "s"
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "SSL3_RT_HANDSHAKE"
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "frag"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-&gt;"
                                }
                                child {
                                  kind: NAME
                                  text: "fragment"
                                }
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "frag_len"
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "0"
                                literal {
                                  type: number_type
                                }
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                      tail: ";"
                    }
                  }
                  child {
                    kind: IF
                    text: "if"
                    child {
                      kind: CONDITION
                      text: "("
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "i"
                        }
                        child {
                          kind: OPERATOR
                          text: "&lt;="
                        }
                        child {
                          kind: LITERAL
                          text: "0"
                          literal {
                            type: number_type
                          }
                        }
                        child {
                          kind: OPERATOR
                          text: "||"
                        }
                        child {
                          kind: OPERATOR
                          text: "("
                        }
                        child {
                          kind: NAME
                          text: "unsigned"
                        }
                        child {
                          kind: NAME
                          text: "long"
                        }
                        child {
                          kind: OPERATOR
                          text: ")"
                        }
                        child {
                          kind: NAME
                          text: "i"
                        }
                        child {
                          kind: OPERATOR
                          text: "!="
                        }
                        child {
                          kind: NAME
                          text: "frag_len"
                        }
                        tail: ")"
                      }
                    }
                    child {
                      kind: THEN
                      child {
                        kind: BLOCK
                        child {
                          kind: GOTO
                          text: "goto"
                          child {
                            kind: NAME
                            text: "err"
                            tail: ";"
                          }
                        }
                      }
                    }
                    tail: "}"
                  }
                }
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "memset"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "seq64be"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: LITERAL
                          text: "0"
                          literal {
                            type: number_type
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: SIZEOF
                          text: "sizeof"
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "seq64be"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "seq64be"
                  }
                  child {
                    kind: INDEX
                    text: "["
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "6"
                        literal {
                          type: number_type
                        }
                      }
                      tail: "]"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: CALL
                  text: "("
                  child {
                    kind: NAME
                    text: "unsigned"
                  }
                  child {
                    kind: NAME
                    text: "char"
                    tail: ")"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "msg_hdr"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "seq"
                          }
                        }
                        child {
                          kind: OPERATOR
                          text: "&gt;&gt;"
                        }
                        child {
                          kind: LITERAL
                          text: "8"
                          literal {
                            type: number_type
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "seq64be"
                  }
                  child {
                    kind: INDEX
                    text: "["
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "7"
                        literal {
                          type: number_type
                        }
                      }
                      tail: "]"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: CALL
                  text: "("
                  child {
                    kind: NAME
                    text: "unsigned"
                  }
                  child {
                    kind: NAME
                    text: "char"
                    tail: ")"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "msg_hdr"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "seq"
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "item"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "pitem_new"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "seq64be"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "frag"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: IF
              text: "if"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "item"
                  }
                  child {
                    kind: OPERATOR
                    text: "=="
                  }
                  child {
                    kind: NAME
                    text: "NULL"
                  }
                  tail: ")"
                }
              }
              child {
                kind: THEN
                child {
                  kind: BLOCK
                  child {
                    kind: GOTO
                    text: "goto"
                    child {
                      kind: NAME
                      text: "err"
                      tail: ";"
                    }
                  }
                }
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "pqueue_insert"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "d1"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "buffered_messages"
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "item"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: RETURN
        text: "return"
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "DTLS1_HM_FRAGMENT_RETRY"
          }
          tail: ";"
        }
      }
      child {
        kind: LABEL
        child {
          kind: NAME
          text: "err"
          tail: ":"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "frag"
            }
            child {
              kind: OPERATOR
              text: "!="
            }
            child {
              kind: NAME
              text: "NULL"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "dtls1_hm_fragment_free"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "frag"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "item"
            }
            child {
              kind: OPERATOR
              text: "!="
            }
            child {
              kind: NAME
              text: "NULL"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "OPENSSL_free"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "item"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "*"
          }
          child {
            kind: NAME
            text: "ok"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: LITERAL
            text: "0"
            literal {
              type: number_type
            }
          }
          tail: ";"
        }
      }
      child {
        kind: RETURN
        text: "return"
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "i"
          }
          tail: ";"
        }
        tail: "}"
      }
    }
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "static"
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "long"
      }
    }
    child {
      kind: NAME
      text: "dtls1_get_message_fragment"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "SSL"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "s"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "st1"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "stn"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "long"
            }
          }
          child {
            kind: NAME
            text: "max"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "ok"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
            }
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "wire"
            }
            child {
              kind: INDEX
              text: "["
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "DTLS1_HM_HEADER_LENGTH"
                }
                tail: "]"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "long"
            }
          }
          child {
            kind: NAME
            text: "len"
          }
          tail: ","
        }
        child {
          kind: DECL
          child {
            kind: TYPE
            text: "This is just a placeholder. Please ignore this child."
          }
          child {
            kind: NAME
            text: "frag_off"
          }
          tail: ","
        }
        child {
          kind: DECL
          child {
            kind: TYPE
            text: "This is just a placeholder. Please ignore this child."
          }
          child {
            kind: NAME
            text: "frag_len"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "i"
          }
          tail: ","
        }
        child {
          kind: DECL
          child {
            kind: TYPE
            text: "This is just a placeholder. Please ignore this child."
          }
          child {
            kind: NAME
            text: "al"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              child {
                kind: NAME
                text: "struct"
              }
              child {
                kind: NAME
                text: "hm_header_st"
              }
            }
          }
          child {
            kind: NAME
            text: "msg_hdr"
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* see if we have the required fragment already */"
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: OPERATOR
              text: "("
            }
            child {
              kind: NAME
              text: "frag_len"
            }
            child {
              kind: OPERATOR
              text: "="
            }
            child {
              kind: CALL
              child {
                kind: NAME
                text: "dtls1_retrieve_buffered_fragment"
              }
              child {
                kind: ARGUMENT_LIST
                text: "("
                child {
                  kind: ARGUMENT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "s"
                    }
                  }
                  tail: ","
                }
                child {
                  kind: ARGUMENT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "max"
                    }
                  }
                  tail: ","
                }
                child {
                  kind: ARGUMENT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "ok"
                    }
                  }
                  tail: ")"
                }
              }
            }
            child {
              kind: OPERATOR
              text: ")"
            }
            child {
              kind: OPERATOR
              text: "||"
            }
            child {
              kind: OPERATOR
              text: "*"
            }
            child {
              kind: NAME
              text: "ok"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: IF
              text: "if"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "*"
                  }
                  child {
                    kind: NAME
                    text: "ok"
                  }
                  tail: ")"
                }
              }
              child {
                kind: THEN
                child {
                  kind: BLOCK
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "s"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "init_num"
                        }
                      }
                      child {
                        kind: OPERATOR
                        text: "="
                      }
                      child {
                        kind: NAME
                        text: "frag_len"
                      }
                      tail: ";"
                    }
                  }
                }
              }
            }
            child {
              kind: RETURN
              text: "return"
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "frag_len"
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/* read handshake message header */"
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "i"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: CALL
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "method"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "ssl_read_bytes"
              }
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "s"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "SSL3_RT_HANDSHAKE"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "wire"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "DTLS1_HM_HEADER_LENGTH"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "0"
                    literal {
                      type: number_type
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "i"
            }
            child {
              kind: OPERATOR
              text: "&lt;="
            }
            child {
              kind: LITERAL
              text: "0"
              literal {
                type: number_type
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: COMMENT
            text: "/* nbio, or an error */"
          }
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "rwstate"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: NAME
                  text: "SSL_READING"
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "*"
                }
                child {
                  kind: NAME
                  text: "ok"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: LITERAL
                  text: "0"
                  literal {
                    type: number_type
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: RETURN
              text: "return"
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "i"
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/* Handshake fails if message header is incomplete */"
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "i"
            }
            child {
              kind: OPERATOR
              text: "!="
            }
            child {
              kind: NAME
              text: "DTLS1_HM_HEADER_LENGTH"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "al"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: NAME
                  text: "SSL_AD_UNEXPECTED_MESSAGE"
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "SSLerr"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "SSL_F_DTLS1_GET_MESSAGE_FRAGMENT"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "SSL_R_UNEXPECTED_MESSAGE"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: GOTO
              text: "goto"
              child {
                kind: NAME
                text: "f_err"
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/* parse the message fragment header */"
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "dtls1_get_message_header"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "wire"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "&amp;"
                  }
                  child {
                    kind: NAME
                    text: "msg_hdr"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* $\n$         * if this is a future (or stale) message it gets buffered$\n$         * (or dropped)--no further processing at this time$\n$         * While listening, we accept seq 1 (ClientHello with cookie)$\n$         * although we\'re still expecting seq 0 (ClientHello)$\n$         */"
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "msg_hdr"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "seq"
              }
            }
            child {
              kind: OPERATOR
              text: "!="
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "d1"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "handshake_read_seq"
              }
            }
            child {
              kind: OPERATOR
              text: "&amp;&amp;"
            }
            child {
              kind: OPERATOR
              text: "!"
            }
            child {
              kind: OPERATOR
              text: "("
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "d1"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "listen"
              }
            }
            child {
              kind: OPERATOR
              text: "&amp;&amp;"
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "msg_hdr"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "seq"
              }
            }
            child {
              kind: OPERATOR
              text: "=="
            }
            child {
              kind: LITERAL
              text: "1"
              literal {
                type: number_type
              }
            }
            child {
              kind: OPERATOR
              text: ")"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return"
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "dtls1_process_out_of_seq_message"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "s"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: OPERATOR
                          text: "&amp;"
                        }
                        child {
                          kind: NAME
                          text: "msg_hdr"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "ok"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "len"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "msg_hdr"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "msg_len"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "frag_off"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "msg_hdr"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "frag_off"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "frag_len"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "msg_hdr"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "frag_len"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "frag_len"
            }
            child {
              kind: OPERATOR
              text: "&amp;&amp;"
            }
            child {
              kind: NAME
              text: "frag_len"
            }
            child {
              kind: OPERATOR
              text: "&lt;"
            }
            child {
              kind: NAME
              text: "len"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return"
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "dtls1_reassemble_fragment"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "s"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: OPERATOR
                          text: "&amp;"
                        }
                        child {
                          kind: NAME
                          text: "msg_hdr"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "ok"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: OPERATOR
              text: "!"
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "server"
              }
            }
            child {
              kind: OPERATOR
              text: "&amp;&amp;"
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "d1"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "r_msg_hdr"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "frag_off"
              }
            }
            child {
              kind: OPERATOR
              text: "=="
            }
            child {
              kind: LITERAL
              text: "0"
              literal {
                type: number_type
              }
            }
            child {
              kind: OPERATOR
              text: "&amp;&amp;"
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "wire"
              }
              child {
                kind: INDEX
                text: "["
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "0"
                    literal {
                      type: number_type
                    }
                  }
                  tail: "]"
                }
              }
            }
            child {
              kind: OPERATOR
              text: "=="
            }
            child {
              kind: NAME
              text: "SSL3_MT_HELLO_REQUEST"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: COMMENT
              text: "/* The server may always send \'Hello Request\' messages --$\n$                 * we are doing a handshake anyway now, so ignore them$\n$                 * if their format is correct. Does not count for$\n$                 * \'Finished\' MAC. */"
            }
            child {
              kind: IF
              text: "if"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "wire"
                    }
                    child {
                      kind: INDEX
                      text: "["
                      child {
                        kind: EXPR
                        child {
                          kind: LITERAL
                          text: "1"
                          literal {
                            type: number_type
                          }
                        }
                        tail: "]"
                      }
                    }
                  }
                  child {
                    kind: OPERATOR
                    text: "=="
                  }
                  child {
                    kind: LITERAL
                    text: "0"
                    literal {
                      type: number_type
                    }
                  }
                  child {
                    kind: OPERATOR
                    text: "&amp;&amp;"
                  }
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "wire"
                    }
                    child {
                      kind: INDEX
                      text: "["
                      child {
                        kind: EXPR
                        child {
                          kind: LITERAL
                          text: "2"
                          literal {
                            type: number_type
                          }
                        }
                        tail: "]"
                      }
                    }
                  }
                  child {
                    kind: OPERATOR
                    text: "=="
                  }
                  child {
                    kind: LITERAL
                    text: "0"
                    literal {
                      type: number_type
                    }
                  }
                  child {
                    kind: OPERATOR
                    text: "&amp;&amp;"
                  }
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "wire"
                    }
                    child {
                      kind: INDEX
                      text: "["
                      child {
                        kind: EXPR
                        child {
                          kind: LITERAL
                          text: "3"
                          literal {
                            type: number_type
                          }
                        }
                        tail: "]"
                      }
                    }
                  }
                  child {
                    kind: OPERATOR
                    text: "=="
                  }
                  child {
                    kind: LITERAL
                    text: "0"
                    literal {
                      type: number_type
                    }
                  }
                  tail: ")"
                }
              }
              child {
                kind: THEN
                child {
                  kind: BLOCK
                  text: "{"
                  child {
                    kind: IF
                    text: "if"
                    child {
                      kind: CONDITION
                      text: "("
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "msg_callback"
                          }
                        }
                        tail: ")"
                      }
                    }
                    child {
                      kind: THEN
                      child {
                        kind: BLOCK
                        child {
                          kind: EXPR_STMT
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "s"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-&gt;"
                                }
                                child {
                                  kind: NAME
                                  text: "msg_callback"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "0"
                                      literal {
                                        type: number_type
                                      }
                                    }
                                  }
                                  tail: ","
                                }
                                child {
                                  kind: ARGUMENT
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      child {
                                        kind: NAME
                                        text: "s"
                                      }
                                      child {
                                        kind: OPERATOR
                                        text: "-&gt;"
                                      }
                                      child {
                                        kind: NAME
                                        text: "version"
                                      }
                                    }
                                  }
                                  tail: ","
                                }
                                child {
                                  kind: ARGUMENT
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "SSL3_RT_HANDSHAKE"
                                    }
                                  }
                                  tail: ","
                                }
                                child {
                                  kind: ARGUMENT
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "wire"
                                    }
                                  }
                                  tail: ","
                                }
                                child {
                                  kind: ARGUMENT
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "DTLS1_HM_HEADER_LENGTH"
                                    }
                                  }
                                  tail: ","
                                }
                                child {
                                  kind: ARGUMENT
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "s"
                                    }
                                  }
                                  tail: ","
                                }
                                child {
                                  kind: ARGUMENT
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      child {
                                        kind: NAME
                                        text: "s"
                                      }
                                      child {
                                        kind: OPERATOR
                                        text: "-&gt;"
                                      }
                                      child {
                                        kind: NAME
                                        text: "msg_callback_arg"
                                      }
                                    }
                                  }
                                  tail: ")"
                                }
                              }
                            }
                            tail: ";"
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "s"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "init_num"
                        }
                      }
                      child {
                        kind: OPERATOR
                        text: "="
                      }
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                          type: number_type
                        }
                      }
                      tail: ";"
                    }
                  }
                  child {
                    kind: RETURN
                    text: "return"
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "dtls1_get_message_fragment"
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "s"
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "st1"
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "stn"
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "max"
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "ok"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                      tail: ";"
                    }
                    tail: "}"
                  }
                }
              }
              child {
                kind: ELSE
                text: "else"
                child {
                  kind: COMMENT
                  text: "/* Incorrectly formated Hello request */"
                }
                child {
                  kind: BLOCK
                  text: "{"
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "al"
                      }
                      child {
                        kind: OPERATOR
                        text: "="
                      }
                      child {
                        kind: NAME
                        text: "SSL_AD_UNEXPECTED_MESSAGE"
                      }
                      tail: ";"
                    }
                  }
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "SSLerr"
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "SSL_F_DTLS1_GET_MESSAGE_FRAGMENT"
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "SSL_R_UNEXPECTED_MESSAGE"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                      tail: ";"
                    }
                  }
                  child {
                    kind: GOTO
                    text: "goto"
                    child {
                      kind: NAME
                      text: "f_err"
                      tail: ";"
                    }
                    tail: "}"
                  }
                }
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: OPERATOR
              text: "("
            }
            child {
              kind: NAME
              text: "al"
            }
            child {
              kind: OPERATOR
              text: "="
            }
            child {
              kind: CALL
              child {
                kind: NAME
                text: "dtls1_preprocess_fragment"
              }
              child {
                kind: ARGUMENT_LIST
                text: "("
                child {
                  kind: ARGUMENT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "s"
                    }
                  }
                  tail: ","
                }
                child {
                  kind: ARGUMENT
                  child {
                    kind: EXPR
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                    }
                    child {
                      kind: NAME
                      text: "msg_hdr"
                    }
                  }
                  tail: ","
                }
                child {
                  kind: ARGUMENT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "max"
                    }
                  }
                  tail: ")"
                }
              }
            }
            child {
              kind: OPERATOR
              text: ")"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: GOTO
              text: "goto"
              child {
                kind: NAME
                text: "f_err"
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/* XDTLS:  ressurect this when restart is in place */"
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "state"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            text: "stn"
          }
          tail: ";"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "frag_len"
            }
            child {
              kind: OPERATOR
              text: "&gt;"
            }
            child {
              kind: LITERAL
              text: "0"
              literal {
                type: number_type
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: DECL_STMT
              child {
                kind: DECL
                child {
                  kind: TYPE
                  child {
                    kind: NAME
                    text: "unsigned"
                  }
                  child {
                    kind: NAME
                    text: "char"
                  }
                  child {
                    kind: MODIFIER
                    text: "*"
                  }
                }
                child {
                  kind: NAME
                  text: "p"
                }
                child {
                  kind: INIT
                  text: "="
                  child {
                    kind: EXPR
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "unsigned"
                    }
                    child {
                      kind: NAME
                      text: "char"
                    }
                    child {
                      kind: OPERATOR
                      text: "*"
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "s"
                      }
                      child {
                        kind: OPERATOR
                        text: "-&gt;"
                      }
                      child {
                        kind: NAME
                        text: "init_buf"
                      }
                      child {
                        kind: OPERATOR
                        text: "-&gt;"
                      }
                      child {
                        kind: NAME
                        text: "data"
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "+"
                    }
                    child {
                      kind: NAME
                      text: "DTLS1_HM_HEADER_LENGTH"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "i"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "s"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "method"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "ssl_read_bytes"
                    }
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "s"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "SSL3_RT_HANDSHAKE"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: OPERATOR
                          text: "&amp;"
                        }
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "p"
                          }
                          child {
                            kind: INDEX
                            text: "["
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "frag_off"
                              }
                              tail: "]"
                            }
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "frag_len"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: LITERAL
                          text: "0"
                          literal {
                            type: number_type
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: COMMENT
              text: "/* XDTLS:  fix this--message fragments cannot span multiple packets */"
            }
            child {
              kind: IF
              text: "if"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "i"
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;="
                  }
                  child {
                    kind: LITERAL
                    text: "0"
                    literal {
                      type: number_type
                    }
                  }
                  tail: ")"
                }
              }
              child {
                kind: THEN
                child {
                  kind: BLOCK
                  text: "{"
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "s"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "rwstate"
                        }
                      }
                      child {
                        kind: OPERATOR
                        text: "="
                      }
                      child {
                        kind: NAME
                        text: "SSL_READING"
                      }
                      tail: ";"
                    }
                  }
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "*"
                      }
                      child {
                        kind: NAME
                        text: "ok"
                      }
                      child {
                        kind: OPERATOR
                        text: "="
                      }
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                          type: number_type
                        }
                      }
                      tail: ";"
                    }
                  }
                  child {
                    kind: RETURN
                    text: "return"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "i"
                      }
                      tail: ";"
                    }
                    tail: "}"
                  }
                }
              }
              tail: "}"
            }
          }
        }
        child {
          kind: ELSE
          text: "else"
          child {
            kind: BLOCK
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "i"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: LITERAL
                  text: "0"
                  literal {
                    type: number_type
                  }
                }
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/* XDTLS:  an incorrectly formatted fragment should cause the $\n$         * handshake to fail */"
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "i"
            }
            child {
              kind: OPERATOR
              text: "!="
            }
            child {
              kind: OPERATOR
              text: "("
            }
            child {
              kind: NAME
              text: "int"
            }
            child {
              kind: OPERATOR
              text: ")"
            }
            child {
              kind: NAME
              text: "frag_len"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "al"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: NAME
                  text: "SSL3_AD_ILLEGAL_PARAMETER"
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "SSLerr"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "SSL_F_DTLS1_GET_MESSAGE_FRAGMENT"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "SSL3_AD_ILLEGAL_PARAMETER"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: GOTO
              text: "goto"
              child {
                kind: NAME
                text: "f_err"
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "*"
          }
          child {
            kind: NAME
            text: "ok"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: LITERAL
            text: "1"
            literal {
              type: number_type
            }
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* Note that s-&gt;init_num is *not* used as current offset in$\n$         * s-&gt;init_buf-&gt;data, but as a counter summing up fragments\'$\n$         * lengths: as soon as they sum up to handshake packet$\n$         * length, we assume we have got all the fragments. */"
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "init_num"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            text: "frag_len"
          }
          tail: ";"
        }
      }
      child {
        kind: RETURN
        text: "return"
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "frag_len"
          }
          tail: ";"
        }
      }
      child {
        kind: LABEL
        child {
          kind: NAME
          text: "f_err"
          tail: ":"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "ssl3_send_alert"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "s"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "SSL3_AL_FATAL"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "al"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "init_num"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: LITERAL
            text: "0"
            literal {
              type: number_type
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "*"
          }
          child {
            kind: NAME
            text: "ok"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: LITERAL
            text: "0"
            literal {
              type: number_type
            }
          }
          tail: ";"
        }
      }
      child {
        kind: RETURN
        text: "return"
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: OPERATOR
            text: "-"
          }
          child {
            kind: LITERAL
            text: "1"
            literal {
              type: number_type
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "}"
      }
    }
  }
  child {
    kind: FUNCTION
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "int"
      }
    }
    child {
      kind: NAME
      text: "dtls1_send_finished"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "SSL"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "s"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "a"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "b"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: SPECIFIER
              text: "const"
            }
            child {
              kind: NAME
              text: "char"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "sender"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "slen"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "p"
          }
          tail: ","
        }
        child {
          kind: MODIFIER
          text: "*"
        }
        child {
          kind: DECL
          child {
            kind: TYPE
            text: "This is just a placeholder. Please ignore this child."
          }
          child {
            kind: NAME
            text: "d"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "i"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "long"
            }
          }
          child {
            kind: NAME
            text: "l"
          }
          tail: ";"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "state"
              }
            }
            child {
              kind: OPERATOR
              text: "=="
            }
            child {
              kind: NAME
              text: "a"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "d"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "unsigned"
                }
                child {
                  kind: NAME
                  text: "char"
                }
                child {
                  kind: OPERATOR
                  text: "*"
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "init_buf"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "data"
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "p"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: OPERATOR
                  text: "&amp;"
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "d"
                  }
                  child {
                    kind: INDEX
                    text: "["
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "DTLS1_HM_HEADER_LENGTH"
                      }
                      tail: "]"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "i"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "s"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "method"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "ssl3_enc"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "final_finish_mac"
                    }
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "s"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "sender"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "slen"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "s3"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "tmp"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "finish_md"
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "s3"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "tmp"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "finish_md_len"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: NAME
                  text: "i"
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "memcpy"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "p"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "s3"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "tmp"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "finish_md"
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "i"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "p"
                }
                child {
                  kind: OPERATOR
                  text: "+="
                }
                child {
                  kind: NAME
                  text: "i"
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "l"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: NAME
                  text: "i"
                }
                tail: ";"
              }
            }
            child {
              kind: COMMENT
              text: "/* Copy the finished so we can use it for$\n$         * renegotiation checks$\n$         */"
            }
            child {
              kind: IF
              text: "if"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "s"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "type"
                    }
                  }
                  child {
                    kind: OPERATOR
                    text: "=="
                  }
                  child {
                    kind: NAME
                    text: "SSL_ST_CONNECT"
                  }
                  tail: ")"
                }
              }
              child {
                kind: THEN
                child {
                  kind: BLOCK
                  text: "{"
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "OPENSSL_assert"
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "i"
                              }
                              child {
                                kind: OPERATOR
                                text: "&lt;="
                              }
                              child {
                                kind: NAME
                                text: "EVP_MAX_MD_SIZE"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                      tail: ";"
                    }
                  }
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "memcpy"
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "s"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-&gt;"
                                }
                                child {
                                  kind: NAME
                                  text: "s3"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-&gt;"
                                }
                                child {
                                  kind: NAME
                                  text: "previous_client_finished"
                                }
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "s"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-&gt;"
                                }
                                child {
                                  kind: NAME
                                  text: "s3"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-&gt;"
                                }
                                child {
                                  kind: NAME
                                  text: "tmp"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "finish_md"
                                }
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "i"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                      tail: ";"
                    }
                  }
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "s"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "s3"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "previous_client_finished_len"
                        }
                      }
                      child {
                        kind: OPERATOR
                        text: "="
                      }
                      child {
                        kind: NAME
                        text: "i"
                      }
                      tail: ";"
                    }
                    tail: "}"
                  }
                }
              }
              child {
                kind: ELSE
                text: "else"
                child {
                  kind: BLOCK
                  text: "{"
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "OPENSSL_assert"
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "i"
                              }
                              child {
                                kind: OPERATOR
                                text: "&lt;="
                              }
                              child {
                                kind: NAME
                                text: "EVP_MAX_MD_SIZE"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                      tail: ";"
                    }
                  }
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "memcpy"
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "s"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-&gt;"
                                }
                                child {
                                  kind: NAME
                                  text: "s3"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-&gt;"
                                }
                                child {
                                  kind: NAME
                                  text: "previous_server_finished"
                                }
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "s"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-&gt;"
                                }
                                child {
                                  kind: NAME
                                  text: "s3"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-&gt;"
                                }
                                child {
                                  kind: NAME
                                  text: "tmp"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "finish_md"
                                }
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "i"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                      tail: ";"
                    }
                  }
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "s"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "s3"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "previous_server_finished_len"
                        }
                      }
                      child {
                        kind: OPERATOR
                        text: "="
                      }
                      child {
                        kind: NAME
                        text: "i"
                      }
                      tail: ";"
                    }
                    tail: "}"
                  }
                }
              }
            }
            child {
              kind: IFDEF
              text: "#"
              child {
                kind: DIRECTIVE
                text: "ifdef"
              }
              child {
                kind: NAME
                text: "OPENSSL_SYS_WIN16"
              }
            }
            child {
              kind: COMMENT
              text: "/* MSVC 1.5 does not clear the top bytes of the word unless$\n$                 * I do this.$\n$                 */"
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "l"
                }
                child {
                  kind: OPERATOR
                  text: "&amp;="
                }
                child {
                  kind: LITERAL
                  text: "0xffff"
                  literal {
                    type: number_type
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: ENDIF
              text: "#"
              child {
                kind: DIRECTIVE
                text: "endif"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "d"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "dtls1_set_message_header"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "s"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "d"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "SSL3_MT_FINISHED"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "l"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: LITERAL
                          text: "0"
                          literal {
                            type: number_type
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "l"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "init_num"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "int"
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                child {
                  kind: NAME
                  text: "l"
                }
                child {
                  kind: OPERATOR
                  text: "+"
                }
                child {
                  kind: NAME
                  text: "DTLS1_HM_HEADER_LENGTH"
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "init_off"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: LITERAL
                  text: "0"
                  literal {
                    type: number_type
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: COMMENT
              text: "/* buffer the message to handle re-xmits */"
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "dtls1_buffer_message"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "s"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: LITERAL
                          text: "0"
                          literal {
                            type: number_type
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "state"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: NAME
                  text: "b"
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/* SSL3_ST_SEND_xxxxxx_HELLO_B */"
      }
      child {
        kind: RETURN
        text: "return"
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "dtls1_do_write"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "s"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "SSL3_RT_HANDSHAKE"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "}"
      }
    }
  }
  child {
    kind: COMMENT
    text: "/* for these 2 messages, we need to$\n$ * ssl-&gt;enc_read_ctx                    re-init$\n$ * ssl-&gt;s3-&gt;read_sequence               zero$\n$ * ssl-&gt;s3-&gt;read_mac_secret             re-init$\n$ * ssl-&gt;session-&gt;read_sym_enc           assign$\n$ * ssl-&gt;session-&gt;read_compression       assign$\n$ * ssl-&gt;session-&gt;read_hash              assign$\n$ */"
  }
  child {
    kind: FUNCTION
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "int"
      }
    }
    child {
      kind: NAME
      text: "dtls1_send_change_cipher_spec"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "SSL"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "s"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "a"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "b"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "p"
          }
          tail: ";"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "state"
              }
            }
            child {
              kind: OPERATOR
              text: "=="
            }
            child {
              kind: NAME
              text: "a"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "p"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "unsigned"
                }
                child {
                  kind: NAME
                  text: "char"
                }
                child {
                  kind: OPERATOR
                  text: "*"
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "init_buf"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "data"
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "*"
                }
                child {
                  kind: NAME
                  text: "p"
                }
                child {
                  kind: OPERATOR
                  text: "++"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: NAME
                  text: "SSL3_MT_CCS"
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "d1"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "handshake_write_seq"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "d1"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "next_handshake_write_seq"
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "init_num"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: NAME
                  text: "DTLS1_CCS_HEADER_LENGTH"
                }
                tail: ";"
              }
            }
            child {
              kind: IF
              text: "if"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "s"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "version"
                    }
                  }
                  child {
                    kind: OPERATOR
                    text: "=="
                  }
                  child {
                    kind: NAME
                    text: "DTLS1_BAD_VER"
                  }
                  tail: ")"
                }
              }
              child {
                kind: THEN
                child {
                  kind: BLOCK
                  text: "{"
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "s"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "d1"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "next_handshake_write_seq"
                        }
                      }
                      child {
                        kind: OPERATOR
                        text: "++"
                      }
                      tail: ";"
                    }
                  }
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "s2n"
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "s"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-&gt;"
                                }
                                child {
                                  kind: NAME
                                  text: "d1"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-&gt;"
                                }
                                child {
                                  kind: NAME
                                  text: "handshake_write_seq"
                                }
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "p"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                      tail: ";"
                    }
                  }
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "s"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "init_num"
                        }
                      }
                      child {
                        kind: OPERATOR
                        text: "+="
                      }
                      child {
                        kind: LITERAL
                        text: "2"
                        literal {
                          type: number_type
                        }
                      }
                      tail: ";"
                    }
                    tail: "}"
                  }
                }
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "init_off"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: LITERAL
                  text: "0"
                  literal {
                    type: number_type
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "dtls1_set_message_header_int"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "s"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "SSL3_MT_CCS"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: LITERAL
                          text: "0"
                          literal {
                            type: number_type
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "d1"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "handshake_write_seq"
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: LITERAL
                          text: "0"
                          literal {
                            type: number_type
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: LITERAL
                          text: "0"
                          literal {
                            type: number_type
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: COMMENT
              text: "/* buffer the message to handle re-xmits */"
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "dtls1_buffer_message"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "s"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: LITERAL
                          text: "1"
                          literal {
                            type: number_type
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "state"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: NAME
                  text: "b"
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/* SSL3_ST_CW_CHANGE_B */"
      }
      child {
        kind: RETURN
        text: "return"
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "dtls1_do_write"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "s"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "SSL3_RT_CHANGE_CIPHER_SPEC"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "}"
      }
    }
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "static"
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "int"
      }
    }
    child {
      kind: NAME
      text: "dtls1_add_cert_to_buf"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "BUF_MEM"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "buf"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "long"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "l"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "X509"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "x"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "n"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "p"
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "n"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "i2d_X509"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "x"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "NULL"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: OPERATOR
              text: "!"
            }
            child {
              kind: CALL
              child {
                kind: NAME
                text: "BUF_MEM_grow_clean"
              }
              child {
                kind: ARGUMENT_LIST
                text: "("
                child {
                  kind: ARGUMENT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "buf"
                    }
                  }
                  tail: ","
                }
                child {
                  kind: ARGUMENT
                  child {
                    kind: EXPR
                    child {
                      kind: CALL
                      text: "("
                      child {
                        kind: NAME
                        text: "int"
                        tail: ")"
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "n"
                            }
                            child {
                              kind: OPERATOR
                              text: "+"
                            }
                            child {
                              kind: OPERATOR
                              text: "("
                            }
                            child {
                              kind: OPERATOR
                              text: "*"
                            }
                            child {
                              kind: NAME
                              text: "l"
                            }
                            child {
                              kind: OPERATOR
                              text: ")"
                            }
                            child {
                              kind: OPERATOR
                              text: "+"
                            }
                            child {
                              kind: LITERAL
                              text: "3"
                              literal {
                                type: number_type
                              }
                            }
                          }
                          tail: ")"
                        }
                      }
                    }
                  }
                  tail: ")"
                }
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "SSLerr"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "SSL_F_DTLS1_ADD_CERT_TO_BUF"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "ERR_R_BUF_LIB"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: RETURN
              text: "return"
              child {
                kind: EXPR
                child {
                  kind: LITERAL
                  text: "0"
                  literal {
                    type: number_type
                  }
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "p"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "unsigned"
          }
          child {
            kind: NAME
            text: "char"
          }
          child {
            kind: OPERATOR
            text: "*"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          child {
            kind: OPERATOR
            text: "&amp;"
          }
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "buf"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "data"
            }
            child {
              kind: INDEX
              text: "["
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "*"
                }
                child {
                  kind: NAME
                  text: "l"
                }
                tail: "]"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "l2n3"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "n"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "p"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "i2d_X509"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "x"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "&amp;"
                  }
                  child {
                    kind: NAME
                    text: "p"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "*"
          }
          child {
            kind: NAME
            text: "l"
          }
          child {
            kind: OPERATOR
            text: "+="
          }
          child {
            kind: NAME
            text: "n"
          }
          child {
            kind: OPERATOR
            text: "+"
          }
          child {
            kind: LITERAL
            text: "3"
            literal {
              type: number_type
            }
          }
          tail: ";"
        }
      }
      child {
        kind: RETURN
        text: "return"
        child {
          kind: EXPR
          child {
            kind: LITERAL
            text: "1"
            literal {
              type: number_type
            }
          }
          tail: ";"
        }
        tail: "}"
      }
    }
  }
  child {
    kind: FUNCTION
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "unsigned"
      }
      child {
        kind: NAME
        text: "long"
      }
    }
    child {
      kind: NAME
      text: "dtls1_output_cert_chain"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "SSL"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "s"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "X509"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "x"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "p"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "i"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "long"
            }
          }
          child {
            kind: NAME
            text: "l"
          }
          child {
            kind: INIT
            text: "="
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "3"
                literal {
                  type: number_type
                }
              }
              child {
                kind: OPERATOR
                text: "+"
              }
              child {
                kind: NAME
                text: "DTLS1_HM_HEADER_LENGTH"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "BUF_MEM"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "buf"
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* TLSv1 sends a chain with nothing in it, instead of an alert */"
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "buf"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "init_buf"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: OPERATOR
              text: "!"
            }
            child {
              kind: CALL
              child {
                kind: NAME
                text: "BUF_MEM_grow_clean"
              }
              child {
                kind: ARGUMENT_LIST
                text: "("
                child {
                  kind: ARGUMENT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "buf"
                    }
                  }
                  tail: ","
                }
                child {
                  kind: ARGUMENT
                  child {
                    kind: EXPR
                    child {
                      kind: LITERAL
                      text: "10"
                      literal {
                        type: number_type
                      }
                    }
                  }
                  tail: ")"
                }
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "SSLerr"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "SSL_F_DTLS1_OUTPUT_CERT_CHAIN"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "ERR_R_BUF_LIB"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: RETURN
              text: "return"
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: LITERAL
                  text: "0"
                  literal {
                    type: number_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "x"
            }
            child {
              kind: OPERATOR
              text: "!="
            }
            child {
              kind: NAME
              text: "NULL"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: DECL_STMT
              child {
                kind: DECL
                child {
                  kind: TYPE
                  child {
                    kind: NAME
                    text: "X509_STORE_CTX"
                  }
                }
                child {
                  kind: NAME
                  text: "xs_ctx"
                }
                tail: ";"
              }
            }
            child {
              kind: IF
              text: "if"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "!"
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "X509_STORE_CTX_init"
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: OPERATOR
                            text: "&amp;"
                          }
                          child {
                            kind: NAME
                            text: "xs_ctx"
                          }
                        }
                        tail: ","
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "s"
                            }
                            child {
                              kind: OPERATOR
                              text: "-&gt;"
                            }
                            child {
                              kind: NAME
                              text: "ctx"
                            }
                            child {
                              kind: OPERATOR
                              text: "-&gt;"
                            }
                            child {
                              kind: NAME
                              text: "cert_store"
                            }
                          }
                        }
                        tail: ","
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "x"
                          }
                        }
                        tail: ","
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "NULL"
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                  tail: ")"
                }
              }
              child {
                kind: THEN
                child {
                  kind: BLOCK
                  text: "{"
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "SSLerr"
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "SSL_F_DTLS1_OUTPUT_CERT_CHAIN"
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "ERR_R_X509_LIB"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                      tail: ";"
                    }
                  }
                  child {
                    kind: RETURN
                    text: "return"
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                          type: number_type
                        }
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                      }
                      tail: ";"
                    }
                    tail: "}"
                  }
                }
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "X509_verify_cert"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: OPERATOR
                          text: "&amp;"
                        }
                        child {
                          kind: NAME
                          text: "xs_ctx"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: COMMENT
              text: "/* Don\'t leave errors in the queue */"
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "ERR_clear_error"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "()"
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: FOR
              text: "for"
              child {
                kind: CONTROL
                text: "("
                child {
                  kind: INIT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "i"
                    }
                    child {
                      kind: OPERATOR
                      text: "="
                    }
                    child {
                      kind: LITERAL
                      text: "0"
                      literal {
                        type: number_type
                      }
                    }
                    tail: ";"
                  }
                }
                child {
                  kind: CONDITION
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "i"
                    }
                    child {
                      kind: OPERATOR
                      text: "&lt;"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "sk_X509_num"
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "xs_ctx"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "chain"
                              }
                            }
                          }
                          tail: ")"
                        }
                      }
                    }
                    tail: ";"
                  }
                }
                child {
                  kind: INCR
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "i"
                    }
                    child {
                      kind: OPERATOR
                      text: "++"
                    }
                  }
                  tail: ")"
                }
              }
              child {
                kind: BLOCK
                text: "{"
                child {
                  kind: EXPR_STMT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "x"
                    }
                    child {
                      kind: OPERATOR
                      text: "="
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "sk_X509_value"
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "xs_ctx"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "chain"
                              }
                            }
                          }
                          tail: ","
                        }
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "i"
                            }
                          }
                          tail: ")"
                        }
                      }
                    }
                    tail: ";"
                  }
                }
                child {
                  kind: IF
                  text: "if"
                  child {
                    kind: CONDITION
                    text: "("
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "!"
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "dtls1_add_cert_to_buf"
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "buf"
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                              }
                              child {
                                kind: NAME
                                text: "l"
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "x"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                  child {
                    kind: THEN
                    child {
                      kind: BLOCK
                      text: "{"
                      child {
                        kind: EXPR_STMT
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "X509_STORE_CTX_cleanup"
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: OPERATOR
                                    text: "&amp;"
                                  }
                                  child {
                                    kind: NAME
                                    text: "xs_ctx"
                                  }
                                }
                                tail: ")"
                              }
                            }
                          }
                          tail: ";"
                        }
                      }
                      child {
                        kind: RETURN
                        text: "return"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "0"
                            literal {
                              type: number_type
                            }
                          }
                          tail: ";"
                        }
                        tail: "}"
                      }
                    }
                  }
                  tail: "}"
                }
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "X509_STORE_CTX_cleanup"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: OPERATOR
                          text: "&amp;"
                        }
                        child {
                          kind: NAME
                          text: "xs_ctx"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/* Thawte special :-) */"
      }
      child {
        kind: FOR
        text: "for"
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "i"
              }
              child {
                kind: OPERATOR
                text: "="
              }
              child {
                kind: LITERAL
                text: "0"
                literal {
                  type: number_type
                }
              }
              tail: ";"
            }
          }
          child {
            kind: CONDITION
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "i"
              }
              child {
                kind: OPERATOR
                text: "&lt;"
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "sk_X509_num"
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "s"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "ctx"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "extra_certs"
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
          }
          child {
            kind: INCR
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "i"
              }
              child {
                kind: OPERATOR
                text: "++"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: BLOCK
          text: "{"
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "x"
              }
              child {
                kind: OPERATOR
                text: "="
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "sk_X509_value"
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "s"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "ctx"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "extra_certs"
                        }
                      }
                    }
                    tail: ","
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "i"
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
          }
          child {
            kind: IF
            text: "if"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "!"
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "dtls1_add_cert_to_buf"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "buf"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: OPERATOR
                          text: "&amp;"
                        }
                        child {
                          kind: NAME
                          text: "l"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "x"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return"
                  child {
                    kind: EXPR
                    child {
                      kind: LITERAL
                      text: "0"
                      literal {
                        type: number_type
                      }
                    }
                    tail: ";"
                  }
                }
              }
            }
            tail: "}"
          }
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "l"
          }
          child {
            kind: OPERATOR
            text: "-="
          }
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: LITERAL
            text: "3"
            literal {
              type: number_type
            }
          }
          child {
            kind: OPERATOR
            text: "+"
          }
          child {
            kind: NAME
            text: "DTLS1_HM_HEADER_LENGTH"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "p"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "unsigned"
          }
          child {
            kind: NAME
            text: "char"
          }
          child {
            kind: OPERATOR
            text: "*"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          child {
            kind: OPERATOR
            text: "&amp;"
          }
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "buf"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "data"
            }
            child {
              kind: INDEX
              text: "["
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "DTLS1_HM_HEADER_LENGTH"
                }
                tail: "]"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "l2n3"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "l"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "p"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "l"
          }
          child {
            kind: OPERATOR
            text: "+="
          }
          child {
            kind: LITERAL
            text: "3"
            literal {
              type: number_type
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "p"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "unsigned"
          }
          child {
            kind: NAME
            text: "char"
          }
          child {
            kind: OPERATOR
            text: "*"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          child {
            kind: OPERATOR
            text: "&amp;"
          }
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "buf"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "data"
            }
            child {
              kind: INDEX
              text: "["
              child {
                kind: EXPR
                child {
                  kind: LITERAL
                  text: "0"
                  literal {
                    type: number_type
                  }
                }
                tail: "]"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "p"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "dtls1_set_message_header"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "s"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "p"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "SSL3_MT_CERTIFICATE"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "l"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "0"
                    literal {
                      type: number_type
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "l"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "l"
          }
          child {
            kind: OPERATOR
            text: "+="
          }
          child {
            kind: NAME
            text: "DTLS1_HM_HEADER_LENGTH"
          }
          tail: ";"
        }
      }
      child {
        kind: RETURN
        text: "return"
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "l"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "}"
      }
    }
  }
  child {
    kind: FUNCTION
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "int"
      }
    }
    child {
      kind: NAME
      text: "dtls1_read_failed"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "SSL"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "s"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "code"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "code"
            }
            child {
              kind: OPERATOR
              text: "&gt;"
            }
            child {
              kind: LITERAL
              text: "0"
              literal {
                type: number_type
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "fprintf"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "stderr"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: LITERAL
                          text: "\"invalid state reached %s:%d\""
                          literal {
                            type: string_type
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "__FILE__"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "__LINE__"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: RETURN
              text: "return"
              child {
                kind: EXPR
                child {
                  kind: LITERAL
                  text: "1"
                  literal {
                    type: number_type
                  }
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: OPERATOR
              text: "!"
            }
            child {
              kind: CALL
              child {
                kind: NAME
                text: "dtls1_is_timer_expired"
              }
              child {
                kind: ARGUMENT_LIST
                text: "("
                child {
                  kind: ARGUMENT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "s"
                    }
                  }
                  tail: ")"
                }
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: COMMENT
              text: "/* not a timeout, none of our business, $\n$                   let higher layers handle this.  in fact it\'s probably an error */"
            }
            child {
              kind: RETURN
              text: "return"
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "code"
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: IFNDEF
        text: "#"
        child {
          kind: DIRECTIVE
          text: "ifndef"
        }
        child {
          kind: NAME
          text: "OPENSSL_NO_HEARTBEATS"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: OPERATOR
              text: "!"
            }
            child {
              kind: CALL
              child {
                kind: NAME
                text: "SSL_in_init"
              }
              child {
                kind: ARGUMENT_LIST
                text: "("
                child {
                  kind: ARGUMENT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "s"
                    }
                  }
                  tail: ")"
                }
              }
            }
            child {
              kind: OPERATOR
              text: "&amp;&amp;"
            }
            child {
              kind: OPERATOR
              text: "!"
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "tlsext_hb_pending"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: COMMENT
            text: "/* done, no need to send a retransmit */"
          }
          child {
            kind: ELSE
            text: "#"
            child {
              kind: DIRECTIVE
              text: "else"
            }
          }
          child {
            kind: BLOCK
            child {
              kind: IF
              text: "if"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "!"
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "SSL_in_init"
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "s"
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                  tail: ")"
                }
              }
              child {
                kind: THEN
                child {
                  kind: COMMENT
                  text: "/* done, no need to send a retransmit */"
                }
                child {
                  kind: ENDIF
                  text: "#"
                  child {
                    kind: DIRECTIVE
                    text: "endif"
                  }
                }
                child {
                  kind: BLOCK
                  text: "{"
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "BIO_set_flags"
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "SSL_get_rbio"
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "s"
                                      }
                                    }
                                    tail: ")"
                                  }
                                }
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "BIO_FLAGS_READ"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                      tail: ";"
                    }
                  }
                  child {
                    kind: RETURN
                    text: "return"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "code"
                      }
                      tail: ";"
                    }
                    tail: "}"
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: IF
        text: "#"
        child {
          kind: DIRECTIVE
          text: "if"
        }
        child {
          kind: EXPR
          child {
            kind: LITERAL
            text: "0"
            literal {
              type: number_type
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/* for now, each alert contains only one record number */"
        tail: "item = pqueue_peek(state-&gt;rcvd_records);$\n$        if ( item )$\n$                {"
      }
      child {
        kind: COMMENT
        text: "/* send an alert immediately for all the missing records */"
        tail: "}$\n$        else"
      }
      child {
        kind: ENDIF
        text: "#"
        child {
          kind: DIRECTIVE
          text: "endif"
        }
      }
      child {
        kind: IF
        text: "#"
        child {
          kind: DIRECTIVE
          text: "if"
        }
        child {
          kind: EXPR
          child {
            kind: LITERAL
            text: "0"
            literal {
              type: number_type
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/* no more alert sending, just retransmit the last set of messages */"
        tail: "if ( state-&gt;timeout.read_timeouts &gt;= DTLS1_TMO_READ_COUNT)$\n$                ssl3_send_alert(s,SSL3_AL_WARNING,$\n$                        DTLS1_AD_MISSING_HANDSHAKE_MESSAGE);"
      }
      child {
        kind: ENDIF
        text: "#"
        child {
          kind: DIRECTIVE
          text: "endif"
        }
      }
      child {
        kind: RETURN
        text: "return"
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "dtls1_handle_timeout"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "s"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
        tail: "}"
      }
    }
  }
  child {
    kind: FUNCTION
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "int"
      }
    }
    child {
      kind: NAME
      text: "dtls1_get_queue_priority"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "short"
            }
          }
          child {
            kind: NAME
            text: "seq"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "is_ccs"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: COMMENT
        text: "/* The index of the retransmission queue actually is the message sequence number,$\n$         * since the queue only contains messages of a single handshake. However, the$\n$         * ChangeCipherSpec has no message sequence number and so using only the sequence$\n$         * will result in the CCS and Finished having the same index. To prevent this,$\n$         * the sequence number is multiplied by 2. In case of a CCS 1 is subtracted.$\n$         * This does not only differ CSS and Finished, it also maintains the order of the$\n$         * index (important for priority queues) and fits in the unsigned short variable.$\n$         */"
      }
      child {
        kind: RETURN
        text: "return"
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "seq"
          }
          child {
            kind: OPERATOR
            text: "*"
          }
          child {
            kind: LITERAL
            text: "2"
            literal {
              type: number_type
            }
          }
          child {
            kind: OPERATOR
            text: "-"
          }
          child {
            kind: NAME
            text: "is_ccs"
          }
          tail: ";"
        }
        tail: "}"
      }
    }
  }
  child {
    kind: FUNCTION
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "int"
      }
    }
    child {
      kind: NAME
      text: "dtls1_retransmit_buffered_messages"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "SSL"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "s"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "pqueue"
            }
          }
          child {
            kind: NAME
            text: "sent"
          }
          child {
            kind: INIT
            text: "="
            child {
              kind: EXPR
              child {
                kind: NAME
                child {
                  kind: NAME
                  text: "s"
                }
                child {
                  kind: OPERATOR
                  text: "-&gt;"
                }
                child {
                  kind: NAME
                  text: "d1"
                }
                child {
                  kind: OPERATOR
                  text: "-&gt;"
                }
                child {
                  kind: NAME
                  text: "sent_messages"
                }
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "piterator"
            }
          }
          child {
            kind: NAME
            text: "iter"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "pitem"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "item"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "hm_fragment"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "frag"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "found"
          }
          child {
            kind: INIT
            text: "="
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "0"
                literal {
                  type: number_type
                }
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "iter"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "pqueue_iterator"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "sent"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: FOR
        text: "for"
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "item"
              }
              child {
                kind: OPERATOR
                text: "="
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "pqueue_next"
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "&amp;"
                      }
                      child {
                        kind: NAME
                        text: "iter"
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
          }
          child {
            kind: CONDITION
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "item"
              }
              child {
                kind: OPERATOR
                text: "!="
              }
              child {
                kind: NAME
                text: "NULL"
              }
              tail: ";"
            }
          }
          child {
            kind: INCR
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "item"
              }
              child {
                kind: OPERATOR
                text: "="
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "pqueue_next"
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "&amp;"
                      }
                      child {
                        kind: NAME
                        text: "iter"
                      }
                    }
                    tail: ")"
                  }
                }
              }
            }
            tail: ")"
          }
        }
        child {
          kind: BLOCK
          text: "{"
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "frag"
              }
              child {
                kind: OPERATOR
                text: "="
              }
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "hm_fragment"
              }
              child {
                kind: OPERATOR
                text: "*"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
              child {
                kind: NAME
                child {
                  kind: NAME
                  text: "item"
                }
                child {
                  kind: OPERATOR
                  text: "-&gt;"
                }
                child {
                  kind: NAME
                  text: "data"
                }
              }
              tail: ";"
            }
          }
          child {
            kind: IF
            text: "if"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "dtls1_retransmit_message"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "s"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: OPERATOR
                          text: "("
                        }
                        child {
                          kind: NAME
                          text: "unsigned"
                        }
                        child {
                          kind: NAME
                          text: "short"
                        }
                        child {
                          kind: OPERATOR
                          text: ")"
                        }
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "dtls1_get_queue_priority"
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  child {
                                    kind: NAME
                                    text: "frag"
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "-&gt;"
                                  }
                                  child {
                                    kind: NAME
                                    text: "msg_header"
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "."
                                  }
                                  child {
                                    kind: NAME
                                    text: "seq"
                                  }
                                }
                              }
                              tail: ","
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  child {
                                    kind: NAME
                                    text: "frag"
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "-&gt;"
                                  }
                                  child {
                                    kind: NAME
                                    text: "msg_header"
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "."
                                  }
                                  child {
                                    kind: NAME
                                    text: "is_ccs"
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: LITERAL
                          text: "0"
                          literal {
                            type: number_type
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: OPERATOR
                          text: "&amp;"
                        }
                        child {
                          kind: NAME
                          text: "found"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: "&lt;="
                }
                child {
                  kind: LITERAL
                  text: "0"
                  literal {
                    type: number_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: "&amp;&amp;"
                }
                child {
                  kind: NAME
                  text: "found"
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              child {
                kind: BLOCK
                text: "{"
                child {
                  kind: EXPR_STMT
                  child {
                    kind: EXPR
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "fprintf"
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "stderr"
                            }
                          }
                          tail: ","
                        }
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: LITERAL
                              text: "\"dtls1_retransmit_message() failed\n\""
                              literal {
                                type: string_type
                              }
                            }
                          }
                          tail: ")"
                        }
                      }
                    }
                    tail: ";"
                  }
                }
                child {
                  kind: RETURN
                  text: "return"
                  child {
                    kind: EXPR
                    child {
                      kind: OPERATOR
                      text: "-"
                    }
                    child {
                      kind: LITERAL
                      text: "1"
                      literal {
                        type: number_type
                      }
                    }
                    tail: ";"
                  }
                  tail: "}"
                }
              }
            }
            tail: "}"
          }
        }
      }
      child {
        kind: RETURN
        text: "return"
        child {
          kind: EXPR
          child {
            kind: LITERAL
            text: "1"
            literal {
              type: number_type
            }
          }
          tail: ";"
        }
        tail: "}"
      }
    }
  }
  child {
    kind: FUNCTION
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "int"
      }
    }
    child {
      kind: NAME
      text: "dtls1_buffer_message"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "SSL"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "s"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "is_ccs"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "pitem"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "item"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "hm_fragment"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "frag"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
            }
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "seq64be"
            }
            child {
              kind: INDEX
              text: "["
              child {
                kind: EXPR
                child {
                  kind: LITERAL
                  text: "8"
                  literal {
                    type: number_type
                  }
                }
                tail: "]"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* this function is called immediately after a message has $\n$         * been serialized */"
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "OPENSSL_assert"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "s"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "init_off"
                    }
                  }
                  child {
                    kind: OPERATOR
                    text: "=="
                  }
                  child {
                    kind: LITERAL
                    text: "0"
                    literal {
                      type: number_type
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "frag"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "dtls1_hm_fragment_new"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "s"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "init_num"
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "0"
                    literal {
                      type: number_type
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "memcpy"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "frag"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "fragment"
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "s"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "init_buf"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "data"
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "s"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "init_num"
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "is_ccs"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "OPENSSL_assert"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "d1"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "w_msg_hdr"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "msg_len"
                          }
                        }
                        child {
                          kind: OPERATOR
                          text: "+"
                        }
                        child {
                          kind: OPERATOR
                          text: "("
                        }
                        child {
                          kind: TERNARY
                          child {
                            kind: CONDITION
                            child {
                              kind: EXPR
                              child {
                                kind: OPERATOR
                                text: "("
                              }
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "s"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-&gt;"
                                }
                                child {
                                  kind: NAME
                                  text: "version"
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "=="
                              }
                              child {
                                kind: NAME
                                text: "DTLS1_VERSION"
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                              tail: "?"
                            }
                          }
                          child {
                            kind: THEN
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "DTLS1_CCS_HEADER_LENGTH"
                              }
                            }
                          }
                          child {
                            kind: ELSE
                            text: ":"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "3"
                                literal {
                                  type: number_type
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: OPERATOR
                          text: ")"
                        }
                        child {
                          kind: OPERATOR
                          text: "=="
                        }
                        child {
                          kind: OPERATOR
                          text: "("
                        }
                        child {
                          kind: NAME
                          text: "unsigned"
                        }
                        child {
                          kind: NAME
                          text: "int"
                        }
                        child {
                          kind: OPERATOR
                          text: ")"
                        }
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "init_num"
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
        child {
          kind: ELSE
          text: "else"
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "OPENSSL_assert"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "d1"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "w_msg_hdr"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "msg_len"
                          }
                        }
                        child {
                          kind: OPERATOR
                          text: "+"
                        }
                        child {
                          kind: NAME
                          text: "DTLS1_HM_HEADER_LENGTH"
                        }
                        child {
                          kind: OPERATOR
                          text: "=="
                        }
                        child {
                          kind: OPERATOR
                          text: "("
                        }
                        child {
                          kind: NAME
                          text: "unsigned"
                        }
                        child {
                          kind: NAME
                          text: "int"
                        }
                        child {
                          kind: OPERATOR
                          text: ")"
                        }
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "init_num"
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "frag"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "msg_header"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "msg_len"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "d1"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "w_msg_hdr"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "msg_len"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "frag"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "msg_header"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "seq"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "d1"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "w_msg_hdr"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "seq"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "frag"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "msg_header"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "type"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "d1"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "w_msg_hdr"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "type"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "frag"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "msg_header"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "frag_off"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: LITERAL
            text: "0"
            literal {
              type: number_type
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "frag"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "msg_header"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "frag_len"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "d1"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "w_msg_hdr"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "msg_len"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "frag"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "msg_header"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "is_ccs"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            text: "is_ccs"
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* save current state*/"
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "frag"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "msg_header"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "saved_retransmit_state"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "enc_write_ctx"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "enc_write_ctx"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "frag"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "msg_header"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "saved_retransmit_state"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "write_hash"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "write_hash"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "frag"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "msg_header"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "saved_retransmit_state"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "compress"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "compress"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "frag"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "msg_header"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "saved_retransmit_state"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "session"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "session"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "frag"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "msg_header"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "saved_retransmit_state"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "epoch"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "d1"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "w_epoch"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "memset"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "seq64be"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "0"
                    literal {
                      type: number_type
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: SIZEOF
                    text: "sizeof"
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "seq64be"
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "seq64be"
            }
            child {
              kind: INDEX
              text: "["
              child {
                kind: EXPR
                child {
                  kind: LITERAL
                  text: "6"
                  literal {
                    type: number_type
                  }
                }
                tail: "]"
              }
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: CALL
            text: "("
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
              tail: ")"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "dtls1_get_queue_priority"
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "frag"
                            }
                            child {
                              kind: OPERATOR
                              text: "-&gt;"
                            }
                            child {
                              kind: NAME
                              text: "msg_header"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "seq"
                            }
                          }
                        }
                        tail: ","
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "frag"
                            }
                            child {
                              kind: OPERATOR
                              text: "-&gt;"
                            }
                            child {
                              kind: NAME
                              text: "msg_header"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "is_ccs"
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: OPERATOR
                    text: "&gt;&gt;"
                  }
                  child {
                    kind: LITERAL
                    text: "8"
                    literal {
                      type: number_type
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "seq64be"
            }
            child {
              kind: INDEX
              text: "["
              child {
                kind: EXPR
                child {
                  kind: LITERAL
                  text: "7"
                  literal {
                    type: number_type
                  }
                }
                tail: "]"
              }
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: CALL
            text: "("
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
              tail: ")"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "dtls1_get_queue_priority"
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "frag"
                            }
                            child {
                              kind: OPERATOR
                              text: "-&gt;"
                            }
                            child {
                              kind: NAME
                              text: "msg_header"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "seq"
                            }
                          }
                        }
                        tail: ","
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "frag"
                            }
                            child {
                              kind: OPERATOR
                              text: "-&gt;"
                            }
                            child {
                              kind: NAME
                              text: "msg_header"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "is_ccs"
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "item"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "pitem_new"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "seq64be"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "frag"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "item"
            }
            child {
              kind: OPERATOR
              text: "=="
            }
            child {
              kind: NAME
              text: "NULL"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "dtls1_hm_fragment_free"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "frag"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: RETURN
              text: "return"
              child {
                kind: EXPR
                child {
                  kind: LITERAL
                  text: "0"
                  literal {
                    type: number_type
                  }
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: IF
        text: "#"
        child {
          kind: DIRECTIVE
          text: "if"
        }
        child {
          kind: EXPR
          child {
            kind: LITERAL
            text: "0"
            literal {
              type: number_type
            }
          }
        }
        tail: "fprintf( stderr, \"buffered messge: \\ttype = %xx\\n\", msg_buf-&gt;type);$\n$        fprintf( stderr, \"\\t\\t\\t\\t\\tlen = %d\\n\", msg_buf-&gt;len);$\n$        fprintf( stderr, \"\\t\\t\\t\\t\\tseq_num = %d\\n\", msg_buf-&gt;seq_num);"
      }
      child {
        kind: ENDIF
        text: "#"
        child {
          kind: DIRECTIVE
          text: "endif"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "pqueue_insert"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "s"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "d1"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "sent_messages"
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "item"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: RETURN
        text: "return"
        child {
          kind: EXPR
          child {
            kind: LITERAL
            text: "1"
            literal {
              type: number_type
            }
          }
          tail: ";"
        }
        tail: "}"
      }
    }
  }
  child {
    kind: FUNCTION
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "int"
      }
    }
    child {
      kind: NAME
      text: "dtls1_retransmit_message"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "SSL"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "s"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "short"
            }
          }
          child {
            kind: NAME
            text: "seq"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "long"
            }
          }
          child {
            kind: NAME
            text: "frag_off"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "found"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "ret"
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* XDTLS: for now assuming that read/writes are blocking */"
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "pitem"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "item"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "hm_fragment"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "frag"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "long"
            }
          }
          child {
            kind: NAME
            text: "header_length"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
            }
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "seq64be"
            }
            child {
              kind: INDEX
              text: "["
              child {
                kind: EXPR
                child {
                  kind: LITERAL
                  text: "8"
                  literal {
                    type: number_type
                  }
                }
                tail: "]"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              child {
                kind: NAME
                text: "struct"
              }
              child {
                kind: NAME
                text: "dtls1_retransmit_state"
              }
            }
          }
          child {
            kind: NAME
            text: "saved_state"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
            }
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "save_write_sequence"
            }
            child {
              kind: INDEX
              text: "["
              child {
                kind: EXPR
                child {
                  kind: LITERAL
                  text: "8"
                  literal {
                    type: number_type
                  }
                }
                tail: "]"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/*$\n$          OPENSSL_assert(s-&gt;init_num == 0);$\n$          OPENSSL_assert(s-&gt;init_off == 0);$\n$         */"
      }
      child {
        kind: COMMENT
        text: "/* XDTLS:  the requested message ought to be found, otherwise error */"
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "memset"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "seq64be"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "0"
                    literal {
                      type: number_type
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: SIZEOF
                    text: "sizeof"
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "seq64be"
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "seq64be"
            }
            child {
              kind: INDEX
              text: "["
              child {
                kind: EXPR
                child {
                  kind: LITERAL
                  text: "6"
                  literal {
                    type: number_type
                  }
                }
                tail: "]"
              }
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: CALL
            text: "("
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
              tail: ")"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "seq"
                  }
                  child {
                    kind: OPERATOR
                    text: "&gt;&gt;"
                  }
                  child {
                    kind: LITERAL
                    text: "8"
                    literal {
                      type: number_type
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "seq64be"
            }
            child {
              kind: INDEX
              text: "["
              child {
                kind: EXPR
                child {
                  kind: LITERAL
                  text: "7"
                  literal {
                    type: number_type
                  }
                }
                tail: "]"
              }
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "unsigned"
          }
          child {
            kind: NAME
            text: "char"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          child {
            kind: NAME
            text: "seq"
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "item"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "pqueue_find"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "s"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "d1"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "sent_messages"
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "seq64be"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "item"
            }
            child {
              kind: OPERATOR
              text: "=="
            }
            child {
              kind: NAME
              text: "NULL"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "fprintf"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "stderr"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: LITERAL
                          text: "\"retransmit:  message %d non-existant\n\""
                          literal {
                            type: string_type
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "seq"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "*"
                }
                child {
                  kind: NAME
                  text: "found"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: LITERAL
                  text: "0"
                  literal {
                    type: number_type
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: RETURN
              text: "return"
              child {
                kind: EXPR
                child {
                  kind: LITERAL
                  text: "0"
                  literal {
                    type: number_type
                  }
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "*"
          }
          child {
            kind: NAME
            text: "found"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: LITERAL
            text: "1"
            literal {
              type: number_type
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "frag"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "hm_fragment"
          }
          child {
            kind: OPERATOR
            text: "*"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "item"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "data"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "frag"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "msg_header"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "is_ccs"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "header_length"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: NAME
                  text: "DTLS1_CCS_HEADER_LENGTH"
                }
                tail: ";"
              }
            }
          }
        }
        child {
          kind: ELSE
          text: "else"
          child {
            kind: BLOCK
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "header_length"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: NAME
                  text: "DTLS1_HM_HEADER_LENGTH"
                }
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "memcpy"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "s"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "init_buf"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "data"
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "frag"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "fragment"
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "frag"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "msg_header"
                    }
                    child {
                      kind: OPERATOR
                      text: "."
                    }
                    child {
                      kind: NAME
                      text: "msg_len"
                    }
                  }
                  child {
                    kind: OPERATOR
                    text: "+"
                  }
                  child {
                    kind: NAME
                    text: "header_length"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "init_num"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "frag"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "msg_header"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "msg_len"
            }
          }
          child {
            kind: OPERATOR
            text: "+"
          }
          child {
            kind: NAME
            text: "header_length"
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "dtls1_set_message_header_int"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "s"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "frag"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "msg_header"
                    }
                    child {
                      kind: OPERATOR
                      text: "."
                    }
                    child {
                      kind: NAME
                      text: "type"
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "frag"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "msg_header"
                    }
                    child {
                      kind: OPERATOR
                      text: "."
                    }
                    child {
                      kind: NAME
                      text: "msg_len"
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "frag"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "msg_header"
                    }
                    child {
                      kind: OPERATOR
                      text: "."
                    }
                    child {
                      kind: NAME
                      text: "seq"
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "0"
                    literal {
                      type: number_type
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "frag"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "msg_header"
                    }
                    child {
                      kind: OPERATOR
                      text: "."
                    }
                    child {
                      kind: NAME
                      text: "frag_len"
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* save current state */"
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "saved_state"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "enc_write_ctx"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "enc_write_ctx"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "saved_state"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "write_hash"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "write_hash"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "saved_state"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "compress"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "compress"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "saved_state"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "session"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "session"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "saved_state"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "epoch"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "d1"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "w_epoch"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "saved_state"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "epoch"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "d1"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "w_epoch"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "d1"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "retransmitting"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: LITERAL
            text: "1"
            literal {
              type: number_type
            }
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* restore state in which the message was originally sent */"
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "enc_write_ctx"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "frag"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "msg_header"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "saved_retransmit_state"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "enc_write_ctx"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "write_hash"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "frag"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "msg_header"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "saved_retransmit_state"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "write_hash"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "compress"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "frag"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "msg_header"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "saved_retransmit_state"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "compress"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "session"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "frag"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "msg_header"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "saved_retransmit_state"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "session"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "d1"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "w_epoch"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "frag"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "msg_header"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "saved_retransmit_state"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "epoch"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "frag"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "msg_header"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "saved_retransmit_state"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "epoch"
              }
            }
            child {
              kind: OPERATOR
              text: "=="
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "saved_state"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "epoch"
              }
            }
            child {
              kind: OPERATOR
              text: "-"
            }
            child {
              kind: LITERAL
              text: "1"
              literal {
                type: number_type
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "memcpy"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "save_write_sequence"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "s3"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "write_sequence"
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: SIZEOF
                          text: "sizeof"
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  child {
                                    kind: NAME
                                    text: "s"
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "-&gt;"
                                  }
                                  child {
                                    kind: NAME
                                    text: "s3"
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "-&gt;"
                                  }
                                  child {
                                    kind: NAME
                                    text: "write_sequence"
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "memcpy"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "s3"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "write_sequence"
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "d1"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "last_write_sequence"
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: SIZEOF
                          text: "sizeof"
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  child {
                                    kind: NAME
                                    text: "s"
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "-&gt;"
                                  }
                                  child {
                                    kind: NAME
                                    text: "s3"
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "-&gt;"
                                  }
                                  child {
                                    kind: NAME
                                    text: "write_sequence"
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "ret"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "dtls1_do_write"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "s"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: TERNARY
                    child {
                      kind: CONDITION
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "frag"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "msg_header"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "is_ccs"
                          }
                        }
                        tail: "?"
                      }
                    }
                    child {
                      kind: THEN
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "SSL3_RT_CHANGE_CIPHER_SPEC"
                        }
                      }
                    }
                    child {
                      kind: ELSE
                      text: ":"
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "SSL3_RT_HANDSHAKE"
                        }
                      }
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* restore current state */"
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "enc_write_ctx"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "saved_state"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "enc_write_ctx"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "write_hash"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "saved_state"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "write_hash"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "compress"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "saved_state"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "compress"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "session"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "saved_state"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "session"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "d1"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "w_epoch"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "saved_state"
            }
            child {
              kind: OPERATOR
              text: "."
            }
            child {
              kind: NAME
              text: "epoch"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "frag"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "msg_header"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "saved_retransmit_state"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "epoch"
              }
            }
            child {
              kind: OPERATOR
              text: "=="
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "saved_state"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "epoch"
              }
            }
            child {
              kind: OPERATOR
              text: "-"
            }
            child {
              kind: LITERAL
              text: "1"
              literal {
                type: number_type
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "memcpy"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "d1"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "last_write_sequence"
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "s3"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "write_sequence"
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: SIZEOF
                          text: "sizeof"
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  child {
                                    kind: NAME
                                    text: "s"
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "-&gt;"
                                  }
                                  child {
                                    kind: NAME
                                    text: "s3"
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "-&gt;"
                                  }
                                  child {
                                    kind: NAME
                                    text: "write_sequence"
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "memcpy"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "s3"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "write_sequence"
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "save_write_sequence"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: SIZEOF
                          text: "sizeof"
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  child {
                                    kind: NAME
                                    text: "s"
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "-&gt;"
                                  }
                                  child {
                                    kind: NAME
                                    text: "s3"
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "-&gt;"
                                  }
                                  child {
                                    kind: NAME
                                    text: "write_sequence"
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "s"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "d1"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "retransmitting"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: LITERAL
            text: "0"
            literal {
              type: number_type
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "void"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "BIO_flush"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "SSL_get_wbio"
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "s"
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: RETURN
        text: "return"
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "ret"
          }
          tail: ";"
        }
        tail: "}"
      }
    }
  }
  child {
    kind: COMMENT
    text: "/* call this function when the buffered messages are no longer needed */"
  }
  child {
    kind: FUNCTION
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "void"
      }
    }
    child {
      kind: NAME
      text: "dtls1_clear_record_buffer"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "SSL"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "s"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "pitem"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "item"
          }
          tail: ";"
        }
      }
      child {
        kind: FOR
        text: "for"
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "item"
              }
              child {
                kind: OPERATOR
                text: "="
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "pqueue_pop"
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "s"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "d1"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "sent_messages"
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
          }
          child {
            kind: CONDITION
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "item"
              }
              child {
                kind: OPERATOR
                text: "!="
              }
              child {
                kind: NAME
                text: "NULL"
              }
              tail: ";"
            }
          }
          child {
            kind: INCR
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "item"
              }
              child {
                kind: OPERATOR
                text: "="
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "pqueue_pop"
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "s"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "d1"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "sent_messages"
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
            }
            tail: ")"
          }
        }
        child {
          kind: BLOCK
          text: "{"
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "dtls1_hm_fragment_free"
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "hm_fragment"
                      }
                      child {
                        kind: OPERATOR
                        text: "*"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                      }
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "item"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "data"
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "pitem_free"
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "item"
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "}"
          }
        }
        tail: "}"
      }
    }
  }
  child {
    kind: FUNCTION
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "unsigned"
      }
      child {
        kind: NAME
        text: "char"
      }
      child {
        kind: MODIFIER
        text: "*"
      }
    }
    child {
      kind: NAME
      text: "dtls1_set_message_header"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "SSL"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "s"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "p"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
            }
          }
          child {
            kind: NAME
            text: "mt"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "long"
            }
          }
          child {
            kind: NAME
            text: "len"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "long"
            }
          }
          child {
            kind: NAME
            text: "frag_off"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "long"
            }
          }
          child {
            kind: NAME
            text: "frag_len"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: COMMENT
        text: "/* Don\'t change sequence numbers while listening */"
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "frag_off"
            }
            child {
              kind: OPERATOR
              text: "=="
            }
            child {
              kind: LITERAL
              text: "0"
              literal {
                type: number_type
              }
            }
            child {
              kind: OPERATOR
              text: "&amp;&amp;"
            }
            child {
              kind: OPERATOR
              text: "!"
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "d1"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "listen"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "d1"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "handshake_write_seq"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "d1"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "next_handshake_write_seq"
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "d1"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "next_handshake_write_seq"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "++"
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "dtls1_set_message_header_int"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "s"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "mt"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "len"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "s"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "d1"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "handshake_write_seq"
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "frag_off"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "frag_len"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: RETURN
        text: "return"
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "p"
          }
          child {
            kind: OPERATOR
            text: "+="
          }
          child {
            kind: NAME
            text: "DTLS1_HM_HEADER_LENGTH"
          }
          tail: ";"
        }
        tail: "}"
      }
    }
  }
  child {
    kind: COMMENT
    text: "/* don\'t actually do the writing, wait till the MTU has been retrieved */"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "static"
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "void"
      }
    }
    child {
      kind: NAME
      text: "dtls1_set_message_header_int"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "SSL"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "s"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
            }
          }
          child {
            kind: NAME
            text: "mt"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "long"
            }
          }
          child {
            kind: NAME
            text: "len"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "short"
            }
          }
          child {
            kind: NAME
            text: "seq_num"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "long"
            }
          }
          child {
            kind: NAME
            text: "frag_off"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "long"
            }
          }
          child {
            kind: NAME
            text: "frag_len"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              child {
                kind: NAME
                text: "struct"
              }
              child {
                kind: NAME
                text: "hm_header_st"
              }
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "msg_hdr"
          }
          child {
            kind: INIT
            text: "="
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "&amp;"
              }
              child {
                kind: NAME
                child {
                  kind: NAME
                  text: "s"
                }
                child {
                  kind: OPERATOR
                  text: "-&gt;"
                }
                child {
                  kind: NAME
                  text: "d1"
                }
                child {
                  kind: OPERATOR
                  text: "-&gt;"
                }
                child {
                  kind: NAME
                  text: "w_msg_hdr"
                }
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "msg_hdr"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "type"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            text: "mt"
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "msg_hdr"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "msg_len"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            text: "len"
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "msg_hdr"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "seq"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            text: "seq_num"
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "msg_hdr"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "frag_off"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            text: "frag_off"
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "msg_hdr"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "frag_len"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            text: "frag_len"
          }
          tail: ";"
        }
        tail: "}"
      }
    }
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "static"
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "void"
      }
    }
    child {
      kind: NAME
      text: "dtls1_fix_message_header"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "SSL"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "s"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "long"
            }
          }
          child {
            kind: NAME
            text: "frag_off"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "long"
            }
          }
          child {
            kind: NAME
            text: "frag_len"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              child {
                kind: NAME
                text: "struct"
              }
              child {
                kind: NAME
                text: "hm_header_st"
              }
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "msg_hdr"
          }
          child {
            kind: INIT
            text: "="
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "&amp;"
              }
              child {
                kind: NAME
                child {
                  kind: NAME
                  text: "s"
                }
                child {
                  kind: OPERATOR
                  text: "-&gt;"
                }
                child {
                  kind: NAME
                  text: "d1"
                }
                child {
                  kind: OPERATOR
                  text: "-&gt;"
                }
                child {
                  kind: NAME
                  text: "w_msg_hdr"
                }
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "msg_hdr"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "frag_off"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            text: "frag_off"
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "msg_hdr"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "frag_len"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            text: "frag_len"
          }
          tail: ";"
        }
        tail: "}"
      }
    }
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "static"
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "unsigned"
      }
      child {
        kind: NAME
        text: "char"
      }
      child {
        kind: MODIFIER
        text: "*"
      }
    }
    child {
      kind: NAME
      text: "dtls1_write_message_header"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "SSL"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "s"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "p"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              child {
                kind: NAME
                text: "struct"
              }
              child {
                kind: NAME
                text: "hm_header_st"
              }
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "msg_hdr"
          }
          child {
            kind: INIT
            text: "="
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "&amp;"
              }
              child {
                kind: NAME
                child {
                  kind: NAME
                  text: "s"
                }
                child {
                  kind: OPERATOR
                  text: "-&gt;"
                }
                child {
                  kind: NAME
                  text: "d1"
                }
                child {
                  kind: OPERATOR
                  text: "-&gt;"
                }
                child {
                  kind: NAME
                  text: "w_msg_hdr"
                }
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "*"
          }
          child {
            kind: NAME
            text: "p"
          }
          child {
            kind: OPERATOR
            text: "++"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "msg_hdr"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "type"
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "l2n3"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "msg_hdr"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "msg_len"
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "p"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "s2n"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "msg_hdr"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "seq"
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "p"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "l2n3"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "msg_hdr"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "frag_off"
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "p"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "l2n3"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "msg_hdr"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "frag_len"
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "p"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: RETURN
        text: "return"
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "p"
          }
          tail: ";"
        }
        tail: "}"
      }
    }
  }
  child {
    kind: FUNCTION
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "unsigned"
      }
      child {
        kind: NAME
        text: "int"
      }
    }
    child {
      kind: NAME
      text: "dtls1_min_mtu"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "void"
            }
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: RETURN
        text: "return"
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            child {
              kind: NAME
              text: "g_probable_mtu"
            }
            child {
              kind: INDEX
              text: "["
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: SIZEOF
                  text: "sizeof"
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "g_probable_mtu"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: "/"
                }
                child {
                  kind: SIZEOF
                  text: "sizeof"
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "g_probable_mtu"
                          }
                          child {
                            kind: INDEX
                            text: "["
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "0"
                                literal {
                                  type: number_type
                                }
                              }
                              tail: "]"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                child {
                  kind: OPERATOR
                  text: "-"
                }
                child {
                  kind: LITERAL
                  text: "1"
                  literal {
                    type: number_type
                  }
                }
                tail: "]"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "}"
      }
    }
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "static"
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "unsigned"
      }
      child {
        kind: NAME
        text: "int"
      }
    }
    child {
      kind: NAME
      text: "dtls1_guess_mtu"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "curr_mtu"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "i"
          }
          tail: ";"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "curr_mtu"
            }
            child {
              kind: OPERATOR
              text: "=="
            }
            child {
              kind: LITERAL
              text: "0"
              literal {
                type: number_type
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return"
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "g_probable_mtu"
                  }
                  child {
                    kind: INDEX
                    text: "["
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                          type: number_type
                        }
                      }
                      tail: "]"
                    }
                  }
                }
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: FOR
        text: "for"
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "i"
              }
              child {
                kind: OPERATOR
                text: "="
              }
              child {
                kind: LITERAL
                text: "0"
                literal {
                  type: number_type
                }
              }
              tail: ";"
            }
          }
          child {
            kind: CONDITION
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "i"
              }
              child {
                kind: OPERATOR
                text: "&lt;"
              }
              child {
                kind: SIZEOF
                text: "sizeof"
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "g_probable_mtu"
                      }
                    }
                    tail: ")"
                  }
                }
              }
              child {
                kind: OPERATOR
                text: "/"
              }
              child {
                kind: SIZEOF
                text: "sizeof"
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "g_probable_mtu"
                        }
                        child {
                          kind: INDEX
                          text: "["
                          child {
                            kind: EXPR
                            child {
                              kind: LITERAL
                              text: "0"
                              literal {
                                type: number_type
                              }
                            }
                            tail: "]"
                          }
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
          }
          child {
            kind: INCR
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "i"
              }
              child {
                kind: OPERATOR
                text: "++"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: BLOCK
          child {
            kind: IF
            text: "if"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "curr_mtu"
                }
                child {
                  kind: OPERATOR
                  text: "&gt;"
                }
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "g_probable_mtu"
                  }
                  child {
                    kind: INDEX
                    text: "["
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "i"
                      }
                      tail: "]"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return"
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "g_probable_mtu"
                      }
                      child {
                        kind: INDEX
                        text: "["
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "i"
                          }
                          tail: "]"
                        }
                      }
                    }
                    tail: ";"
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: RETURN
        text: "return"
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "curr_mtu"
          }
          tail: ";"
        }
        tail: "}"
      }
    }
  }
  child {
    kind: FUNCTION
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "void"
      }
    }
    child {
      kind: NAME
      text: "dtls1_get_message_header"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "data"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              child {
                kind: NAME
                text: "struct"
              }
              child {
                kind: NAME
                text: "hm_header_st"
              }
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "msg_hdr"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "memset"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "msg_hdr"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "0x00"
                    literal {
                      type: number_type
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: SIZEOF
                    text: "sizeof"
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          text: "struct"
                          child {
                            kind: NAME
                            text: "hm_header_st"
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "msg_hdr"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "type"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: OPERATOR
            text: "*"
          }
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "data"
          }
          child {
            kind: OPERATOR
            text: "++"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "n2l3"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "data"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "msg_hdr"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "msg_len"
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "n2s"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "data"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "msg_hdr"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "seq"
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "n2l3"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "data"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "msg_hdr"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "frag_off"
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "n2l3"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "data"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "msg_hdr"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "frag_len"
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
        tail: "}"
      }
    }
  }
  child {
    kind: FUNCTION
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "void"
      }
    }
    child {
      kind: NAME
      text: "dtls1_get_ccs_header"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "data"
          }
        }
        tail: ","
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              child {
                kind: NAME
                text: "struct"
              }
              child {
                kind: NAME
                text: "ccs_header_st"
              }
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "ccs_hdr"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "memset"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "ccs_hdr"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "0x00"
                    literal {
                      type: number_type
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: SIZEOF
                    text: "sizeof"
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          text: "struct"
                          child {
                            kind: NAME
                            text: "ccs_header_st"
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            child {
              kind: NAME
              text: "ccs_hdr"
            }
            child {
              kind: OPERATOR
              text: "-&gt;"
            }
            child {
              kind: NAME
              text: "type"
            }
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: OPERATOR
            text: "*"
          }
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "data"
          }
          child {
            kind: OPERATOR
            text: "++"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "}"
      }
    }
  }
  child {
    kind: FUNCTION
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "int"
      }
    }
    child {
      kind: NAME
      text: "dtls1_shutdown"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "SSL"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "s"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "ret"
          }
          tail: ";"
        }
      }
      child {
        kind: IFNDEF
        text: "#"
        child {
          kind: DIRECTIVE
          text: "ifndef"
        }
        child {
          kind: NAME
          text: "OPENSSL_NO_SCTP"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: CALL
              child {
                kind: NAME
                text: "BIO_dgram_is_sctp"
              }
              child {
                kind: ARGUMENT_LIST
                text: "("
                child {
                  kind: ARGUMENT
                  child {
                    kind: EXPR
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "SSL_get_wbio"
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "s"
                            }
                          }
                          tail: ")"
                        }
                      }
                    }
                  }
                  tail: ")"
                }
              }
            }
            child {
              kind: OPERATOR
              text: "&amp;&amp;"
            }
            child {
              kind: OPERATOR
              text: "!"
            }
            child {
              kind: OPERATOR
              text: "("
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "shutdown"
              }
            }
            child {
              kind: OPERATOR
              text: "&amp;"
            }
            child {
              kind: NAME
              text: "SSL_SENT_SHUTDOWN"
            }
            child {
              kind: OPERATOR
              text: ")"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "ret"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "BIO_dgram_sctp_wait_for_dry"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "SSL_get_wbio"
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "s"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: IF
              text: "if"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "ret"
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                  }
                  child {
                    kind: LITERAL
                    text: "0"
                    literal {
                      type: number_type
                    }
                  }
                  tail: ")"
                }
              }
              child {
                kind: THEN
                child {
                  kind: BLOCK
                  child {
                    kind: RETURN
                    text: "return"
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "-"
                      }
                      child {
                        kind: LITERAL
                        text: "1"
                        literal {
                          type: number_type
                        }
                      }
                      tail: ";"
                    }
                  }
                }
              }
            }
            child {
              kind: IF
              text: "if"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "ret"
                  }
                  child {
                    kind: OPERATOR
                    text: "=="
                  }
                  child {
                    kind: LITERAL
                    text: "0"
                    literal {
                      type: number_type
                    }
                  }
                  tail: ")"
                }
              }
              child {
                kind: THEN
                child {
                  kind: BLOCK
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "BIO_ctrl"
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "SSL_get_wbio"
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "s"
                                      }
                                    }
                                    tail: ")"
                                  }
                                }
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "BIO_CTRL_DGRAM_SCTP_SAVE_SHUTDOWN"
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "1"
                                literal {
                                  type: number_type
                                }
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "NULL"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                      tail: ";"
                    }
                  }
                }
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: ENDIF
        text: "#"
        child {
          kind: DIRECTIVE
          text: "endif"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "ret"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "ssl3_shutdown"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "s"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: IFNDEF
        text: "#"
        child {
          kind: DIRECTIVE
          text: "ifndef"
        }
        child {
          kind: NAME
          text: "OPENSSL_NO_SCTP"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "BIO_ctrl"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "SSL_get_wbio"
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "s"
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "BIO_CTRL_DGRAM_SCTP_SAVE_SHUTDOWN"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "0"
                    literal {
                      type: number_type
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "NULL"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: ENDIF
        text: "#"
        child {
          kind: DIRECTIVE
          text: "endif"
        }
      }
      child {
        kind: RETURN
        text: "return"
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "ret"
          }
          tail: ";"
        }
        tail: "}"
      }
    }
  }
  child {
    kind: IFNDEF
    text: "#"
    child {
      kind: DIRECTIVE
      text: "ifndef"
    }
    child {
      kind: NAME
      text: "OPENSSL_NO_HEARTBEATS"
    }
  }
  child {
    kind: FUNCTION
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "int"
      }
    }
    child {
      kind: NAME
      text: "dtls1_process_heartbeat"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "SSL"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "s"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "p"
          }
          child {
            kind: INIT
            text: "="
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "&amp;"
              }
              child {
                kind: NAME
                child {
                  kind: NAME
                  text: "s"
                }
                child {
                  kind: OPERATOR
                  text: "-&gt;"
                }
                child {
                  kind: NAME
                  text: "s3"
                }
                child {
                  kind: OPERATOR
                  text: "-&gt;"
                }
                child {
                  kind: NAME
                  text: "rrec"
                }
                child {
                  kind: OPERATOR
                  text: "."
                }
                child {
                  kind: NAME
                  text: "data"
                }
                child {
                  kind: INDEX
                  text: "["
                  child {
                    kind: EXPR
                    child {
                      kind: LITERAL
                      text: "0"
                      literal {
                        type: number_type
                      }
                    }
                    tail: "]"
                  }
                }
              }
            }
          }
          tail: ","
        }
        child {
          kind: MODIFIER
          text: "*"
        }
        child {
          kind: DECL
          child {
            kind: TYPE
            text: "This is just a placeholder. Please ignore this child."
          }
          child {
            kind: NAME
            text: "pl"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "short"
            }
          }
          child {
            kind: NAME
            text: "hbtype"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "payload"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "padding"
          }
          child {
            kind: INIT
            text: "="
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "16"
                literal {
                  type: number_type
                }
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* Use minimum padding */"
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "msg_callback"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "s"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "msg_callback"
                    }
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: LITERAL
                          text: "0"
                          literal {
                            type: number_type
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "version"
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "TLS1_RT_HEARTBEAT"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: OPERATOR
                          text: "&amp;"
                        }
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "s3"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "rrec"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "data"
                          }
                          child {
                            kind: INDEX
                            text: "["
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "0"
                                literal {
                                  type: number_type
                                }
                              }
                              tail: "]"
                            }
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "s3"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "rrec"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "length"
                          }
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "s"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "msg_callback_arg"
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/* Read type and payload length first */"
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: LITERAL
              text: "1"
              literal {
                type: number_type
              }
            }
            child {
              kind: OPERATOR
              text: "+"
            }
            child {
              kind: LITERAL
              text: "2"
              literal {
                type: number_type
              }
            }
            child {
              kind: OPERATOR
              text: "+"
            }
            child {
              kind: LITERAL
              text: "16"
              literal {
                type: number_type
              }
            }
            child {
              kind: OPERATOR
              text: "&gt;"
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "s3"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "rrec"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "length"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return"
              child {
                kind: EXPR
                child {
                  kind: LITERAL
                  text: "0"
                  literal {
                    type: number_type
                  }
                }
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/* silently discard */"
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "hbtype"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: OPERATOR
            text: "*"
          }
          child {
            kind: NAME
            text: "p"
          }
          child {
            kind: OPERATOR
            text: "++"
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "n2s"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "p"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "payload"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: LITERAL
              text: "1"
              literal {
                type: number_type
              }
            }
            child {
              kind: OPERATOR
              text: "+"
            }
            child {
              kind: LITERAL
              text: "2"
              literal {
                type: number_type
              }
            }
            child {
              kind: OPERATOR
              text: "+"
            }
            child {
              kind: NAME
              text: "payload"
            }
            child {
              kind: OPERATOR
              text: "+"
            }
            child {
              kind: LITERAL
              text: "16"
              literal {
                type: number_type
              }
            }
            child {
              kind: OPERATOR
              text: "&gt;"
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "s3"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "rrec"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "length"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return"
              child {
                kind: EXPR
                child {
                  kind: LITERAL
                  text: "0"
                  literal {
                    type: number_type
                  }
                }
                tail: ";"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/* silently discard per RFC 6520 sec. 4 */"
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "pl"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            text: "p"
          }
          tail: ";"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "hbtype"
            }
            child {
              kind: OPERATOR
              text: "=="
            }
            child {
              kind: NAME
              text: "TLS1_HB_REQUEST"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: DECL_STMT
              child {
                kind: DECL
                child {
                  kind: TYPE
                  child {
                    kind: NAME
                    text: "unsigned"
                  }
                  child {
                    kind: NAME
                    text: "char"
                  }
                  child {
                    kind: MODIFIER
                    text: "*"
                  }
                }
                child {
                  kind: NAME
                  text: "buffer"
                }
                tail: ","
              }
              child {
                kind: MODIFIER
                text: "*"
              }
              child {
                kind: DECL
                child {
                  kind: TYPE
                  text: "This is just a placeholder. Please ignore this child."
                }
                child {
                  kind: NAME
                  text: "bp"
                }
                tail: ";"
              }
            }
            child {
              kind: DECL_STMT
              child {
                kind: DECL
                child {
                  kind: TYPE
                  child {
                    kind: NAME
                    text: "unsigned"
                  }
                  child {
                    kind: NAME
                    text: "int"
                  }
                }
                child {
                  kind: NAME
                  text: "write_length"
                }
                child {
                  kind: INIT
                  text: "="
                  child {
                    kind: EXPR
                    child {
                      kind: LITERAL
                      text: "1"
                      literal {
                        type: number_type
                      }
                    }
                    child {
                      kind: COMMENT
                      text: "/* heartbeat type */"
                    }
                    child {
                      kind: OPERATOR
                      text: "+"
                    }
                    child {
                      kind: LITERAL
                      text: "2"
                      literal {
                        type: number_type
                      }
                    }
                    child {
                      kind: COMMENT
                      text: "/* heartbeat length */"
                    }
                    child {
                      kind: OPERATOR
                      text: "+"
                    }
                    child {
                      kind: NAME
                      text: "payload"
                    }
                    child {
                      kind: OPERATOR
                      text: "+"
                    }
                    child {
                      kind: NAME
                      text: "padding"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: DECL_STMT
              child {
                kind: DECL
                child {
                  kind: TYPE
                  child {
                    kind: NAME
                    text: "int"
                  }
                }
                child {
                  kind: NAME
                  text: "r"
                }
                tail: ";"
              }
            }
            child {
              kind: IF
              text: "if"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "write_length"
                  }
                  child {
                    kind: OPERATOR
                    text: "&gt;"
                  }
                  child {
                    kind: NAME
                    text: "SSL3_RT_MAX_PLAIN_LENGTH"
                  }
                  tail: ")"
                }
              }
              child {
                kind: THEN
                child {
                  kind: BLOCK
                  child {
                    kind: RETURN
                    text: "return"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                          type: number_type
                        }
                      }
                      tail: ";"
                    }
                  }
                }
              }
            }
            child {
              kind: COMMENT
              text: "/* Allocate memory for the response, size is 1 byte$\n$                 * message type, plus 2 bytes payload length, plus$\n$                 * payload, plus padding$\n$                 */"
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "buffer"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "OPENSSL_malloc"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "write_length"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "bp"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: NAME
                  text: "buffer"
                }
                tail: ";"
              }
            }
            child {
              kind: COMMENT
              text: "/* Enter response type, length and copy payload */"
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "*"
                }
                child {
                  kind: NAME
                  text: "bp"
                }
                child {
                  kind: OPERATOR
                  text: "++"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: NAME
                  text: "TLS1_HB_RESPONSE"
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "s2n"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "payload"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "bp"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "memcpy"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "bp"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "pl"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "payload"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "bp"
                }
                child {
                  kind: OPERATOR
                  text: "+="
                }
                child {
                  kind: NAME
                  text: "payload"
                }
                tail: ";"
              }
            }
            child {
              kind: COMMENT
              text: "/* Random padding */"
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "RAND_pseudo_bytes"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "bp"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "padding"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "r"
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "dtls1_write_bytes"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "s"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "TLS1_RT_HEARTBEAT"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "buffer"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "write_length"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: IF
              text: "if"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "r"
                  }
                  child {
                    kind: OPERATOR
                    text: "&gt;="
                  }
                  child {
                    kind: LITERAL
                    text: "0"
                    literal {
                      type: number_type
                    }
                  }
                  child {
                    kind: OPERATOR
                    text: "&amp;&amp;"
                  }
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "s"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "msg_callback"
                    }
                  }
                  tail: ")"
                }
              }
              child {
                kind: THEN
                child {
                  kind: BLOCK
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "msg_callback"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "1"
                                literal {
                                  type: number_type
                                }
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "s"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-&gt;"
                                }
                                child {
                                  kind: NAME
                                  text: "version"
                                }
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "TLS1_RT_HEARTBEAT"
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "buffer"
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "write_length"
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "s"
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "s"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-&gt;"
                                }
                                child {
                                  kind: NAME
                                  text: "msg_callback_arg"
                                }
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                      tail: ";"
                    }
                  }
                }
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "OPENSSL_free"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "buffer"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: IF
              text: "if"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "r"
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                  }
                  child {
                    kind: LITERAL
                    text: "0"
                    literal {
                      type: number_type
                    }
                  }
                  tail: ")"
                }
              }
              child {
                kind: THEN
                child {
                  kind: BLOCK
                  child {
                    kind: RETURN
                    text: "return"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "r"
                      }
                      tail: ";"
                    }
                  }
                }
              }
              tail: "}"
            }
          }
        }
        child {
          kind: ELSEIF
          text: "else"
          child {
            kind: IF
            text: "if"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "hbtype"
                }
                child {
                  kind: OPERATOR
                  text: "=="
                }
                child {
                  kind: NAME
                  text: "TLS1_HB_RESPONSE"
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              child {
                kind: BLOCK
                text: "{"
                child {
                  kind: DECL_STMT
                  child {
                    kind: DECL
                    child {
                      kind: TYPE
                      child {
                        kind: NAME
                        text: "unsigned"
                      }
                      child {
                        kind: NAME
                        text: "int"
                      }
                    }
                    child {
                      kind: NAME
                      text: "seq"
                    }
                    tail: ";"
                  }
                }
                child {
                  kind: COMMENT
                  text: "/* We only send sequence numbers (2 bytes unsigned int),$\n$                 * and 16 random bytes, so we just try to read the$\n$                 * sequence number */"
                }
                child {
                  kind: EXPR_STMT
                  child {
                    kind: EXPR
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "n2s"
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "pl"
                            }
                          }
                          tail: ","
                        }
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "seq"
                            }
                          }
                          tail: ")"
                        }
                      }
                    }
                    tail: ";"
                  }
                }
                child {
                  kind: IF
                  text: "if"
                  child {
                    kind: CONDITION
                    text: "("
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "payload"
                      }
                      child {
                        kind: OPERATOR
                        text: "=="
                      }
                      child {
                        kind: LITERAL
                        text: "18"
                        literal {
                          type: number_type
                        }
                      }
                      child {
                        kind: OPERATOR
                        text: "&amp;&amp;"
                      }
                      child {
                        kind: NAME
                        text: "seq"
                      }
                      child {
                        kind: OPERATOR
                        text: "=="
                      }
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "s"
                        }
                        child {
                          kind: OPERATOR
                          text: "-&gt;"
                        }
                        child {
                          kind: NAME
                          text: "tlsext_hb_seq"
                        }
                      }
                      tail: ")"
                    }
                  }
                  child {
                    kind: THEN
                    child {
                      kind: BLOCK
                      text: "{"
                      child {
                        kind: EXPR_STMT
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "dtls1_stop_timer"
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "s"
                                  }
                                }
                                tail: ")"
                              }
                            }
                          }
                          tail: ";"
                        }
                      }
                      child {
                        kind: EXPR_STMT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "s"
                            }
                            child {
                              kind: OPERATOR
                              text: "-&gt;"
                            }
                            child {
                              kind: NAME
                              text: "tlsext_hb_seq"
                            }
                          }
                          child {
                            kind: OPERATOR
                            text: "++"
                          }
                          tail: ";"
                        }
                      }
                      child {
                        kind: EXPR_STMT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "s"
                            }
                            child {
                              kind: OPERATOR
                              text: "-&gt;"
                            }
                            child {
                              kind: NAME
                              text: "tlsext_hb_pending"
                            }
                          }
                          child {
                            kind: OPERATOR
                            text: "="
                          }
                          child {
                            kind: LITERAL
                            text: "0"
                            literal {
                              type: number_type
                            }
                          }
                          tail: ";"
                        }
                        tail: "}"
                      }
                    }
                  }
                  tail: "}"
                }
              }
            }
          }
        }
      }
      child {
        kind: RETURN
        text: "return"
        child {
          kind: EXPR
          child {
            kind: LITERAL
            text: "0"
            literal {
              type: number_type
            }
          }
          tail: ";"
        }
        tail: "}"
      }
    }
  }
  child {
    kind: FUNCTION
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "int"
      }
    }
    child {
      kind: NAME
      text: "dtls1_heartbeat"
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "SSL"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "s"
          }
        }
        tail: ")"
      }
    }
    child {
      kind: BLOCK
      text: "{"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "char"
            }
            child {
              kind: MODIFIER
              text: "*"
            }
          }
          child {
            kind: NAME
            text: "buf"
          }
          tail: ","
        }
        child {
          kind: MODIFIER
          text: "*"
        }
        child {
          kind: DECL
          child {
            kind: TYPE
            text: "This is just a placeholder. Please ignore this child."
          }
          child {
            kind: NAME
            text: "p"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "ret"
          }
          tail: ";"
        }
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "payload"
          }
          child {
            kind: INIT
            text: "="
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "18"
                literal {
                  type: number_type
                }
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* Sequence number + random bytes */"
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "unsigned"
            }
            child {
              kind: NAME
              text: "int"
            }
          }
          child {
            kind: NAME
            text: "padding"
          }
          child {
            kind: INIT
            text: "="
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "16"
                literal {
                  type: number_type
                }
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* Use minimum padding */"
      }
      child {
        kind: COMMENT
        text: "/* Only send if peer supports and accepts HB requests... */"
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: OPERATOR
              text: "!"
            }
            child {
              kind: OPERATOR
              text: "("
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "tlsext_heartbeat"
              }
            }
            child {
              kind: OPERATOR
              text: "&amp;"
            }
            child {
              kind: NAME
              text: "SSL_TLSEXT_HB_ENABLED"
            }
            child {
              kind: OPERATOR
              text: ")"
            }
            child {
              kind: OPERATOR
              text: "||"
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "tlsext_heartbeat"
              }
            }
            child {
              kind: OPERATOR
              text: "&amp;"
            }
            child {
              kind: NAME
              text: "SSL_TLSEXT_HB_DONT_SEND_REQUESTS"
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "SSLerr"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "SSL_F_DTLS1_HEARTBEAT"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "SSL_R_TLS_HEARTBEAT_PEER_DOESNT_ACCEPT"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: RETURN
              text: "return"
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "-"
                }
                child {
                  kind: LITERAL
                  text: "1"
                  literal {
                    type: number_type
                  }
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/* ...and there is none in flight yet... */"
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "tlsext_hb_pending"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "SSLerr"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "SSL_F_DTLS1_HEARTBEAT"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "SSL_R_TLS_HEARTBEAT_PENDING"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: RETURN
              text: "return"
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "-"
                }
                child {
                  kind: LITERAL
                  text: "1"
                  literal {
                    type: number_type
                  }
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/* ...and no handshake in progress. */"
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: CALL
              child {
                kind: NAME
                text: "SSL_in_init"
              }
              child {
                kind: ARGUMENT_LIST
                text: "("
                child {
                  kind: ARGUMENT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "s"
                    }
                  }
                  tail: ")"
                }
              }
            }
            child {
              kind: OPERATOR
              text: "||"
            }
            child {
              kind: NAME
              child {
                kind: NAME
                text: "s"
              }
              child {
                kind: OPERATOR
                text: "-&gt;"
              }
              child {
                kind: NAME
                text: "in_handshake"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "SSLerr"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "SSL_F_DTLS1_HEARTBEAT"
                        }
                      }
                      tail: ","
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "SSL_R_UNEXPECTED_MESSAGE"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: RETURN
              text: "return"
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "-"
                }
                child {
                  kind: LITERAL
                  text: "1"
                  literal {
                    type: number_type
                  }
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/* Check if padding is too long, payload and padding$\n$         * must not exceed 2^14 - 3 = 16381 bytes in total.$\n$         */"
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "OPENSSL_assert"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "payload"
                  }
                  child {
                    kind: OPERATOR
                    text: "+"
                  }
                  child {
                    kind: NAME
                    text: "padding"
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;="
                  }
                  child {
                    kind: LITERAL
                    text: "16381"
                    literal {
                      type: number_type
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* Create HeartBeat message, we just use a sequence number$\n$         * as payload to distuingish different messages and add$\n$         * some random stuff.$\n$         *  - Message Type, 1 byte$\n$         *  - Payload Length, 2 bytes (unsigned int)$\n$         *  - Payload, the sequence number (2 bytes uint)$\n$         *  - Payload, random bytes (16 bytes uint)$\n$         *  - Padding$\n$         */"
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "buf"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "OPENSSL_malloc"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "1"
                    literal {
                      type: number_type
                    }
                  }
                  child {
                    kind: OPERATOR
                    text: "+"
                  }
                  child {
                    kind: LITERAL
                    text: "2"
                    literal {
                      type: number_type
                    }
                  }
                  child {
                    kind: OPERATOR
                    text: "+"
                  }
                  child {
                    kind: NAME
                    text: "payload"
                  }
                  child {
                    kind: OPERATOR
                    text: "+"
                  }
                  child {
                    kind: NAME
                    text: "padding"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "p"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            text: "buf"
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* Message Type */"
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "*"
          }
          child {
            kind: NAME
            text: "p"
          }
          child {
            kind: OPERATOR
            text: "++"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: NAME
            text: "TLS1_HB_REQUEST"
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* Payload length (18 bytes here) */"
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "s2n"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "payload"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "p"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* Sequence number */"
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "s2n"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "s"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "tlsext_hb_seq"
                    }
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "p"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* 16 random bytes */"
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "RAND_pseudo_bytes"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "p"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "16"
                    literal {
                      type: number_type
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "p"
          }
          child {
            kind: OPERATOR
            text: "+="
          }
          child {
            kind: LITERAL
            text: "16"
            literal {
              type: number_type
            }
          }
          tail: ";"
        }
      }
      child {
        kind: COMMENT
        text: "/* Random padding */"
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "RAND_pseudo_bytes"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "p"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "padding"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "ret"
          }
          child {
            kind: OPERATOR
            text: "="
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "dtls1_write_bytes"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "s"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "TLS1_RT_HEARTBEAT"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "buf"
                  }
                }
                tail: ","
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "3"
                    literal {
                      type: number_type
                    }
                  }
                  child {
                    kind: OPERATOR
                    text: "+"
                  }
                  child {
                    kind: NAME
                    text: "payload"
                  }
                  child {
                    kind: OPERATOR
                    text: "+"
                  }
                  child {
                    kind: NAME
                    text: "padding"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: IF
        text: "if"
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              text: "ret"
            }
            child {
              kind: OPERATOR
              text: "&gt;="
            }
            child {
              kind: LITERAL
              text: "0"
              literal {
                type: number_type
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          child {
            kind: BLOCK
            text: "{"
            child {
              kind: IF
              text: "if"
              child {
                kind: CONDITION
                text: "("
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "s"
                    }
                    child {
                      kind: OPERATOR
                      text: "-&gt;"
                    }
                    child {
                      kind: NAME
                      text: "msg_callback"
                    }
                  }
                  tail: ")"
                }
              }
              child {
                kind: THEN
                child {
                  kind: BLOCK
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "s"
                          }
                          child {
                            kind: OPERATOR
                            text: "-&gt;"
                          }
                          child {
                            kind: NAME
                            text: "msg_callback"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "1"
                                literal {
                                  type: number_type
                                }
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "s"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-&gt;"
                                }
                                child {
                                  kind: NAME
                                  text: "version"
                                }
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "TLS1_RT_HEARTBEAT"
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "buf"
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "3"
                                literal {
                                  type: number_type
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "+"
                              }
                              child {
                                kind: NAME
                                text: "payload"
                              }
                              child {
                                kind: OPERATOR
                                text: "+"
                              }
                              child {
                                kind: NAME
                                text: "padding"
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "s"
                              }
                            }
                            tail: ","
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "s"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "-&gt;"
                                }
                                child {
                                  kind: NAME
                                  text: "msg_callback_arg"
                                }
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                      tail: ";"
                    }
                  }
                }
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "dtls1_start_timer"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "s"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ";"
              }
            }
            child {
              kind: EXPR_STMT
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "s"
                  }
                  child {
                    kind: OPERATOR
                    text: "-&gt;"
                  }
                  child {
                    kind: NAME
                    text: "tlsext_hb_pending"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "="
                }
                child {
                  kind: LITERAL
                  text: "1"
                  literal {
                    type: number_type
                  }
                }
                tail: ";"
              }
              tail: "}"
            }
          }
        }
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              text: "OPENSSL_free"
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "buf"
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
      }
      child {
        kind: RETURN
        text: "return"
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "ret"
          }
          tail: ";"
        }
        tail: "}"
      }
    }
  }
  child {
    kind: ENDIF
    text: "#"
    child {
      kind: DIRECTIVE
      text: "endif"
    }
  }
  unit {
    filename: "src.c"
    revision: "0.9.5"
    language: C
  }
}
